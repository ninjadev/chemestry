var Ea=Object.defineProperty;var Ms=Object.getOwnPropertySymbols;var ya=Object.prototype.hasOwnProperty,xa=Object.prototype.propertyIsEnumerable;var Pr=(s,e,t)=>e in s?Ea(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,qn=(s,e)=>{for(var t in e||(e={}))ya.call(e,t)&&Pr(s,t,e[t]);if(Ms)for(var t of Ms(e))xa.call(e,t)&&Pr(s,t,e[t]);return s};var x=(s,e,t)=>(Pr(s,typeof e!="symbol"?e+"":e,t),t);const Ca=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerpolicy&&(r.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?r.credentials="include":i.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(i){if(i.ep)return;i.ep=!0;const r=t(i);fetch(i.href,r)}};Ca();var va="assets/music.6dce9e0a.ogg";/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const J1="139",Qa=0,Es=1,_a=2,dA=1,Ia=2,Ai=3,di=0,Zt=1,At=2,fA=1,F2=0,bn=1,ys=2,xs=3,Cs=4,ba=5,yn=100,Fa=101,Ta=102,vs=103,Qs=104,Sa=200,Da=201,Ua=202,Ga=203,pA=204,gA=205,Ra=206,Na=207,za=208,La=209,Pa=210,ka=0,Ya=1,Ha=2,R1=3,Va=4,Ka=5,ja=6,Wa=7,Er=0,Oa=1,Ja=2,Xt=0,mA=1,Za=2,Xa=3,qa=4,$a=5,wA=300,Dn=301,Un=302,Gn=303,N1=304,yr=306,dr=1e3,Ot=1001,z1=1002,gt=1003,_s=1004,Is=1005,St=1006,e3=1007,xr=1008,O2=1009,t3=1010,n3=1011,fi=1012,i3=1013,ar=1014,V2=1015,Fn=1016,r3=1017,s3=1018,Tn=1020,o3=1021,BA=1022,Jt=1023,A3=1024,a3=1025,j2=1026,Rn=1027,c3=1028,l3=1029,h3=1030,u3=1031,d3=1033,kr=33776,Yr=33777,Hr=33778,Vr=33779,bs=35840,Fs=35841,Ts=35842,Ss=35843,f3=36196,Ds=37492,Us=37496,Gs=37808,Rs=37809,Ns=37810,zs=37811,Ls=37812,Ps=37813,ks=37814,Ys=37815,Hs=37816,Vs=37817,Ks=37818,js=37819,Ws=37820,Os=37821,Js=36492,p3=2200,g3=2201,m3=2202,fr=2300,pr=2301,Kr=2302,xn=2400,Cn=2401,gr=2402,Z1=2500,MA=2501,w3=0,B2=3e3,Ve=3001,B3=3200,M3=3201,kn=0,E3=1,g2="srgb",K2="srgb-linear",jr=7680,y3=519,pi=35044,mr=35048,Zs="300 es",L1=1035;class Z2{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,e);e.target=null}}}const wt=[];for(let s=0;s<256;s++)wt[s]=(s<16?"0":"")+s.toString(16);const Wr=Math.PI/180,P1=180/Math.PI;function A2(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(wt[s&255]+wt[s>>8&255]+wt[s>>16&255]+wt[s>>24&255]+"-"+wt[e&255]+wt[e>>8&255]+"-"+wt[e>>16&15|64]+wt[e>>24&255]+"-"+wt[t&63|128]+wt[t>>8&255]+"-"+wt[t>>16&255]+wt[t>>24&255]+wt[n&255]+wt[n>>8&255]+wt[n>>16&255]+wt[n>>24&255]).toLowerCase()}function vt(s,e,t){return Math.max(e,Math.min(t,s))}function x3(s,e){return(s%e+e)%e}function Or(s,e,t){return(1-t)*s+t*e}function Xs(s){return(s&s-1)===0&&s!==0}function k1(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}class V{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*n-o*i+e.x,this.y=r*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}V.prototype.isVector2=!0;class yt{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,o,A,a,c){const l=this.elements;return l[0]=e,l[1]=i,l[2]=A,l[3]=t,l[4]=r,l[5]=a,l[6]=n,l[7]=o,l[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],A=n[3],a=n[6],c=n[1],l=n[4],h=n[7],u=n[2],f=n[5],g=n[8],p=i[0],d=i[3],m=i[6],v=i[1],y=i[4],Q=i[7],M=i[2],I=i[5],T=i[8];return r[0]=o*p+A*v+a*M,r[3]=o*d+A*y+a*I,r[6]=o*m+A*Q+a*T,r[1]=c*p+l*v+h*M,r[4]=c*d+l*y+h*I,r[7]=c*m+l*Q+h*T,r[2]=u*p+f*v+g*M,r[5]=u*d+f*y+g*I,r[8]=u*m+f*Q+g*T,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],A=e[5],a=e[6],c=e[7],l=e[8];return t*o*l-t*A*c-n*r*l+n*A*a+i*r*c-i*o*a}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],A=e[5],a=e[6],c=e[7],l=e[8],h=l*o-A*c,u=A*a-l*r,f=c*r-o*a,g=t*h+n*u+i*f;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const p=1/g;return e[0]=h*p,e[1]=(i*c-l*n)*p,e[2]=(A*n-i*o)*p,e[3]=u*p,e[4]=(l*t-i*a)*p,e[5]=(i*r-A*t)*p,e[6]=f*p,e[7]=(n*a-c*t)*p,e[8]=(o*t-n*r)*p,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,o,A){const a=Math.cos(r),c=Math.sin(r);return this.set(n*a,n*c,-n*(a*o+c*A)+o+e,-i*c,i*a,-i*(-c*o+a*A)+A+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,r=i[0],o=i[3],A=i[6],a=i[1],c=i[4],l=i[7];return i[0]=t*r+n*a,i[3]=t*o+n*c,i[6]=t*A+n*l,i[1]=-n*r+t*a,i[4]=-n*o+t*c,i[7]=-n*A+t*l,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}yt.prototype.isMatrix3=!0;function EA(s){for(let e=s.length-1;e>=0;--e)if(s[e]>65535)return!0;return!1}function gi(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function W2(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function cr(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}const Jr={[g2]:{[K2]:W2},[K2]:{[g2]:cr}},Ht={legacyMode:!0,get workingColorSpace(){return K2},set workingColorSpace(s){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(s,e,t){if(this.legacyMode||e===t||!e||!t)return s;if(Jr[e]&&Jr[e][t]!==void 0){const n=Jr[e][t];return s.r=n(s.r),s.g=n(s.g),s.b=n(s.b),s}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(s,e){return this.convert(s,this.workingColorSpace,e)},toWorkingColorSpace:function(s,e){return this.convert(s,e,this.workingColorSpace)}},yA={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ut={r:0,g:0,b:0},Vt={h:0,s:0,l:0},_i={h:0,s:0,l:0};function Zr(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}function Ii(s,e){return e.r=s.r,e.g=s.g,e.b=s.b,e}class ie{constructor(e,t,n){return t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=g2){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Ht.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=K2){return this.r=e,this.g=t,this.b=n,Ht.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=K2){if(e=x3(e,1),t=vt(t,0,1),n=vt(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,o=2*n-r;this.r=Zr(o,r,e+1/3),this.g=Zr(o,r,e),this.b=Zr(o,r,e-1/3)}return Ht.toWorkingColorSpace(this,i),this}setStyle(e,t=g2){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let r;const o=i[1],A=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(A))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,Ht.toWorkingColorSpace(this,t),n(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(A))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,Ht.toWorkingColorSpace(this,t),n(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(A)){const a=parseFloat(r[1])/360,c=parseInt(r[2],10)/100,l=parseInt(r[3],10)/100;return n(r[4]),this.setHSL(a,c,l,t)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],o=r.length;if(o===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,Ht.toWorkingColorSpace(this,t),this;if(o===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,Ht.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=g2){const n=yA[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=W2(e.r),this.g=W2(e.g),this.b=W2(e.b),this}copyLinearToSRGB(e){return this.r=cr(e.r),this.g=cr(e.g),this.b=cr(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=g2){return Ht.fromWorkingColorSpace(Ii(this,ut),e),vt(ut.r*255,0,255)<<16^vt(ut.g*255,0,255)<<8^vt(ut.b*255,0,255)<<0}getHexString(e=g2){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=K2){Ht.fromWorkingColorSpace(Ii(this,ut),t);const n=ut.r,i=ut.g,r=ut.b,o=Math.max(n,i,r),A=Math.min(n,i,r);let a,c;const l=(A+o)/2;if(A===o)a=0,c=0;else{const h=o-A;switch(c=l<=.5?h/(o+A):h/(2-o-A),o){case n:a=(i-r)/h+(i<r?6:0);break;case i:a=(r-n)/h+2;break;case r:a=(n-i)/h+4;break}a/=6}return e.h=a,e.s=c,e.l=l,e}getRGB(e,t=K2){return Ht.fromWorkingColorSpace(Ii(this,ut),t),e.r=ut.r,e.g=ut.g,e.b=ut.b,e}getStyle(e=g2){return Ht.fromWorkingColorSpace(Ii(this,ut),e),e!==g2?`color(${e} ${ut.r} ${ut.g} ${ut.b})`:`rgb(${ut.r*255|0},${ut.g*255|0},${ut.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(Vt),Vt.h+=e,Vt.s+=t,Vt.l+=n,this.setHSL(Vt.h,Vt.s,Vt.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Vt),e.getHSL(_i);const n=Or(Vt.h,_i.h,t),i=Or(Vt.s,_i.s,t),r=Or(Vt.l,_i.l,t);return this.setHSL(n,i,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}ie.NAMES=yA;ie.prototype.isColor=!0;ie.prototype.r=1;ie.prototype.g=1;ie.prototype.b=1;let nn;class X2{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement=="undefined")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{nn===void 0&&(nn=gi("canvas")),nn.width=e.width,nn.height=e.height;const n=nn.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=nn}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap){const t=gi("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=W2(r[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(W2(t[n]/255)*255):t[n]=W2(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class xA{constructor(e=null){this.uuid=A2(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,A=i.length;o<A;o++)i[o].isDataTexture?r.push(Xr(i[o].image)):r.push(Xr(i[o]))}else r=Xr(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function Xr(s){return typeof HTMLImageElement!="undefined"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&s instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&s instanceof ImageBitmap?X2.getDataURL(s):s.data?{data:Array.prototype.slice.call(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}xA.prototype.isSource=!0;let C3=0;class at extends Z2{constructor(e=at.DEFAULT_IMAGE,t=at.DEFAULT_MAPPING,n=Ot,i=Ot,r=St,o=xr,A=Jt,a=O2,c=1,l=B2){super(),Object.defineProperty(this,"id",{value:C3++}),this.uuid=A2(),this.name="",this.source=new xA(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=A,this.internalFormat=null,this.type=a,this.offset=new V(0,0),this.repeat=new V(1,1),this.center=new V(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new yt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==wA)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case dr:e.x=e.x-Math.floor(e.x);break;case Ot:e.x=e.x<0?0:1;break;case z1:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case dr:e.y=e.y-Math.floor(e.y);break;case Ot:e.y=e.y<0?0:1;break;case z1:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}at.DEFAULT_IMAGE=null;at.DEFAULT_MAPPING=wA;at.prototype.isTexture=!0;class Je{constructor(e=0,t=0,n=0,i=1){this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const a=e.elements,c=a[0],l=a[4],h=a[8],u=a[1],f=a[5],g=a[9],p=a[2],d=a[6],m=a[10];if(Math.abs(l-u)<.01&&Math.abs(h-p)<.01&&Math.abs(g-d)<.01){if(Math.abs(l+u)<.1&&Math.abs(h+p)<.1&&Math.abs(g+d)<.1&&Math.abs(c+f+m-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(c+1)/2,Q=(f+1)/2,M=(m+1)/2,I=(l+u)/4,T=(h+p)/4,U=(g+d)/4;return y>Q&&y>M?y<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(y),i=I/n,r=T/n):Q>M?Q<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(Q),n=I/i,r=U/i):M<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(M),n=T/r,i=U/r),this.set(n,i,r,t),this}let v=Math.sqrt((d-g)*(d-g)+(h-p)*(h-p)+(u-l)*(u-l));return Math.abs(v)<.001&&(v=1),this.x=(d-g)/v,this.y=(h-p)/v,this.z=(u-l)/v,this.w=Math.acos((c+f+m-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}Je.prototype.isVector4=!0;class je extends Z2{constructor(e,t,n={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new Je(0,0,e,t),this.scissorTest=!1,this.viewport=new Je(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new at(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:St,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0,this.texture.image=Object.assign({},e.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}je.prototype.isWebGLRenderTarget=!0;class Cr extends at{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=gt,this.minFilter=gt,this.wrapR=Ot,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Cr.prototype.isDataArrayTexture=!0;class v3 extends je{constructor(e,t,n){super(e,t),this.depth=n,this.texture=new Cr(null,e,t,n),this.texture.isRenderTargetTexture=!0}}v3.prototype.isWebGLArrayRenderTarget=!0;class X1 extends at{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=gt,this.minFilter=gt,this.wrapR=Ot,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}X1.prototype.isData3DTexture=!0;class Q3 extends je{constructor(e,t,n){super(e,t),this.depth=n,this.texture=new X1(null,e,t,n),this.texture.isRenderTargetTexture=!0}}Q3.prototype.isWebGL3DRenderTarget=!0;class _3 extends je{constructor(e,t,n,i={}){super(e,t,i);const r=this.texture;this.texture=[];for(let o=0;o<n;o++)this.texture[o]=r.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone();return this}}_3.prototype.isWebGLMultipleRenderTargets=!0;class Ut{constructor(e=0,t=0,n=0,i=1){this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,r,o,A){let a=n[i+0],c=n[i+1],l=n[i+2],h=n[i+3];const u=r[o+0],f=r[o+1],g=r[o+2],p=r[o+3];if(A===0){e[t+0]=a,e[t+1]=c,e[t+2]=l,e[t+3]=h;return}if(A===1){e[t+0]=u,e[t+1]=f,e[t+2]=g,e[t+3]=p;return}if(h!==p||a!==u||c!==f||l!==g){let d=1-A;const m=a*u+c*f+l*g+h*p,v=m>=0?1:-1,y=1-m*m;if(y>Number.EPSILON){const M=Math.sqrt(y),I=Math.atan2(M,m*v);d=Math.sin(d*I)/M,A=Math.sin(A*I)/M}const Q=A*v;if(a=a*d+u*Q,c=c*d+f*Q,l=l*d+g*Q,h=h*d+p*Q,d===1-A){const M=1/Math.sqrt(a*a+c*c+l*l+h*h);a*=M,c*=M,l*=M,h*=M}}e[t]=a,e[t+1]=c,e[t+2]=l,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,r,o){const A=n[i],a=n[i+1],c=n[i+2],l=n[i+3],h=r[o],u=r[o+1],f=r[o+2],g=r[o+3];return e[t]=A*g+l*h+a*f-c*u,e[t+1]=a*g+l*u+c*h-A*f,e[t+2]=c*g+l*f+A*u-a*h,e[t+3]=l*g-A*h-a*u-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,r=e._z,o=e._order,A=Math.cos,a=Math.sin,c=A(n/2),l=A(i/2),h=A(r/2),u=a(n/2),f=a(i/2),g=a(r/2);switch(o){case"XYZ":this._x=u*l*h+c*f*g,this._y=c*f*h-u*l*g,this._z=c*l*g+u*f*h,this._w=c*l*h-u*f*g;break;case"YXZ":this._x=u*l*h+c*f*g,this._y=c*f*h-u*l*g,this._z=c*l*g-u*f*h,this._w=c*l*h+u*f*g;break;case"ZXY":this._x=u*l*h-c*f*g,this._y=c*f*h+u*l*g,this._z=c*l*g+u*f*h,this._w=c*l*h-u*f*g;break;case"ZYX":this._x=u*l*h-c*f*g,this._y=c*f*h+u*l*g,this._z=c*l*g-u*f*h,this._w=c*l*h+u*f*g;break;case"YZX":this._x=u*l*h+c*f*g,this._y=c*f*h+u*l*g,this._z=c*l*g-u*f*h,this._w=c*l*h-u*f*g;break;case"XZY":this._x=u*l*h-c*f*g,this._y=c*f*h-u*l*g,this._z=c*l*g+u*f*h,this._w=c*l*h+u*f*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],o=t[1],A=t[5],a=t[9],c=t[2],l=t[6],h=t[10],u=n+A+h;if(u>0){const f=.5/Math.sqrt(u+1);this._w=.25/f,this._x=(l-a)*f,this._y=(r-c)*f,this._z=(o-i)*f}else if(n>A&&n>h){const f=2*Math.sqrt(1+n-A-h);this._w=(l-a)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(r+c)/f}else if(A>h){const f=2*Math.sqrt(1+A-n-h);this._w=(r-c)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(a+l)/f}else{const f=2*Math.sqrt(1+h-n-A);this._w=(o-i)/f,this._x=(r+c)/f,this._y=(a+l)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(vt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,o=e._w,A=t._x,a=t._y,c=t._z,l=t._w;return this._x=n*l+o*A+i*c-r*a,this._y=i*l+o*a+r*A-n*c,this._z=r*l+o*c+n*a-i*A,this._w=o*l-n*A-i*a-r*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,o=this._w;let A=o*e._w+n*e._x+i*e._y+r*e._z;if(A<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,A=-A):this.copy(e),A>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const a=1-A*A;if(a<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(a),l=Math.atan2(c,A),h=Math.sin((1-t)*l)/c,u=Math.sin(t*l)/c;return this._w=o*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Ut.prototype.isQuaternion=!0;class w{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(qs.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(qs.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,o=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,o=e.y,A=e.z,a=e.w,c=a*t+o*i-A*n,l=a*n+A*t-r*i,h=a*i+r*n-o*t,u=-r*t-o*n-A*i;return this.x=c*a+u*-r+l*-A-h*-o,this.y=l*a+u*-o+h*-r-c*-A,this.z=h*a+u*-A+c*-o-l*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,o=t.x,A=t.y,a=t.z;return this.x=i*a-r*A,this.y=r*o-n*a,this.z=n*A-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return qr.copy(this).projectOnVector(e),this.sub(qr)}reflect(e){return this.sub(qr.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(vt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}w.prototype.isVector3=!0;const qr=new w,qs=new Ut;class qt{constructor(e=new w(1/0,1/0,1/0),t=new w(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,A=-1/0;for(let a=0,c=e.length;a<c;a+=3){const l=e[a],h=e[a+1],u=e[a+2];l<t&&(t=l),h<n&&(n=h),u<i&&(i=u),l>r&&(r=l),h>o&&(o=h),u>A&&(A=u)}return this.min.set(t,n,i),this.max.set(r,o,A),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,A=-1/0;for(let a=0,c=e.count;a<c;a++){const l=e.getX(a),h=e.getY(a),u=e.getZ(a);l<t&&(t=l),h<n&&(n=h),u<i&&(i=u),l>r&&(r=l),h>o&&(o=h),u>A&&(A=u)}return this.min.set(t,n,i),this.max.set(r,o,A),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=z2.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const r=n.attributes.position;for(let o=0,A=r.count;o<A;o++)z2.fromBufferAttribute(r,o).applyMatrix4(e.matrixWorld),this.expandByPoint(z2)}else n.boundingBox===null&&n.computeBoundingBox(),$r.copy(n.boundingBox),$r.applyMatrix4(e.matrixWorld),this.union($r);const i=e.children;for(let r=0,o=i.length;r<o;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,z2),z2.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter($n),bi.subVectors(this.max,$n),rn.subVectors(e.a,$n),sn.subVectors(e.b,$n),on.subVectors(e.c,$n),E2.subVectors(sn,rn),y2.subVectors(on,sn),L2.subVectors(rn,on);let t=[0,-E2.z,E2.y,0,-y2.z,y2.y,0,-L2.z,L2.y,E2.z,0,-E2.x,y2.z,0,-y2.x,L2.z,0,-L2.x,-E2.y,E2.x,0,-y2.y,y2.x,0,-L2.y,L2.x,0];return!e1(t,rn,sn,on,bi)||(t=[1,0,0,0,1,0,0,0,1],!e1(t,rn,sn,on,bi))?!1:(Fi.crossVectors(E2,y2),t=[Fi.x,Fi.y,Fi.z],e1(t,rn,sn,on,bi))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return z2.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(z2).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(l2[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),l2[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),l2[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),l2[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),l2[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),l2[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),l2[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),l2[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(l2),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}qt.prototype.isBox3=!0;const l2=[new w,new w,new w,new w,new w,new w,new w,new w],z2=new w,$r=new qt,rn=new w,sn=new w,on=new w,E2=new w,y2=new w,L2=new w,$n=new w,bi=new w,Fi=new w,P2=new w;function e1(s,e,t,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){P2.fromArray(s,r);const A=i.x*Math.abs(P2.x)+i.y*Math.abs(P2.y)+i.z*Math.abs(P2.z),a=e.dot(P2),c=t.dot(P2),l=n.dot(P2);if(Math.max(-Math.max(a,c,l),Math.min(a,c,l))>A)return!1}return!0}const I3=new qt,$s=new w,Ti=new w,t1=new w;class Yn{constructor(e=new w,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):I3.setFromPoints(e).getCenter(n);let i=0;for(let r=0,o=e.length;r<o;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){t1.subVectors(e,this.center);const t=t1.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.add(t1.multiplyScalar(i/n)),this.radius+=i}return this}union(e){return this.center.equals(e.center)===!0?Ti.set(0,0,1).multiplyScalar(e.radius):Ti.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint($s.copy(e.center).add(Ti)),this.expandByPoint($s.copy(e.center).sub(Ti)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const h2=new w,n1=new w,Si=new w,x2=new w,i1=new w,Di=new w,r1=new w;class Hn{constructor(e=new w,t=new w(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,h2)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=h2.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(h2.copy(this.direction).multiplyScalar(t).add(this.origin),h2.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){n1.copy(e).add(t).multiplyScalar(.5),Si.copy(t).sub(e).normalize(),x2.copy(this.origin).sub(n1);const r=e.distanceTo(t)*.5,o=-this.direction.dot(Si),A=x2.dot(this.direction),a=-x2.dot(Si),c=x2.lengthSq(),l=Math.abs(1-o*o);let h,u,f,g;if(l>0)if(h=o*a-A,u=o*A-a,g=r*l,h>=0)if(u>=-g)if(u<=g){const p=1/l;h*=p,u*=p,f=h*(h+o*u+2*A)+u*(o*h+u+2*a)+c}else u=r,h=Math.max(0,-(o*u+A)),f=-h*h+u*(u+2*a)+c;else u=-r,h=Math.max(0,-(o*u+A)),f=-h*h+u*(u+2*a)+c;else u<=-g?(h=Math.max(0,-(-o*r+A)),u=h>0?-r:Math.min(Math.max(-r,-a),r),f=-h*h+u*(u+2*a)+c):u<=g?(h=0,u=Math.min(Math.max(-r,-a),r),f=u*(u+2*a)+c):(h=Math.max(0,-(o*r+A)),u=h>0?r:Math.min(Math.max(-r,-a),r),f=-h*h+u*(u+2*a)+c);else u=o>0?-r:r,h=Math.max(0,-(o*u+A)),f=-h*h+u*(u+2*a)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(Si).multiplyScalar(u).add(n1),f}intersectSphere(e,t){h2.subVectors(e.center,this.origin);const n=h2.dot(this.direction),i=h2.dot(h2)-n*n,r=e.radius*e.radius;if(i>r)return null;const o=Math.sqrt(r-i),A=n-o,a=n+o;return A<0&&a<0?null:A<0?this.at(a,t):this.at(A,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,o,A,a;const c=1/this.direction.x,l=1/this.direction.y,h=1/this.direction.z,u=this.origin;return c>=0?(n=(e.min.x-u.x)*c,i=(e.max.x-u.x)*c):(n=(e.max.x-u.x)*c,i=(e.min.x-u.x)*c),l>=0?(r=(e.min.y-u.y)*l,o=(e.max.y-u.y)*l):(r=(e.max.y-u.y)*l,o=(e.min.y-u.y)*l),n>o||r>i||((r>n||n!==n)&&(n=r),(o<i||i!==i)&&(i=o),h>=0?(A=(e.min.z-u.z)*h,a=(e.max.z-u.z)*h):(A=(e.max.z-u.z)*h,a=(e.min.z-u.z)*h),n>a||A>i)||((A>n||n!==n)&&(n=A),(a<i||i!==i)&&(i=a),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,h2)!==null}intersectTriangle(e,t,n,i,r){i1.subVectors(t,e),Di.subVectors(n,e),r1.crossVectors(i1,Di);let o=this.direction.dot(r1),A;if(o>0){if(i)return null;A=1}else if(o<0)A=-1,o=-o;else return null;x2.subVectors(this.origin,e);const a=A*this.direction.dot(Di.crossVectors(x2,Di));if(a<0)return null;const c=A*this.direction.dot(i1.cross(x2));if(c<0||a+c>o)return null;const l=-A*x2.dot(r1);return l<0?null:this.at(l/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class we{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,o,A,a,c,l,h,u,f,g,p,d){const m=this.elements;return m[0]=e,m[4]=t,m[8]=n,m[12]=i,m[1]=r,m[5]=o,m[9]=A,m[13]=a,m[2]=c,m[6]=l,m[10]=h,m[14]=u,m[3]=f,m[7]=g,m[11]=p,m[15]=d,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new we().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/An.setFromMatrixColumn(e,0).length(),r=1/An.setFromMatrixColumn(e,1).length(),o=1/An.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,r=e.z,o=Math.cos(n),A=Math.sin(n),a=Math.cos(i),c=Math.sin(i),l=Math.cos(r),h=Math.sin(r);if(e.order==="XYZ"){const u=o*l,f=o*h,g=A*l,p=A*h;t[0]=a*l,t[4]=-a*h,t[8]=c,t[1]=f+g*c,t[5]=u-p*c,t[9]=-A*a,t[2]=p-u*c,t[6]=g+f*c,t[10]=o*a}else if(e.order==="YXZ"){const u=a*l,f=a*h,g=c*l,p=c*h;t[0]=u+p*A,t[4]=g*A-f,t[8]=o*c,t[1]=o*h,t[5]=o*l,t[9]=-A,t[2]=f*A-g,t[6]=p+u*A,t[10]=o*a}else if(e.order==="ZXY"){const u=a*l,f=a*h,g=c*l,p=c*h;t[0]=u-p*A,t[4]=-o*h,t[8]=g+f*A,t[1]=f+g*A,t[5]=o*l,t[9]=p-u*A,t[2]=-o*c,t[6]=A,t[10]=o*a}else if(e.order==="ZYX"){const u=o*l,f=o*h,g=A*l,p=A*h;t[0]=a*l,t[4]=g*c-f,t[8]=u*c+p,t[1]=a*h,t[5]=p*c+u,t[9]=f*c-g,t[2]=-c,t[6]=A*a,t[10]=o*a}else if(e.order==="YZX"){const u=o*a,f=o*c,g=A*a,p=A*c;t[0]=a*l,t[4]=p-u*h,t[8]=g*h+f,t[1]=h,t[5]=o*l,t[9]=-A*l,t[2]=-c*l,t[6]=f*h+g,t[10]=u-p*h}else if(e.order==="XZY"){const u=o*a,f=o*c,g=A*a,p=A*c;t[0]=a*l,t[4]=-h,t[8]=c*l,t[1]=u*h+p,t[5]=o*l,t[9]=f*h-g,t[2]=g*h-f,t[6]=A*l,t[10]=p*h+u}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(b3,e,F3)}lookAt(e,t,n){const i=this.elements;return Rt.subVectors(e,t),Rt.lengthSq()===0&&(Rt.z=1),Rt.normalize(),C2.crossVectors(n,Rt),C2.lengthSq()===0&&(Math.abs(n.z)===1?Rt.x+=1e-4:Rt.z+=1e-4,Rt.normalize(),C2.crossVectors(n,Rt)),C2.normalize(),Ui.crossVectors(Rt,C2),i[0]=C2.x,i[4]=Ui.x,i[8]=Rt.x,i[1]=C2.y,i[5]=Ui.y,i[9]=Rt.y,i[2]=C2.z,i[6]=Ui.z,i[10]=Rt.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],A=n[4],a=n[8],c=n[12],l=n[1],h=n[5],u=n[9],f=n[13],g=n[2],p=n[6],d=n[10],m=n[14],v=n[3],y=n[7],Q=n[11],M=n[15],I=i[0],T=i[4],U=i[8],X=i[12],z=i[1],B=i[5],F=i[9],J=i[13],D=i[2],P=i[6],N=i[10],k=i[14],S=i[3],W=i[7],$=i[11],ee=i[15];return r[0]=o*I+A*z+a*D+c*S,r[4]=o*T+A*B+a*P+c*W,r[8]=o*U+A*F+a*N+c*$,r[12]=o*X+A*J+a*k+c*ee,r[1]=l*I+h*z+u*D+f*S,r[5]=l*T+h*B+u*P+f*W,r[9]=l*U+h*F+u*N+f*$,r[13]=l*X+h*J+u*k+f*ee,r[2]=g*I+p*z+d*D+m*S,r[6]=g*T+p*B+d*P+m*W,r[10]=g*U+p*F+d*N+m*$,r[14]=g*X+p*J+d*k+m*ee,r[3]=v*I+y*z+Q*D+M*S,r[7]=v*T+y*B+Q*P+M*W,r[11]=v*U+y*F+Q*N+M*$,r[15]=v*X+y*J+Q*k+M*ee,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],o=e[1],A=e[5],a=e[9],c=e[13],l=e[2],h=e[6],u=e[10],f=e[14],g=e[3],p=e[7],d=e[11],m=e[15];return g*(+r*a*h-i*c*h-r*A*u+n*c*u+i*A*f-n*a*f)+p*(+t*a*f-t*c*u+r*o*u-i*o*f+i*c*l-r*a*l)+d*(+t*c*h-t*A*f-r*o*h+n*o*f+r*A*l-n*c*l)+m*(-i*A*l-t*a*h+t*A*u+i*o*h-n*o*u+n*a*l)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],A=e[5],a=e[6],c=e[7],l=e[8],h=e[9],u=e[10],f=e[11],g=e[12],p=e[13],d=e[14],m=e[15],v=h*d*c-p*u*c+p*a*f-A*d*f-h*a*m+A*u*m,y=g*u*c-l*d*c-g*a*f+o*d*f+l*a*m-o*u*m,Q=l*p*c-g*h*c+g*A*f-o*p*f-l*A*m+o*h*m,M=g*h*a-l*p*a-g*A*u+o*p*u+l*A*d-o*h*d,I=t*v+n*y+i*Q+r*M;if(I===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const T=1/I;return e[0]=v*T,e[1]=(p*u*r-h*d*r-p*i*f+n*d*f+h*i*m-n*u*m)*T,e[2]=(A*d*r-p*a*r+p*i*c-n*d*c-A*i*m+n*a*m)*T,e[3]=(h*a*r-A*u*r-h*i*c+n*u*c+A*i*f-n*a*f)*T,e[4]=y*T,e[5]=(l*d*r-g*u*r+g*i*f-t*d*f-l*i*m+t*u*m)*T,e[6]=(g*a*r-o*d*r-g*i*c+t*d*c+o*i*m-t*a*m)*T,e[7]=(o*u*r-l*a*r+l*i*c-t*u*c-o*i*f+t*a*f)*T,e[8]=Q*T,e[9]=(g*h*r-l*p*r-g*n*f+t*p*f+l*n*m-t*h*m)*T,e[10]=(o*p*r-g*A*r+g*n*c-t*p*c-o*n*m+t*A*m)*T,e[11]=(l*A*r-o*h*r-l*n*c+t*h*c+o*n*f-t*A*f)*T,e[12]=M*T,e[13]=(l*p*i-g*h*i+g*n*u-t*p*u-l*n*d+t*h*d)*T,e[14]=(g*A*i-o*p*i-g*n*a+t*p*a+o*n*d-t*A*d)*T,e[15]=(o*h*i-l*A*i+l*n*a-t*h*a-o*n*u+t*A*u)*T,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,o=e.x,A=e.y,a=e.z,c=r*o,l=r*A;return this.set(c*o+n,c*A-i*a,c*a+i*A,0,c*A+i*a,l*A+n,l*a-i*o,0,c*a-i*A,l*a+i*o,r*a*a+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,o){return this.set(1,n,r,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,o=t._y,A=t._z,a=t._w,c=r+r,l=o+o,h=A+A,u=r*c,f=r*l,g=r*h,p=o*l,d=o*h,m=A*h,v=a*c,y=a*l,Q=a*h,M=n.x,I=n.y,T=n.z;return i[0]=(1-(p+m))*M,i[1]=(f+Q)*M,i[2]=(g-y)*M,i[3]=0,i[4]=(f-Q)*I,i[5]=(1-(u+m))*I,i[6]=(d+v)*I,i[7]=0,i[8]=(g+y)*T,i[9]=(d-v)*T,i[10]=(1-(u+p))*T,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=An.set(i[0],i[1],i[2]).length();const o=An.set(i[4],i[5],i[6]).length(),A=An.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],Kt.copy(this);const c=1/r,l=1/o,h=1/A;return Kt.elements[0]*=c,Kt.elements[1]*=c,Kt.elements[2]*=c,Kt.elements[4]*=l,Kt.elements[5]*=l,Kt.elements[6]*=l,Kt.elements[8]*=h,Kt.elements[9]*=h,Kt.elements[10]*=h,t.setFromRotationMatrix(Kt),n.x=r,n.y=o,n.z=A,this}makePerspective(e,t,n,i,r,o){o===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const A=this.elements,a=2*r/(t-e),c=2*r/(n-i),l=(t+e)/(t-e),h=(n+i)/(n-i),u=-(o+r)/(o-r),f=-2*o*r/(o-r);return A[0]=a,A[4]=0,A[8]=l,A[12]=0,A[1]=0,A[5]=c,A[9]=h,A[13]=0,A[2]=0,A[6]=0,A[10]=u,A[14]=f,A[3]=0,A[7]=0,A[11]=-1,A[15]=0,this}makeOrthographic(e,t,n,i,r,o){const A=this.elements,a=1/(t-e),c=1/(n-i),l=1/(o-r),h=(t+e)*a,u=(n+i)*c,f=(o+r)*l;return A[0]=2*a,A[4]=0,A[8]=0,A[12]=-h,A[1]=0,A[5]=2*c,A[9]=0,A[13]=-u,A[2]=0,A[6]=0,A[10]=-2*l,A[14]=-f,A[3]=0,A[7]=0,A[11]=0,A[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}we.prototype.isMatrix4=!0;const An=new w,Kt=new we,b3=new w(0,0,0),F3=new w(1,1,1),C2=new w,Ui=new w,Rt=new w,eo=new we,to=new Ut;class q2{constructor(e=0,t=0,n=0,i=q2.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],o=i[4],A=i[8],a=i[1],c=i[5],l=i[9],h=i[2],u=i[6],f=i[10];switch(t){case"XYZ":this._y=Math.asin(vt(A,-1,1)),Math.abs(A)<.9999999?(this._x=Math.atan2(-l,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(u,c),this._z=0);break;case"YXZ":this._x=Math.asin(-vt(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(A,f),this._z=Math.atan2(a,c)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(vt(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(a,r));break;case"ZYX":this._y=Math.asin(-vt(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(u,f),this._z=Math.atan2(a,r)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(vt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,c),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(A,f));break;case"XZY":this._z=Math.asin(-vt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(u,c),this._y=Math.atan2(A,r)):(this._x=Math.atan2(-l,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return eo.makeRotationFromQuaternion(e),this.setFromRotationMatrix(eo,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return to.setFromEuler(this),this.setFromQuaternion(to,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}q2.prototype.isEuler=!0;q2.DefaultOrder="XYZ";q2.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class CA{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let T3=0;const no=new w,an=new Ut,u2=new we,Gi=new w,ei=new w,S3=new w,D3=new Ut,io=new w(1,0,0),ro=new w(0,1,0),so=new w(0,0,1),U3={type:"added"},oo={type:"removed"};class Ne extends Z2{constructor(){super(),Object.defineProperty(this,"id",{value:T3++}),this.uuid=A2(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ne.DefaultUp.clone();const e=new w,t=new q2,n=new Ut,i=new w(1,1,1);function r(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new we},normalMatrix:{value:new yt}}),this.matrix=new we,this.matrixWorld=new we,this.matrixAutoUpdate=Ne.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new CA,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return an.setFromAxisAngle(e,t),this.quaternion.multiply(an),this}rotateOnWorldAxis(e,t){return an.setFromAxisAngle(e,t),this.quaternion.premultiply(an),this}rotateX(e){return this.rotateOnAxis(io,e)}rotateY(e){return this.rotateOnAxis(ro,e)}rotateZ(e){return this.rotateOnAxis(so,e)}translateOnAxis(e,t){return no.copy(e).applyQuaternion(this.quaternion),this.position.add(no.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(io,e)}translateY(e){return this.translateOnAxis(ro,e)}translateZ(e){return this.translateOnAxis(so,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(u2.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Gi.copy(e):Gi.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ei.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?u2.lookAt(ei,Gi,this.up):u2.lookAt(Gi,ei,this.up),this.quaternion.setFromRotationMatrix(u2),i&&(u2.extractRotation(i.matrixWorld),an.setFromRotationMatrix(u2),this.quaternion.premultiply(an.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(U3)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(oo)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(oo)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),u2.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),u2.multiply(e.parent.matrixWorld)),e.applyMatrix4(u2),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ei,e,S3),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ei,D3,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(A,a){return A[a.uuid]===void 0&&(A[a.uuid]=a.toJSON(e)),a.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const A=this.geometry.parameters;if(A!==void 0&&A.shapes!==void 0){const a=A.shapes;if(Array.isArray(a))for(let c=0,l=a.length;c<l;c++){const h=a[c];r(e.shapes,h)}else r(e.shapes,a)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const A=[];for(let a=0,c=this.material.length;a<c;a++)A.push(r(e.materials,this.material[a]));i.material=A}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let A=0;A<this.children.length;A++)i.children.push(this.children[A].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let A=0;A<this.animations.length;A++){const a=this.animations[A];i.animations.push(r(e.animations,a))}}if(t){const A=o(e.geometries),a=o(e.materials),c=o(e.textures),l=o(e.images),h=o(e.shapes),u=o(e.skeletons),f=o(e.animations),g=o(e.nodes);A.length>0&&(n.geometries=A),a.length>0&&(n.materials=a),c.length>0&&(n.textures=c),l.length>0&&(n.images=l),h.length>0&&(n.shapes=h),u.length>0&&(n.skeletons=u),f.length>0&&(n.animations=f),g.length>0&&(n.nodes=g)}return n.object=i,n;function o(A){const a=[];for(const c in A){const l=A[c];delete l.metadata,a.push(l)}return a}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Ne.DefaultUp=new w(0,1,0);Ne.DefaultMatrixAutoUpdate=!0;Ne.prototype.isObject3D=!0;const jt=new w,d2=new w,s1=new w,f2=new w,cn=new w,ln=new w,Ao=new w,o1=new w,A1=new w,a1=new w;class ht{constructor(e=new w,t=new w,n=new w){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),jt.subVectors(e,t),i.cross(jt);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){jt.subVectors(i,t),d2.subVectors(n,t),s1.subVectors(e,t);const o=jt.dot(jt),A=jt.dot(d2),a=jt.dot(s1),c=d2.dot(d2),l=d2.dot(s1),h=o*c-A*A;if(h===0)return r.set(-2,-1,-1);const u=1/h,f=(c*a-A*l)*u,g=(o*l-A*a)*u;return r.set(1-f-g,g,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,f2),f2.x>=0&&f2.y>=0&&f2.x+f2.y<=1}static getUV(e,t,n,i,r,o,A,a){return this.getBarycoord(e,t,n,i,f2),a.set(0,0),a.addScaledVector(r,f2.x),a.addScaledVector(o,f2.y),a.addScaledVector(A,f2.z),a}static isFrontFacing(e,t,n,i){return jt.subVectors(n,t),d2.subVectors(e,t),jt.cross(d2).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return jt.subVectors(this.c,this.b),d2.subVectors(this.a,this.b),jt.cross(d2).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ht.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ht.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return ht.getUV(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return ht.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ht.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let o,A;cn.subVectors(i,n),ln.subVectors(r,n),o1.subVectors(e,n);const a=cn.dot(o1),c=ln.dot(o1);if(a<=0&&c<=0)return t.copy(n);A1.subVectors(e,i);const l=cn.dot(A1),h=ln.dot(A1);if(l>=0&&h<=l)return t.copy(i);const u=a*h-l*c;if(u<=0&&a>=0&&l<=0)return o=a/(a-l),t.copy(n).addScaledVector(cn,o);a1.subVectors(e,r);const f=cn.dot(a1),g=ln.dot(a1);if(g>=0&&f<=g)return t.copy(r);const p=f*c-a*g;if(p<=0&&c>=0&&g<=0)return A=c/(c-g),t.copy(n).addScaledVector(ln,A);const d=l*g-f*h;if(d<=0&&h-l>=0&&f-g>=0)return Ao.subVectors(r,i),A=(h-l)/(h-l+(f-g)),t.copy(i).addScaledVector(Ao,A);const m=1/(d+p+u);return o=p*m,A=u*m,t.copy(n).addScaledVector(cn,o).addScaledVector(ln,A)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let G3=0;class dt extends Z2{constructor(){super(),Object.defineProperty(this,"id",{value:G3++}),this.uuid=A2(),this.name="",this.type="Material",this.fog=!0,this.blending=bn,this.side=di,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=pA,this.blendDst=gA,this.blendEquation=yn,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=R1,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=y3,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=jr,this.stencilZFail=jr,this.stencilZPass=jr,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===fA;continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==bn&&(n.blending=this.blending),this.side!==di&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const o=[];for(const A in r){const a=r[A];delete a.metadata,o.push(a)}return o}if(t){const r=i(e.textures),o=i(e.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}dt.prototype.isMaterial=!0;dt.fromType=function(){return null};class Qt extends dt{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new ie(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Er,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}Qt.prototype.isMeshBasicMaterial=!0;const lt=new w,Ri=new V;class ot{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=pi,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),o=new ie),t[n++]=o.r,t[n++]=o.g,t[n++]=o.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),o=new V),t[n++]=o.x,t[n++]=o.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),o=new w),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),o=new Je),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z,t[n++]=o.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Ri.fromBufferAttribute(this,t),Ri.applyMatrix3(e),this.setXY(t,Ri.x,Ri.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)lt.fromBufferAttribute(this,t),lt.applyMatrix3(e),this.setXYZ(t,lt.x,lt.y,lt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)lt.fromBufferAttribute(this,t),lt.applyMatrix4(e),this.setXYZ(t,lt.x,lt.y,lt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)lt.fromBufferAttribute(this,t),lt.applyNormalMatrix(e),this.setXYZ(t,lt.x,lt.y,lt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)lt.fromBufferAttribute(this,t),lt.transformDirection(e),this.setXYZ(t,lt.x,lt.y,lt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==pi&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}ot.prototype.isBufferAttribute=!0;class vA extends ot{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class QA extends ot{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class R3 extends ot{constructor(e,t,n){super(new Uint16Array(e),t,n)}}R3.prototype.isFloat16BufferAttribute=!0;class $e extends ot{constructor(e,t,n){super(new Float32Array(e),t,n)}}let N3=0;const Lt=new we,c1=new Ne,hn=new w,Nt=new qt,ti=new qt,ft=new w;class Xe extends Z2{constructor(){super(),Object.defineProperty(this,"id",{value:N3++}),this.uuid=A2(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(EA(e)?QA:vA)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new yt().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Lt.makeRotationFromQuaternion(e),this.applyMatrix4(Lt),this}rotateX(e){return Lt.makeRotationX(e),this.applyMatrix4(Lt),this}rotateY(e){return Lt.makeRotationY(e),this.applyMatrix4(Lt),this}rotateZ(e){return Lt.makeRotationZ(e),this.applyMatrix4(Lt),this}translate(e,t,n){return Lt.makeTranslation(e,t,n),this.applyMatrix4(Lt),this}scale(e,t,n){return Lt.makeScale(e,t,n),this.applyMatrix4(Lt),this}lookAt(e){return c1.lookAt(e),c1.updateMatrix(),this.applyMatrix4(c1.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(hn).negate(),this.translate(hn.x,hn.y,hn.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new $e(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new qt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new w(-1/0,-1/0,-1/0),new w(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];Nt.setFromBufferAttribute(r),this.morphTargetsRelative?(ft.addVectors(this.boundingBox.min,Nt.min),this.boundingBox.expandByPoint(ft),ft.addVectors(this.boundingBox.max,Nt.max),this.boundingBox.expandByPoint(ft)):(this.boundingBox.expandByPoint(Nt.min),this.boundingBox.expandByPoint(Nt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Yn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new w,1/0);return}if(e){const n=this.boundingSphere.center;if(Nt.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const A=t[r];ti.setFromBufferAttribute(A),this.morphTargetsRelative?(ft.addVectors(Nt.min,ti.min),Nt.expandByPoint(ft),ft.addVectors(Nt.max,ti.max),Nt.expandByPoint(ft)):(Nt.expandByPoint(ti.min),Nt.expandByPoint(ti.max))}Nt.getCenter(n);let i=0;for(let r=0,o=e.count;r<o;r++)ft.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(ft));if(t)for(let r=0,o=t.length;r<o;r++){const A=t[r],a=this.morphTargetsRelative;for(let c=0,l=A.count;c<l;c++)ft.fromBufferAttribute(A,c),a&&(hn.fromBufferAttribute(e,c),ft.add(hn)),i=Math.max(i,n.distanceToSquared(ft))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,r=t.normal.array,o=t.uv.array,A=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ot(new Float32Array(4*A),4));const a=this.getAttribute("tangent").array,c=[],l=[];for(let z=0;z<A;z++)c[z]=new w,l[z]=new w;const h=new w,u=new w,f=new w,g=new V,p=new V,d=new V,m=new w,v=new w;function y(z,B,F){h.fromArray(i,z*3),u.fromArray(i,B*3),f.fromArray(i,F*3),g.fromArray(o,z*2),p.fromArray(o,B*2),d.fromArray(o,F*2),u.sub(h),f.sub(h),p.sub(g),d.sub(g);const J=1/(p.x*d.y-d.x*p.y);!isFinite(J)||(m.copy(u).multiplyScalar(d.y).addScaledVector(f,-p.y).multiplyScalar(J),v.copy(f).multiplyScalar(p.x).addScaledVector(u,-d.x).multiplyScalar(J),c[z].add(m),c[B].add(m),c[F].add(m),l[z].add(v),l[B].add(v),l[F].add(v))}let Q=this.groups;Q.length===0&&(Q=[{start:0,count:n.length}]);for(let z=0,B=Q.length;z<B;++z){const F=Q[z],J=F.start,D=F.count;for(let P=J,N=J+D;P<N;P+=3)y(n[P+0],n[P+1],n[P+2])}const M=new w,I=new w,T=new w,U=new w;function X(z){T.fromArray(r,z*3),U.copy(T);const B=c[z];M.copy(B),M.sub(T.multiplyScalar(T.dot(B))).normalize(),I.crossVectors(U,B);const J=I.dot(l[z])<0?-1:1;a[z*4]=M.x,a[z*4+1]=M.y,a[z*4+2]=M.z,a[z*4+3]=J}for(let z=0,B=Q.length;z<B;++z){const F=Q[z],J=F.start,D=F.count;for(let P=J,N=J+D;P<N;P+=3)X(n[P+0]),X(n[P+1]),X(n[P+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new ot(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let u=0,f=n.count;u<f;u++)n.setXYZ(u,0,0,0);const i=new w,r=new w,o=new w,A=new w,a=new w,c=new w,l=new w,h=new w;if(e)for(let u=0,f=e.count;u<f;u+=3){const g=e.getX(u+0),p=e.getX(u+1),d=e.getX(u+2);i.fromBufferAttribute(t,g),r.fromBufferAttribute(t,p),o.fromBufferAttribute(t,d),l.subVectors(o,r),h.subVectors(i,r),l.cross(h),A.fromBufferAttribute(n,g),a.fromBufferAttribute(n,p),c.fromBufferAttribute(n,d),A.add(l),a.add(l),c.add(l),n.setXYZ(g,A.x,A.y,A.z),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(d,c.x,c.y,c.z)}else for(let u=0,f=t.count;u<f;u+=3)i.fromBufferAttribute(t,u+0),r.fromBufferAttribute(t,u+1),o.fromBufferAttribute(t,u+2),l.subVectors(o,r),h.subVectors(i,r),l.cross(h),n.setXYZ(u+0,l.x,l.y,l.z),n.setXYZ(u+1,l.x,l.y,l.z),n.setXYZ(u+2,l.x,l.y,l.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(e.attributes[i]===void 0)continue;const o=n[i].array,A=e.attributes[i],a=A.array,c=A.itemSize*t,l=Math.min(a.length,o.length-c);for(let h=0,u=c;h<l;h++,u++)o[u]=a[h]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)ft.fromBufferAttribute(e,t),ft.normalize(),e.setXYZ(t,ft.x,ft.y,ft.z)}toNonIndexed(){function e(A,a){const c=A.array,l=A.itemSize,h=A.normalized,u=new c.constructor(a.length*l);let f=0,g=0;for(let p=0,d=a.length;p<d;p++){A.isInterleavedBufferAttribute?f=a[p]*A.data.stride+A.offset:f=a[p]*l;for(let m=0;m<l;m++)u[g++]=c[f++]}return new ot(u,l,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Xe,n=this.index.array,i=this.attributes;for(const A in i){const a=i[A],c=e(a,n);t.setAttribute(A,c)}const r=this.morphAttributes;for(const A in r){const a=[],c=r[A];for(let l=0,h=c.length;l<h;l++){const u=c[l],f=e(u,n);a.push(f)}t.morphAttributes[A]=a}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let A=0,a=o.length;A<a;A++){const c=o[A];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const c in a)a[c]!==void 0&&(e[c]=a[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const a in n){const c=n[a];e.data.attributes[a]=c.toJSON(e.data)}const i={};let r=!1;for(const a in this.morphAttributes){const c=this.morphAttributes[a],l=[];for(let h=0,u=c.length;h<u;h++){const f=c[h];l.push(f.toJSON(e.data))}l.length>0&&(i[a]=l,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const A=this.boundingSphere;return A!==null&&(e.data.boundingSphere={center:A.center.toArray(),radius:A.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const c in i){const l=i[c];this.setAttribute(c,l.clone(t))}const r=e.morphAttributes;for(const c in r){const l=[],h=r[c];for(let u=0,f=h.length;u<f;u++)l.push(h[u].clone(t));this.morphAttributes[c]=l}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,l=o.length;c<l;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const A=e.boundingBox;A!==null&&(this.boundingBox=A.clone());const a=e.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Xe.prototype.isBufferGeometry=!0;const ao=new we,un=new Hn,l1=new Yn,v2=new w,Q2=new w,_2=new w,h1=new w,u1=new w,d1=new w,Ni=new w,zi=new w,Li=new w,Pi=new V,ki=new V,Yi=new V,f1=new w,Hi=new w;class ge extends Ne{constructor(e=new Xe,t=new Qt){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const A=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[A]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),l1.copy(n.boundingSphere),l1.applyMatrix4(r),e.ray.intersectsSphere(l1)===!1)||(ao.copy(r).invert(),un.copy(e.ray).applyMatrix4(ao),n.boundingBox!==null&&un.intersectsBox(n.boundingBox)===!1))return;let o;if(n.isBufferGeometry){const A=n.index,a=n.attributes.position,c=n.morphAttributes.position,l=n.morphTargetsRelative,h=n.attributes.uv,u=n.attributes.uv2,f=n.groups,g=n.drawRange;if(A!==null)if(Array.isArray(i))for(let p=0,d=f.length;p<d;p++){const m=f[p],v=i[m.materialIndex],y=Math.max(m.start,g.start),Q=Math.min(A.count,Math.min(m.start+m.count,g.start+g.count));for(let M=y,I=Q;M<I;M+=3){const T=A.getX(M),U=A.getX(M+1),X=A.getX(M+2);o=Vi(this,v,e,un,a,c,l,h,u,T,U,X),o&&(o.faceIndex=Math.floor(M/3),o.face.materialIndex=m.materialIndex,t.push(o))}}else{const p=Math.max(0,g.start),d=Math.min(A.count,g.start+g.count);for(let m=p,v=d;m<v;m+=3){const y=A.getX(m),Q=A.getX(m+1),M=A.getX(m+2);o=Vi(this,i,e,un,a,c,l,h,u,y,Q,M),o&&(o.faceIndex=Math.floor(m/3),t.push(o))}}else if(a!==void 0)if(Array.isArray(i))for(let p=0,d=f.length;p<d;p++){const m=f[p],v=i[m.materialIndex],y=Math.max(m.start,g.start),Q=Math.min(a.count,Math.min(m.start+m.count,g.start+g.count));for(let M=y,I=Q;M<I;M+=3){const T=M,U=M+1,X=M+2;o=Vi(this,v,e,un,a,c,l,h,u,T,U,X),o&&(o.faceIndex=Math.floor(M/3),o.face.materialIndex=m.materialIndex,t.push(o))}}else{const p=Math.max(0,g.start),d=Math.min(a.count,g.start+g.count);for(let m=p,v=d;m<v;m+=3){const y=m,Q=m+1,M=m+2;o=Vi(this,i,e,un,a,c,l,h,u,y,Q,M),o&&(o.faceIndex=Math.floor(m/3),t.push(o))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}ge.prototype.isMesh=!0;function z3(s,e,t,n,i,r,o,A){let a;if(e.side===Zt?a=n.intersectTriangle(o,r,i,!0,A):a=n.intersectTriangle(i,r,o,e.side!==At,A),a===null)return null;Hi.copy(A),Hi.applyMatrix4(s.matrixWorld);const c=t.ray.origin.distanceTo(Hi);return c<t.near||c>t.far?null:{distance:c,point:Hi.clone(),object:s}}function Vi(s,e,t,n,i,r,o,A,a,c,l,h){v2.fromBufferAttribute(i,c),Q2.fromBufferAttribute(i,l),_2.fromBufferAttribute(i,h);const u=s.morphTargetInfluences;if(r&&u){Ni.set(0,0,0),zi.set(0,0,0),Li.set(0,0,0);for(let g=0,p=r.length;g<p;g++){const d=u[g],m=r[g];d!==0&&(h1.fromBufferAttribute(m,c),u1.fromBufferAttribute(m,l),d1.fromBufferAttribute(m,h),o?(Ni.addScaledVector(h1,d),zi.addScaledVector(u1,d),Li.addScaledVector(d1,d)):(Ni.addScaledVector(h1.sub(v2),d),zi.addScaledVector(u1.sub(Q2),d),Li.addScaledVector(d1.sub(_2),d)))}v2.add(Ni),Q2.add(zi),_2.add(Li)}s.isSkinnedMesh&&(s.boneTransform(c,v2),s.boneTransform(l,Q2),s.boneTransform(h,_2));const f=z3(s,e,t,n,v2,Q2,_2,f1);if(f){A&&(Pi.fromBufferAttribute(A,c),ki.fromBufferAttribute(A,l),Yi.fromBufferAttribute(A,h),f.uv=ht.getUV(f1,v2,Q2,_2,Pi,ki,Yi,new V)),a&&(Pi.fromBufferAttribute(a,c),ki.fromBufferAttribute(a,l),Yi.fromBufferAttribute(a,h),f.uv2=ht.getUV(f1,v2,Q2,_2,Pi,ki,Yi,new V));const g={a:c,b:l,c:h,normal:new w,materialIndex:0};ht.getNormal(v2,Q2,_2,g.normal),f.face=g}return f}class it extends Xe{constructor(e=1,t=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const A=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const a=[],c=[],l=[],h=[];let u=0,f=0;g("z","y","x",-1,-1,n,t,e,o,r,0),g("z","y","x",1,-1,n,t,-e,o,r,1),g("x","z","y",1,1,e,n,t,i,o,2),g("x","z","y",1,-1,e,n,-t,i,o,3),g("x","y","z",1,-1,e,t,n,i,r,4),g("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(a),this.setAttribute("position",new $e(c,3)),this.setAttribute("normal",new $e(l,3)),this.setAttribute("uv",new $e(h,2));function g(p,d,m,v,y,Q,M,I,T,U,X){const z=Q/T,B=M/U,F=Q/2,J=M/2,D=I/2,P=T+1,N=U+1;let k=0,S=0;const W=new w;for(let $=0;$<N;$++){const ee=$*B-J;for(let te=0;te<P;te++){const he=te*z-F;W[p]=he*v,W[d]=ee*y,W[m]=D,c.push(W.x,W.y,W.z),W[p]=0,W[d]=0,W[m]=I>0?1:-1,l.push(W.x,W.y,W.z),h.push(te/T),h.push(1-$/U),k+=1}}for(let $=0;$<U;$++)for(let ee=0;ee<T;ee++){const te=u+ee+P*$,he=u+ee+P*($+1),Re=u+(ee+1)+P*($+1),Ce=u+(ee+1)+P*$;a.push(te,he,Ce),a.push(he,Re,Ce),S+=6}A.addGroup(f,S,X),f+=S,u+=k}}static fromJSON(e){return new it(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Nn(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Ct(s){const e={};for(let t=0;t<s.length;t++){const n=Nn(s[t]);for(const i in n)e[i]=n[i]}return e}const L3={clone:Nn,merge:Ct};var P3=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,k3=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ze extends dt{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=P3,this.fragmentShader=k3,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Nn(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}Ze.prototype.isShaderMaterial=!0;class q1 extends Ne{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new we,this.projectionMatrix=new we,this.projectionMatrixInverse=new we}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}q1.prototype.isCamera=!0;class mt extends q1{constructor(e=50,t=1,n=.1,i=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=P1*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Wr*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return P1*2*Math.atan(Math.tan(Wr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Wr*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const a=o.fullWidth,c=o.fullHeight;r+=o.offsetX*i/a,t-=o.offsetY*n/c,i*=o.width/a,n*=o.height/c}const A=this.filmOffset;A!==0&&(r+=e*A/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}mt.prototype.isPerspectiveCamera=!0;const dn=90,fn=1;class $1 extends Ne{constructor(e,t,n){if(super(),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new mt(dn,fn,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new w(1,0,0)),this.add(i);const r=new mt(dn,fn,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new w(-1,0,0)),this.add(r);const o=new mt(dn,fn,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new w(0,1,0)),this.add(o);const A=new mt(dn,fn,e,t);A.layers=this.layers,A.up.set(0,0,-1),A.lookAt(new w(0,-1,0)),this.add(A);const a=new mt(dn,fn,e,t);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new w(0,0,1)),this.add(a);const c=new mt(dn,fn,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new w(0,0,-1)),this.add(c)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,o,A,a,c]=this.children,l=e.getRenderTarget(),h=e.outputEncoding,u=e.toneMapping,f=e.xr.enabled;e.outputEncoding=B2,e.toneMapping=Xt,e.xr.enabled=!1;const g=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,A),e.setRenderTarget(n,4),e.render(t,a),n.texture.generateMipmaps=g,e.setRenderTarget(n,5),e.render(t,c),e.setRenderTarget(l),e.outputEncoding=h,e.toneMapping=u,e.xr.enabled=f,n.texture.needsPMREMUpdate=!0}}class vr extends at{constructor(e,t,n,i,r,o,A,a,c,l){e=e!==void 0?e:[],t=t!==void 0?t:Dn,super(e,t,n,i,r,o,A,a,c,l),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}vr.prototype.isCubeTexture=!0;class _A extends je{constructor(e,t={}){super(e,e,t);const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new vr(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:St}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new it(5,5,5),r=new Ze({name:"CubemapFromEquirect",uniforms:Nn(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Zt,blending:F2});r.uniforms.tEquirect.value=t;const o=new ge(i,r),A=t.minFilter;return t.minFilter===xr&&(t.minFilter=St),new $1(1,10,this).update(e,o),t.minFilter=A,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(r)}}_A.prototype.isWebGLCubeRenderTarget=!0;const p1=new w,Y3=new w,H3=new yt;class m2{constructor(e=new w(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=p1.subVectors(n,t).cross(Y3.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(p1),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||H3.getNormalMatrix(e),i=this.coplanarPoint(p1).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}m2.prototype.isPlane=!0;const pn=new Yn,Ki=new w;class Qr{constructor(e=new m2,t=new m2,n=new m2,i=new m2,r=new m2,o=new m2){this.planes=[e,t,n,i,r,o]}set(e,t,n,i,r,o){const A=this.planes;return A[0].copy(e),A[1].copy(t),A[2].copy(n),A[3].copy(i),A[4].copy(r),A[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],r=n[1],o=n[2],A=n[3],a=n[4],c=n[5],l=n[6],h=n[7],u=n[8],f=n[9],g=n[10],p=n[11],d=n[12],m=n[13],v=n[14],y=n[15];return t[0].setComponents(A-i,h-a,p-u,y-d).normalize(),t[1].setComponents(A+i,h+a,p+u,y+d).normalize(),t[2].setComponents(A+r,h+c,p+f,y+m).normalize(),t[3].setComponents(A-r,h-c,p-f,y-m).normalize(),t[4].setComponents(A-o,h-l,p-g,y-v).normalize(),t[5].setComponents(A+o,h+l,p+g,y+v).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),pn.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(pn)}intersectsSprite(e){return pn.center.set(0,0,0),pn.radius=.7071067811865476,pn.applyMatrix4(e.matrixWorld),this.intersectsSphere(pn)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Ki.x=i.normal.x>0?e.max.x:e.min.x,Ki.y=i.normal.y>0?e.max.y:e.min.y,Ki.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Ki)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function IA(){let s=null,e=!1,t=null,n=null;function i(r,o){t(r,o),n=s.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function V3(s,e){const t=e.isWebGL2,n=new WeakMap;function i(c,l){const h=c.array,u=c.usage,f=s.createBuffer();s.bindBuffer(l,f),s.bufferData(l,h,u),c.onUploadCallback();let g;if(h instanceof Float32Array)g=5126;else if(h instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)g=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else g=5123;else if(h instanceof Int16Array)g=5122;else if(h instanceof Uint32Array)g=5125;else if(h instanceof Int32Array)g=5124;else if(h instanceof Int8Array)g=5120;else if(h instanceof Uint8Array)g=5121;else if(h instanceof Uint8ClampedArray)g=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:f,type:g,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function r(c,l,h){const u=l.array,f=l.updateRange;s.bindBuffer(h,c),f.count===-1?s.bufferSubData(h,0,u):(t?s.bufferSubData(h,f.offset*u.BYTES_PER_ELEMENT,u,f.offset,f.count):s.bufferSubData(h,f.offset*u.BYTES_PER_ELEMENT,u.subarray(f.offset,f.offset+f.count)),f.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function A(c){c.isInterleavedBufferAttribute&&(c=c.data);const l=n.get(c);l&&(s.deleteBuffer(l.buffer),n.delete(c))}function a(c,l){if(c.isGLBufferAttribute){const u=n.get(c);(!u||u.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h===void 0?n.set(c,i(c,l)):h.version<c.version&&(r(h.buffer,c,l),h.version=c.version)}return{get:o,remove:A,update:a}}class Mt extends Xe{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,o=t/2,A=Math.floor(n),a=Math.floor(i),c=A+1,l=a+1,h=e/A,u=t/a,f=[],g=[],p=[],d=[];for(let m=0;m<l;m++){const v=m*u-o;for(let y=0;y<c;y++){const Q=y*h-r;g.push(Q,-v,0),p.push(0,0,1),d.push(y/A),d.push(1-m/a)}}for(let m=0;m<a;m++)for(let v=0;v<A;v++){const y=v+c*m,Q=v+c*(m+1),M=v+1+c*(m+1),I=v+1+c*m;f.push(y,Q,I),f.push(Q,M,I)}this.setIndex(f),this.setAttribute("position",new $e(g,3)),this.setAttribute("normal",new $e(p,3)),this.setAttribute("uv",new $e(d,2))}static fromJSON(e){return new Mt(e.width,e.height,e.widthSegments,e.heightSegments)}}var K3=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,j3=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,W3=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,O3=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,J3=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Z3=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,X3="vec3 transformed = vec3( position );",q3=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,$3=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,ec=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,tc=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,nc=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,ic=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,rc=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,sc=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,oc=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Ac=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,ac=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,cc=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,lc=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,hc=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,uc=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,dc=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,fc=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,pc=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,gc="gl_FragColor = linearToOutputTexel( gl_FragColor );",mc=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,wc=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Bc=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Mc=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Ec=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,yc=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,xc=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Cc=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,vc=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Qc=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,_c=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,Ic=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,bc=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Fc=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,Tc=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Sc=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,Dc=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Uc=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,Gc=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Rc=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,Nc=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,zc=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Lc=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Pc=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,kc=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Yc=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Hc=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Vc=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Kc=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,jc=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Wc=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Oc=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Jc=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Zc=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Xc=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,qc=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,$c=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,el=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,tl=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,nl=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,il=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,rl=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,sl=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,ol=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Al=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,al=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,cl=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,ll=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,hl=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,ul=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,dl=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,fl=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,pl=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,gl=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,ml=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,wl=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Bl=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Ml=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,El=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,yl=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,xl=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Cl=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,vl=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Ql=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,_l=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Il=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,bl=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Fl=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Tl=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,Sl=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,Dl=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,Ul=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,Gl=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,Rl=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,Nl=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,zl=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,Ll=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Pl=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,kl=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Yl=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Hl=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Vl=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Kl=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,jl=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Wl=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Ol=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Jl=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Zl=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Xl=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,ql=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,$l=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,e0=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,t0=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,n0=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,i0=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,r0=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,s0=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,o0=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,A0=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,a0=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,c0=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,l0=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,h0=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,u0=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,d0=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,f0=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,p0=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,g0=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,m0=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Ge={alphamap_fragment:K3,alphamap_pars_fragment:j3,alphatest_fragment:W3,alphatest_pars_fragment:O3,aomap_fragment:J3,aomap_pars_fragment:Z3,begin_vertex:X3,beginnormal_vertex:q3,bsdfs:$3,bumpmap_pars_fragment:ec,clipping_planes_fragment:tc,clipping_planes_pars_fragment:nc,clipping_planes_pars_vertex:ic,clipping_planes_vertex:rc,color_fragment:sc,color_pars_fragment:oc,color_pars_vertex:Ac,color_vertex:ac,common:cc,cube_uv_reflection_fragment:lc,defaultnormal_vertex:hc,displacementmap_pars_vertex:uc,displacementmap_vertex:dc,emissivemap_fragment:fc,emissivemap_pars_fragment:pc,encodings_fragment:gc,encodings_pars_fragment:mc,envmap_fragment:wc,envmap_common_pars_fragment:Bc,envmap_pars_fragment:Mc,envmap_pars_vertex:Ec,envmap_physical_pars_fragment:Sc,envmap_vertex:yc,fog_vertex:xc,fog_pars_vertex:Cc,fog_fragment:vc,fog_pars_fragment:Qc,gradientmap_pars_fragment:_c,lightmap_fragment:Ic,lightmap_pars_fragment:bc,lights_lambert_vertex:Fc,lights_pars_begin:Tc,lights_toon_fragment:Dc,lights_toon_pars_fragment:Uc,lights_phong_fragment:Gc,lights_phong_pars_fragment:Rc,lights_physical_fragment:Nc,lights_physical_pars_fragment:zc,lights_fragment_begin:Lc,lights_fragment_maps:Pc,lights_fragment_end:kc,logdepthbuf_fragment:Yc,logdepthbuf_pars_fragment:Hc,logdepthbuf_pars_vertex:Vc,logdepthbuf_vertex:Kc,map_fragment:jc,map_pars_fragment:Wc,map_particle_fragment:Oc,map_particle_pars_fragment:Jc,metalnessmap_fragment:Zc,metalnessmap_pars_fragment:Xc,morphcolor_vertex:qc,morphnormal_vertex:$c,morphtarget_pars_vertex:el,morphtarget_vertex:tl,normal_fragment_begin:nl,normal_fragment_maps:il,normal_pars_fragment:rl,normal_pars_vertex:sl,normal_vertex:ol,normalmap_pars_fragment:Al,clearcoat_normal_fragment_begin:al,clearcoat_normal_fragment_maps:cl,clearcoat_pars_fragment:ll,output_fragment:hl,packing:ul,premultiplied_alpha_fragment:dl,project_vertex:fl,dithering_fragment:pl,dithering_pars_fragment:gl,roughnessmap_fragment:ml,roughnessmap_pars_fragment:wl,shadowmap_pars_fragment:Bl,shadowmap_pars_vertex:Ml,shadowmap_vertex:El,shadowmask_pars_fragment:yl,skinbase_vertex:xl,skinning_pars_vertex:Cl,skinning_vertex:vl,skinnormal_vertex:Ql,specularmap_fragment:_l,specularmap_pars_fragment:Il,tonemapping_fragment:bl,tonemapping_pars_fragment:Fl,transmission_fragment:Tl,transmission_pars_fragment:Sl,uv_pars_fragment:Dl,uv_pars_vertex:Ul,uv_vertex:Gl,uv2_pars_fragment:Rl,uv2_pars_vertex:Nl,uv2_vertex:zl,worldpos_vertex:Ll,background_vert:Pl,background_frag:kl,cube_vert:Yl,cube_frag:Hl,depth_vert:Vl,depth_frag:Kl,distanceRGBA_vert:jl,distanceRGBA_frag:Wl,equirect_vert:Ol,equirect_frag:Jl,linedashed_vert:Zl,linedashed_frag:Xl,meshbasic_vert:ql,meshbasic_frag:$l,meshlambert_vert:e0,meshlambert_frag:t0,meshmatcap_vert:n0,meshmatcap_frag:i0,meshnormal_vert:r0,meshnormal_frag:s0,meshphong_vert:o0,meshphong_frag:A0,meshphysical_vert:a0,meshphysical_frag:c0,meshtoon_vert:l0,meshtoon_frag:h0,points_vert:u0,points_frag:d0,shadow_vert:f0,shadow_frag:p0,sprite_vert:g0,sprite_frag:m0},Ae={common:{diffuse:{value:new ie(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new yt},uv2Transform:{value:new yt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new V(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ie(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ie(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new yt}},sprite:{diffuse:{value:new ie(16777215)},opacity:{value:1},center:{value:new V(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new yt}}},o2={basic:{uniforms:Ct([Ae.common,Ae.specularmap,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.fog]),vertexShader:Ge.meshbasic_vert,fragmentShader:Ge.meshbasic_frag},lambert:{uniforms:Ct([Ae.common,Ae.specularmap,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.fog,Ae.lights,{emissive:{value:new ie(0)}}]),vertexShader:Ge.meshlambert_vert,fragmentShader:Ge.meshlambert_frag},phong:{uniforms:Ct([Ae.common,Ae.specularmap,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.fog,Ae.lights,{emissive:{value:new ie(0)},specular:{value:new ie(1118481)},shininess:{value:30}}]),vertexShader:Ge.meshphong_vert,fragmentShader:Ge.meshphong_frag},standard:{uniforms:Ct([Ae.common,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.roughnessmap,Ae.metalnessmap,Ae.fog,Ae.lights,{emissive:{value:new ie(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ge.meshphysical_vert,fragmentShader:Ge.meshphysical_frag},toon:{uniforms:Ct([Ae.common,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.gradientmap,Ae.fog,Ae.lights,{emissive:{value:new ie(0)}}]),vertexShader:Ge.meshtoon_vert,fragmentShader:Ge.meshtoon_frag},matcap:{uniforms:Ct([Ae.common,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.fog,{matcap:{value:null}}]),vertexShader:Ge.meshmatcap_vert,fragmentShader:Ge.meshmatcap_frag},points:{uniforms:Ct([Ae.points,Ae.fog]),vertexShader:Ge.points_vert,fragmentShader:Ge.points_frag},dashed:{uniforms:Ct([Ae.common,Ae.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ge.linedashed_vert,fragmentShader:Ge.linedashed_frag},depth:{uniforms:Ct([Ae.common,Ae.displacementmap]),vertexShader:Ge.depth_vert,fragmentShader:Ge.depth_frag},normal:{uniforms:Ct([Ae.common,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,{opacity:{value:1}}]),vertexShader:Ge.meshnormal_vert,fragmentShader:Ge.meshnormal_frag},sprite:{uniforms:Ct([Ae.sprite,Ae.fog]),vertexShader:Ge.sprite_vert,fragmentShader:Ge.sprite_frag},background:{uniforms:{uvTransform:{value:new yt},t2D:{value:null}},vertexShader:Ge.background_vert,fragmentShader:Ge.background_frag},cube:{uniforms:Ct([Ae.envmap,{opacity:{value:1}}]),vertexShader:Ge.cube_vert,fragmentShader:Ge.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ge.equirect_vert,fragmentShader:Ge.equirect_frag},distanceRGBA:{uniforms:Ct([Ae.common,Ae.displacementmap,{referencePosition:{value:new w},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ge.distanceRGBA_vert,fragmentShader:Ge.distanceRGBA_frag},shadow:{uniforms:Ct([Ae.lights,Ae.fog,{color:{value:new ie(0)},opacity:{value:1}}]),vertexShader:Ge.shadow_vert,fragmentShader:Ge.shadow_frag}};o2.physical={uniforms:Ct([o2.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new V(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new ie(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new V},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new ie(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new ie(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Ge.meshphysical_vert,fragmentShader:Ge.meshphysical_frag};function w0(s,e,t,n,i,r){const o=new ie(0);let A=i===!0?0:1,a,c,l=null,h=0,u=null;function f(p,d){let m=!1,v=d.isScene===!0?d.background:null;v&&v.isTexture&&(v=e.get(v));const y=s.xr,Q=y.getSession&&y.getSession();Q&&Q.environmentBlendMode==="additive"&&(v=null),v===null?g(o,A):v&&v.isColor&&(g(v,1),m=!0),(s.autoClear||m)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),v&&(v.isCubeTexture||v.mapping===yr)?(c===void 0&&(c=new ge(new it(1,1,1),new Ze({name:"BackgroundCubeMaterial",uniforms:Nn(o2.cube.uniforms),vertexShader:o2.cube.vertexShader,fragmentShader:o2.cube.fragmentShader,side:Zt,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(M,I,T){this.matrixWorld.copyPosition(T.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(c)),c.material.uniforms.envMap.value=v,c.material.uniforms.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,(l!==v||h!==v.version||u!==s.toneMapping)&&(c.material.needsUpdate=!0,l=v,h=v.version,u=s.toneMapping),p.unshift(c,c.geometry,c.material,0,0,null)):v&&v.isTexture&&(a===void 0&&(a=new ge(new Mt(2,2),new Ze({name:"BackgroundMaterial",uniforms:Nn(o2.background.uniforms),vertexShader:o2.background.vertexShader,fragmentShader:o2.background.fragmentShader,side:di,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(a)),a.material.uniforms.t2D.value=v,v.matrixAutoUpdate===!0&&v.updateMatrix(),a.material.uniforms.uvTransform.value.copy(v.matrix),(l!==v||h!==v.version||u!==s.toneMapping)&&(a.material.needsUpdate=!0,l=v,h=v.version,u=s.toneMapping),p.unshift(a,a.geometry,a.material,0,0,null))}function g(p,d){t.buffers.color.setClear(p.r,p.g,p.b,d,r)}return{getClearColor:function(){return o},setClearColor:function(p,d=1){o.set(p),A=d,g(o,A)},getClearAlpha:function(){return A},setClearAlpha:function(p){A=p,g(o,A)},render:f}}function B0(s,e,t,n){const i=s.getParameter(34921),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||r!==null,A={},a=d(null);let c=a,l=!1;function h(D,P,N,k,S){let W=!1;if(o){const $=p(k,N,P);c!==$&&(c=$,f(c.object)),W=m(k,S),W&&v(k,S)}else{const $=P.wireframe===!0;(c.geometry!==k.id||c.program!==N.id||c.wireframe!==$)&&(c.geometry=k.id,c.program=N.id,c.wireframe=$,W=!0)}D.isInstancedMesh===!0&&(W=!0),S!==null&&t.update(S,34963),(W||l)&&(l=!1,U(D,P,N,k),S!==null&&s.bindBuffer(34963,t.get(S).buffer))}function u(){return n.isWebGL2?s.createVertexArray():r.createVertexArrayOES()}function f(D){return n.isWebGL2?s.bindVertexArray(D):r.bindVertexArrayOES(D)}function g(D){return n.isWebGL2?s.deleteVertexArray(D):r.deleteVertexArrayOES(D)}function p(D,P,N){const k=N.wireframe===!0;let S=A[D.id];S===void 0&&(S={},A[D.id]=S);let W=S[P.id];W===void 0&&(W={},S[P.id]=W);let $=W[k];return $===void 0&&($=d(u()),W[k]=$),$}function d(D){const P=[],N=[],k=[];for(let S=0;S<i;S++)P[S]=0,N[S]=0,k[S]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:P,enabledAttributes:N,attributeDivisors:k,object:D,attributes:{},index:null}}function m(D,P){const N=c.attributes,k=D.attributes;let S=0;for(const W in k){const $=N[W],ee=k[W];if($===void 0||$.attribute!==ee||$.data!==ee.data)return!0;S++}return c.attributesNum!==S||c.index!==P}function v(D,P){const N={},k=D.attributes;let S=0;for(const W in k){const $=k[W],ee={};ee.attribute=$,$.data&&(ee.data=$.data),N[W]=ee,S++}c.attributes=N,c.attributesNum=S,c.index=P}function y(){const D=c.newAttributes;for(let P=0,N=D.length;P<N;P++)D[P]=0}function Q(D){M(D,0)}function M(D,P){const N=c.newAttributes,k=c.enabledAttributes,S=c.attributeDivisors;N[D]=1,k[D]===0&&(s.enableVertexAttribArray(D),k[D]=1),S[D]!==P&&((n.isWebGL2?s:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](D,P),S[D]=P)}function I(){const D=c.newAttributes,P=c.enabledAttributes;for(let N=0,k=P.length;N<k;N++)P[N]!==D[N]&&(s.disableVertexAttribArray(N),P[N]=0)}function T(D,P,N,k,S,W){n.isWebGL2===!0&&(N===5124||N===5125)?s.vertexAttribIPointer(D,P,N,S,W):s.vertexAttribPointer(D,P,N,k,S,W)}function U(D,P,N,k){if(n.isWebGL2===!1&&(D.isInstancedMesh||k.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;y();const S=k.attributes,W=N.getAttributes(),$=P.defaultAttributeValues;for(const ee in W){const te=W[ee];if(te.location>=0){let he=S[ee];if(he===void 0&&(ee==="instanceMatrix"&&D.instanceMatrix&&(he=D.instanceMatrix),ee==="instanceColor"&&D.instanceColor&&(he=D.instanceColor)),he!==void 0){const Re=he.normalized,Ce=he.itemSize,j=t.get(he);if(j===void 0)continue;const ke=j.buffer,Ie=j.type,be=j.bytesPerElement;if(he.isInterleavedBufferAttribute){const re=he.data,Ue=re.stride,K=he.offset;if(re.isInstancedInterleavedBuffer){for(let Z=0;Z<te.locationSize;Z++)M(te.location+Z,re.meshPerAttribute);D.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=re.meshPerAttribute*re.count)}else for(let Z=0;Z<te.locationSize;Z++)Q(te.location+Z);s.bindBuffer(34962,ke);for(let Z=0;Z<te.locationSize;Z++)T(te.location+Z,Ce/te.locationSize,Ie,Re,Ue*be,(K+Ce/te.locationSize*Z)*be)}else{if(he.isInstancedBufferAttribute){for(let re=0;re<te.locationSize;re++)M(te.location+re,he.meshPerAttribute);D.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=he.meshPerAttribute*he.count)}else for(let re=0;re<te.locationSize;re++)Q(te.location+re);s.bindBuffer(34962,ke);for(let re=0;re<te.locationSize;re++)T(te.location+re,Ce/te.locationSize,Ie,Re,Ce*be,Ce/te.locationSize*re*be)}}else if($!==void 0){const Re=$[ee];if(Re!==void 0)switch(Re.length){case 2:s.vertexAttrib2fv(te.location,Re);break;case 3:s.vertexAttrib3fv(te.location,Re);break;case 4:s.vertexAttrib4fv(te.location,Re);break;default:s.vertexAttrib1fv(te.location,Re)}}}}I()}function X(){F();for(const D in A){const P=A[D];for(const N in P){const k=P[N];for(const S in k)g(k[S].object),delete k[S];delete P[N]}delete A[D]}}function z(D){if(A[D.id]===void 0)return;const P=A[D.id];for(const N in P){const k=P[N];for(const S in k)g(k[S].object),delete k[S];delete P[N]}delete A[D.id]}function B(D){for(const P in A){const N=A[P];if(N[D.id]===void 0)continue;const k=N[D.id];for(const S in k)g(k[S].object),delete k[S];delete N[D.id]}}function F(){J(),l=!0,c!==a&&(c=a,f(c.object))}function J(){a.geometry=null,a.program=null,a.wireframe=!1}return{setup:h,reset:F,resetDefaultState:J,dispose:X,releaseStatesOfGeometry:z,releaseStatesOfProgram:B,initAttributes:y,enableAttribute:Q,disableUnusedAttributes:I}}function M0(s,e,t,n){const i=n.isWebGL2;let r;function o(c){r=c}function A(c,l){s.drawArrays(r,c,l),t.update(l,r,1)}function a(c,l,h){if(h===0)return;let u,f;if(i)u=s,f="drawArraysInstanced";else if(u=e.get("ANGLE_instanced_arrays"),f="drawArraysInstancedANGLE",u===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}u[f](r,c,l,h),t.update(l,r,h)}this.setMode=o,this.render=A,this.renderInstances=a}function E0(s,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const T=e.get("EXT_texture_filter_anisotropic");n=s.getParameter(T.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(T){if(T==="highp"){if(s.getShaderPrecisionFormat(35633,36338).precision>0&&s.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";T="mediump"}return T==="mediump"&&s.getShaderPrecisionFormat(35633,36337).precision>0&&s.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext!="undefined"&&s instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&s instanceof WebGL2ComputeRenderingContext;let A=t.precision!==void 0?t.precision:"highp";const a=r(A);a!==A&&(console.warn("THREE.WebGLRenderer:",A,"not supported, using",a,"instead."),A=a);const c=o||e.has("WEBGL_draw_buffers"),l=t.logarithmicDepthBuffer===!0,h=s.getParameter(34930),u=s.getParameter(35660),f=s.getParameter(3379),g=s.getParameter(34076),p=s.getParameter(34921),d=s.getParameter(36347),m=s.getParameter(36348),v=s.getParameter(36349),y=u>0,Q=o||e.has("OES_texture_float"),M=y&&Q,I=o?s.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:r,precision:A,logarithmicDepthBuffer:l,maxTextures:h,maxVertexTextures:u,maxTextureSize:f,maxCubemapSize:g,maxAttributes:p,maxVertexUniforms:d,maxVaryings:m,maxFragmentUniforms:v,vertexTextures:y,floatFragmentTextures:Q,floatVertexTextures:M,maxSamples:I}}function y0(s){const e=this;let t=null,n=0,i=!1,r=!1;const o=new m2,A=new yt,a={value:null,needsUpdate:!1};this.uniform=a,this.numPlanes=0,this.numIntersection=0,this.init=function(h,u,f){const g=h.length!==0||u||n!==0||i;return i=u,t=l(h,f,0),n=h.length,g},this.beginShadows=function(){r=!0,l(null)},this.endShadows=function(){r=!1,c()},this.setState=function(h,u,f){const g=h.clippingPlanes,p=h.clipIntersection,d=h.clipShadows,m=s.get(h);if(!i||g===null||g.length===0||r&&!d)r?l(null):c();else{const v=r?0:n,y=v*4;let Q=m.clippingState||null;a.value=Q,Q=l(g,u,y,f);for(let M=0;M!==y;++M)Q[M]=t[M];m.clippingState=Q,this.numIntersection=p?this.numPlanes:0,this.numPlanes+=v}};function c(){a.value!==t&&(a.value=t,a.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function l(h,u,f,g){const p=h!==null?h.length:0;let d=null;if(p!==0){if(d=a.value,g!==!0||d===null){const m=f+p*4,v=u.matrixWorldInverse;A.getNormalMatrix(v),(d===null||d.length<m)&&(d=new Float32Array(m));for(let y=0,Q=f;y!==p;++y,Q+=4)o.copy(h[y]).applyMatrix4(v,A),o.normal.toArray(d,Q),d[Q+3]=o.constant}a.value=d,a.needsUpdate=!0}return e.numPlanes=p,e.numIntersection=0,d}}function x0(s){let e=new WeakMap;function t(o,A){return A===Gn?o.mapping=Dn:A===N1&&(o.mapping=Un),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const A=o.mapping;if(A===Gn||A===N1)if(e.has(o)){const a=e.get(o).texture;return t(a,o.mapping)}else{const a=o.image;if(a&&a.height>0){const c=new _A(a.height/2);return c.fromEquirectangularTexture(s,o),e.set(o,c),o.addEventListener("dispose",i),t(c.texture,o.mapping)}else return null}}return o}function i(o){const A=o.target;A.removeEventListener("dispose",i);const a=e.get(A);a!==void 0&&(e.delete(A),a.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}class Gt extends q1{constructor(e=-1,t=1,n=1,i=-1,r=.1,o=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,o=n+e,A=i+t,a=i-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,l=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,A-=l*this.view.offsetY,a=A-l*this.view.height}this.projectionMatrix.makeOrthographic(r,o,A,a,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}Gt.prototype.isOrthographicCamera=!0;const vn=4,co=[.125,.215,.35,.446,.526,.582],H2=20,g1=new Gt,lo=new ie;let m1=null;const Y2=(1+Math.sqrt(5))/2,gn=1/Y2,ho=[new w(1,1,1),new w(-1,1,1),new w(1,1,-1),new w(-1,1,-1),new w(0,Y2,gn),new w(0,Y2,-gn),new w(gn,0,Y2),new w(-gn,0,Y2),new w(Y2,gn,0),new w(-Y2,gn,0)];class uo{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){m1=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=go(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=po(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(m1),e.scissorTest=!1,ji(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Dn||e.mapping===Un?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),m1=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize-32,n={magFilter:St,minFilter:St,generateMipmaps:!1,type:Fn,format:Jt,encoding:B2,depthBuffer:!1},i=fo(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=fo(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=C0(r)),this._blurMaterial=v0(r,e,t)}return i}_compileMaterial(e){const t=new ge(this._lodPlanes[0],e);this._renderer.compile(t,g1)}_sceneToCubeUV(e,t,n,i){const A=new mt(90,1,t,n),a=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],l=this._renderer,h=l.autoClear,u=l.toneMapping;l.getClearColor(lo),l.toneMapping=Xt,l.autoClear=!1;const f=new Qt({name:"PMREM.Background",side:Zt,depthWrite:!1,depthTest:!1}),g=new ge(new it,f);let p=!1;const d=e.background;d?d.isColor&&(f.color.copy(d),e.background=null,p=!0):(f.color.copy(lo),p=!0);for(let m=0;m<6;m++){const v=m%3;v===0?(A.up.set(0,a[m],0),A.lookAt(c[m],0,0)):v===1?(A.up.set(0,0,a[m]),A.lookAt(0,c[m],0)):(A.up.set(0,a[m],0),A.lookAt(0,0,c[m]));const y=this._cubeSize;ji(i,v*y,m>2?y:0,y,y),l.setRenderTarget(i),p&&l.render(g,A),l.render(e,A)}g.geometry.dispose(),g.material.dispose(),l.toneMapping=u,l.autoClear=h,e.background=d}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Dn||e.mapping===Un;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=go()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=po());const r=i?this._cubemapMaterial:this._equirectMaterial,o=new ge(this._lodPlanes[0],r),A=r.uniforms;A.envMap.value=e;const a=this._cubeSize;ji(t,0,0,3*a,2*a),n.setRenderTarget(t),n.render(o,g1)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=ho[(i-1)%ho.length];this._blur(e,i-1,i,r,o)}t.autoClear=n}_blur(e,t,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",r),this._halfBlur(o,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,o,A){const a=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const l=3,h=new ge(this._lodPlanes[i],c),u=c.uniforms,f=this._sizeLods[n]-1,g=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*H2-1),p=r/g,d=isFinite(r)?1+Math.floor(l*p):H2;d>H2&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${d} samples when the maximum is set to ${H2}`);const m=[];let v=0;for(let T=0;T<H2;++T){const U=T/p,X=Math.exp(-U*U/2);m.push(X),T===0?v+=X:T<d&&(v+=2*X)}for(let T=0;T<m.length;T++)m[T]=m[T]/v;u.envMap.value=e.texture,u.samples.value=d,u.weights.value=m,u.latitudinal.value=o==="latitudinal",A&&(u.poleAxis.value=A);const{_lodMax:y}=this;u.dTheta.value=g,u.mipInt.value=y-n;const Q=this._sizeLods[i],M=3*Q*(i>y-vn?i-y+vn:0),I=4*(this._cubeSize-Q);ji(t,M,I,3*Q,2*Q),a.setRenderTarget(t),a.render(h,g1)}}function C0(s){const e=[],t=[],n=[];let i=s;const r=s-vn+1+co.length;for(let o=0;o<r;o++){const A=Math.pow(2,i);t.push(A);let a=1/A;o>s-vn?a=co[o-s+vn-1]:o===0&&(a=0),n.push(a);const c=1/(A-1),l=-c/2,h=1+c/2,u=[l,l,h,l,h,h,l,l,h,h,l,h],f=6,g=6,p=3,d=2,m=1,v=new Float32Array(p*g*f),y=new Float32Array(d*g*f),Q=new Float32Array(m*g*f);for(let I=0;I<f;I++){const T=I%3*2/3-1,U=I>2?0:-1,X=[T,U,0,T+2/3,U,0,T+2/3,U+1,0,T,U,0,T+2/3,U+1,0,T,U+1,0];v.set(X,p*g*I),y.set(u,d*g*I);const z=[I,I,I,I,I,I];Q.set(z,m*g*I)}const M=new Xe;M.setAttribute("position",new ot(v,p)),M.setAttribute("uv",new ot(y,d)),M.setAttribute("faceIndex",new ot(Q,m)),e.push(M),i>vn&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function fo(s,e,t){const n=new je(s,e,t);return n.texture.mapping=yr,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function ji(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function v0(s,e,t){const n=new Float32Array(H2),i=new w(0,1,0);return new Ze({name:"SphericalGaussianBlur",defines:{n:H2,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:es(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:F2,depthTest:!1,depthWrite:!1})}function po(){return new Ze({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:es(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:F2,depthTest:!1,depthWrite:!1})}function go(){return new Ze({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:es(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:F2,depthTest:!1,depthWrite:!1})}function es(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Q0(s){let e=new WeakMap,t=null;function n(A){if(A&&A.isTexture){const a=A.mapping,c=a===Gn||a===N1,l=a===Dn||a===Un;if(c||l)if(A.isRenderTargetTexture&&A.needsPMREMUpdate===!0){A.needsPMREMUpdate=!1;let h=e.get(A);return t===null&&(t=new uo(s)),h=c?t.fromEquirectangular(A,h):t.fromCubemap(A,h),e.set(A,h),h.texture}else{if(e.has(A))return e.get(A).texture;{const h=A.image;if(c&&h&&h.height>0||l&&h&&i(h)){t===null&&(t=new uo(s));const u=c?t.fromEquirectangular(A):t.fromCubemap(A);return e.set(A,u),A.addEventListener("dispose",r),u.texture}else return null}}}return A}function i(A){let a=0;const c=6;for(let l=0;l<c;l++)A[l]!==void 0&&a++;return a===c}function r(A){const a=A.target;a.removeEventListener("dispose",r);const c=e.get(a);c!==void 0&&(e.delete(a),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function _0(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function I0(s,e,t,n){const i={},r=new WeakMap;function o(h){const u=h.target;u.index!==null&&e.remove(u.index);for(const g in u.attributes)e.remove(u.attributes[g]);u.removeEventListener("dispose",o),delete i[u.id];const f=r.get(u);f&&(e.remove(f),r.delete(u)),n.releaseStatesOfGeometry(u),u.isInstancedBufferGeometry===!0&&delete u._maxInstanceCount,t.memory.geometries--}function A(h,u){return i[u.id]===!0||(u.addEventListener("dispose",o),i[u.id]=!0,t.memory.geometries++),u}function a(h){const u=h.attributes;for(const g in u)e.update(u[g],34962);const f=h.morphAttributes;for(const g in f){const p=f[g];for(let d=0,m=p.length;d<m;d++)e.update(p[d],34962)}}function c(h){const u=[],f=h.index,g=h.attributes.position;let p=0;if(f!==null){const v=f.array;p=f.version;for(let y=0,Q=v.length;y<Q;y+=3){const M=v[y+0],I=v[y+1],T=v[y+2];u.push(M,I,I,T,T,M)}}else{const v=g.array;p=g.version;for(let y=0,Q=v.length/3-1;y<Q;y+=3){const M=y+0,I=y+1,T=y+2;u.push(M,I,I,T,T,M)}}const d=new(EA(u)?QA:vA)(u,1);d.version=p;const m=r.get(h);m&&e.remove(m),r.set(h,d)}function l(h){const u=r.get(h);if(u){const f=h.index;f!==null&&u.version<f.version&&c(h)}else c(h);return r.get(h)}return{get:A,update:a,getWireframeAttribute:l}}function b0(s,e,t,n){const i=n.isWebGL2;let r;function o(u){r=u}let A,a;function c(u){A=u.type,a=u.bytesPerElement}function l(u,f){s.drawElements(r,f,A,u*a),t.update(f,r,1)}function h(u,f,g){if(g===0)return;let p,d;if(i)p=s,d="drawElementsInstanced";else if(p=e.get("ANGLE_instanced_arrays"),d="drawElementsInstancedANGLE",p===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}p[d](r,f,A,u*a,g),t.update(f,r,g)}this.setMode=o,this.setIndex=c,this.render=l,this.renderInstances=h}function F0(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,A){switch(t.calls++,o){case 4:t.triangles+=A*(r/3);break;case 1:t.lines+=A*(r/2);break;case 3:t.lines+=A*(r-1);break;case 2:t.lines+=A*r;break;case 0:t.points+=A*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function T0(s,e){return s[0]-e[0]}function S0(s,e){return Math.abs(e[1])-Math.abs(s[1])}function w1(s,e){let t=1;const n=e.isInterleavedBufferAttribute?e.data.array:e.array;n instanceof Int8Array?t=127:n instanceof Int16Array?t=32767:n instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),s.divideScalar(t)}function D0(s,e,t){const n={},i=new Float32Array(8),r=new WeakMap,o=new Je,A=[];for(let c=0;c<8;c++)A[c]=[c,0];function a(c,l,h,u){const f=c.morphTargetInfluences;if(e.isWebGL2===!0){const p=l.morphAttributes.position||l.morphAttributes.normal||l.morphAttributes.color,d=p!==void 0?p.length:0;let m=r.get(l);if(m===void 0||m.count!==d){let N=function(){D.dispose(),r.delete(l),l.removeEventListener("dispose",N)};var g=N;m!==void 0&&m.texture.dispose();const Q=l.morphAttributes.position!==void 0,M=l.morphAttributes.normal!==void 0,I=l.morphAttributes.color!==void 0,T=l.morphAttributes.position||[],U=l.morphAttributes.normal||[],X=l.morphAttributes.color||[];let z=0;Q===!0&&(z=1),M===!0&&(z=2),I===!0&&(z=3);let B=l.attributes.position.count*z,F=1;B>e.maxTextureSize&&(F=Math.ceil(B/e.maxTextureSize),B=e.maxTextureSize);const J=new Float32Array(B*F*4*d),D=new Cr(J,B,F,d);D.type=V2,D.needsUpdate=!0;const P=z*4;for(let k=0;k<d;k++){const S=T[k],W=U[k],$=X[k],ee=B*F*4*k;for(let te=0;te<S.count;te++){const he=te*P;Q===!0&&(o.fromBufferAttribute(S,te),S.normalized===!0&&w1(o,S),J[ee+he+0]=o.x,J[ee+he+1]=o.y,J[ee+he+2]=o.z,J[ee+he+3]=0),M===!0&&(o.fromBufferAttribute(W,te),W.normalized===!0&&w1(o,W),J[ee+he+4]=o.x,J[ee+he+5]=o.y,J[ee+he+6]=o.z,J[ee+he+7]=0),I===!0&&(o.fromBufferAttribute($,te),$.normalized===!0&&w1(o,$),J[ee+he+8]=o.x,J[ee+he+9]=o.y,J[ee+he+10]=o.z,J[ee+he+11]=$.itemSize===4?o.w:1)}}m={count:d,texture:D,size:new V(B,F)},r.set(l,m),l.addEventListener("dispose",N)}let v=0;for(let Q=0;Q<f.length;Q++)v+=f[Q];const y=l.morphTargetsRelative?1:1-v;u.getUniforms().setValue(s,"morphTargetBaseInfluence",y),u.getUniforms().setValue(s,"morphTargetInfluences",f),u.getUniforms().setValue(s,"morphTargetsTexture",m.texture,t),u.getUniforms().setValue(s,"morphTargetsTextureSize",m.size)}else{const p=f===void 0?0:f.length;let d=n[l.id];if(d===void 0||d.length!==p){d=[];for(let M=0;M<p;M++)d[M]=[M,0];n[l.id]=d}for(let M=0;M<p;M++){const I=d[M];I[0]=M,I[1]=f[M]}d.sort(S0);for(let M=0;M<8;M++)M<p&&d[M][1]?(A[M][0]=d[M][0],A[M][1]=d[M][1]):(A[M][0]=Number.MAX_SAFE_INTEGER,A[M][1]=0);A.sort(T0);const m=l.morphAttributes.position,v=l.morphAttributes.normal;let y=0;for(let M=0;M<8;M++){const I=A[M],T=I[0],U=I[1];T!==Number.MAX_SAFE_INTEGER&&U?(m&&l.getAttribute("morphTarget"+M)!==m[T]&&l.setAttribute("morphTarget"+M,m[T]),v&&l.getAttribute("morphNormal"+M)!==v[T]&&l.setAttribute("morphNormal"+M,v[T]),i[M]=U,y+=U):(m&&l.hasAttribute("morphTarget"+M)===!0&&l.deleteAttribute("morphTarget"+M),v&&l.hasAttribute("morphNormal"+M)===!0&&l.deleteAttribute("morphNormal"+M),i[M]=0)}const Q=l.morphTargetsRelative?1:1-y;u.getUniforms().setValue(s,"morphTargetBaseInfluence",Q),u.getUniforms().setValue(s,"morphTargetInfluences",i)}}return{update:a}}function U0(s,e,t,n){let i=new WeakMap;function r(a){const c=n.render.frame,l=a.geometry,h=e.get(a,l);return i.get(h)!==c&&(e.update(h),i.set(h,c)),a.isInstancedMesh&&(a.hasEventListener("dispose",A)===!1&&a.addEventListener("dispose",A),t.update(a.instanceMatrix,34962),a.instanceColor!==null&&t.update(a.instanceColor,34962)),h}function o(){i=new WeakMap}function A(a){const c=a.target;c.removeEventListener("dispose",A),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:r,dispose:o}}const bA=new at,FA=new Cr,TA=new X1,SA=new vr,mo=[],wo=[],Bo=new Float32Array(16),Mo=new Float32Array(9),Eo=new Float32Array(4);function Vn(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let r=mo[i];if(r===void 0&&(r=new Float32Array(i),mo[i]=r),e!==0){n.toArray(r,0);for(let o=1,A=0;o!==e;++o)A+=t,s[o].toArray(r,A)}return r}function Tt(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function _t(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function _r(s,e){let t=wo[e];t===void 0&&(t=new Int32Array(e),wo[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function G0(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function R0(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Tt(t,e))return;s.uniform2fv(this.addr,e),_t(t,e)}}function N0(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Tt(t,e))return;s.uniform3fv(this.addr,e),_t(t,e)}}function z0(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Tt(t,e))return;s.uniform4fv(this.addr,e),_t(t,e)}}function L0(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Tt(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),_t(t,e)}else{if(Tt(t,n))return;Eo.set(n),s.uniformMatrix2fv(this.addr,!1,Eo),_t(t,n)}}function P0(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Tt(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),_t(t,e)}else{if(Tt(t,n))return;Mo.set(n),s.uniformMatrix3fv(this.addr,!1,Mo),_t(t,n)}}function k0(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Tt(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),_t(t,e)}else{if(Tt(t,n))return;Bo.set(n),s.uniformMatrix4fv(this.addr,!1,Bo),_t(t,n)}}function Y0(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function H0(s,e){const t=this.cache;Tt(t,e)||(s.uniform2iv(this.addr,e),_t(t,e))}function V0(s,e){const t=this.cache;Tt(t,e)||(s.uniform3iv(this.addr,e),_t(t,e))}function K0(s,e){const t=this.cache;Tt(t,e)||(s.uniform4iv(this.addr,e),_t(t,e))}function j0(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function W0(s,e){const t=this.cache;Tt(t,e)||(s.uniform2uiv(this.addr,e),_t(t,e))}function O0(s,e){const t=this.cache;Tt(t,e)||(s.uniform3uiv(this.addr,e),_t(t,e))}function J0(s,e){const t=this.cache;Tt(t,e)||(s.uniform4uiv(this.addr,e),_t(t,e))}function Z0(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||bA,i)}function X0(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||TA,i)}function q0(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||SA,i)}function $0(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||FA,i)}function eh(s){switch(s){case 5126:return G0;case 35664:return R0;case 35665:return N0;case 35666:return z0;case 35674:return L0;case 35675:return P0;case 35676:return k0;case 5124:case 35670:return Y0;case 35667:case 35671:return H0;case 35668:case 35672:return V0;case 35669:case 35673:return K0;case 5125:return j0;case 36294:return W0;case 36295:return O0;case 36296:return J0;case 35678:case 36198:case 36298:case 36306:case 35682:return Z0;case 35679:case 36299:case 36307:return X0;case 35680:case 36300:case 36308:case 36293:return q0;case 36289:case 36303:case 36311:case 36292:return $0}}function th(s,e){s.uniform1fv(this.addr,e)}function nh(s,e){const t=Vn(e,this.size,2);s.uniform2fv(this.addr,t)}function ih(s,e){const t=Vn(e,this.size,3);s.uniform3fv(this.addr,t)}function rh(s,e){const t=Vn(e,this.size,4);s.uniform4fv(this.addr,t)}function sh(s,e){const t=Vn(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function oh(s,e){const t=Vn(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function Ah(s,e){const t=Vn(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function ah(s,e){s.uniform1iv(this.addr,e)}function ch(s,e){s.uniform2iv(this.addr,e)}function lh(s,e){s.uniform3iv(this.addr,e)}function hh(s,e){s.uniform4iv(this.addr,e)}function uh(s,e){s.uniform1uiv(this.addr,e)}function dh(s,e){s.uniform2uiv(this.addr,e)}function fh(s,e){s.uniform3uiv(this.addr,e)}function ph(s,e){s.uniform4uiv(this.addr,e)}function gh(s,e,t){const n=e.length,i=_r(t,n);s.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)t.setTexture2D(e[r]||bA,i[r])}function mh(s,e,t){const n=e.length,i=_r(t,n);s.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)t.setTexture3D(e[r]||TA,i[r])}function wh(s,e,t){const n=e.length,i=_r(t,n);s.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)t.setTextureCube(e[r]||SA,i[r])}function Bh(s,e,t){const n=e.length,i=_r(t,n);s.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)t.setTexture2DArray(e[r]||FA,i[r])}function Mh(s){switch(s){case 5126:return th;case 35664:return nh;case 35665:return ih;case 35666:return rh;case 35674:return sh;case 35675:return oh;case 35676:return Ah;case 5124:case 35670:return ah;case 35667:case 35671:return ch;case 35668:case 35672:return lh;case 35669:case 35673:return hh;case 5125:return uh;case 36294:return dh;case 36295:return fh;case 36296:return ph;case 35678:case 36198:case 36298:case 36306:case 35682:return gh;case 35679:case 36299:case 36307:return mh;case 35680:case 36300:case 36308:case 36293:return wh;case 36289:case 36303:case 36311:case 36292:return Bh}}function Eh(s,e,t){this.id=s,this.addr=t,this.cache=[],this.setValue=eh(e.type)}function DA(s,e,t){this.id=s,this.addr=t,this.cache=[],this.size=e.size,this.setValue=Mh(e.type)}DA.prototype.updateCache=function(s){const e=this.cache;s instanceof Float32Array&&e.length!==s.length&&(this.cache=new Float32Array(s.length)),_t(e,s)};function UA(s){this.id=s,this.seq=[],this.map={}}UA.prototype.setValue=function(s,e,t){const n=this.seq;for(let i=0,r=n.length;i!==r;++i){const o=n[i];o.setValue(s,e[o.id],t)}};const B1=/(\w+)(\])?(\[|\.)?/g;function yo(s,e){s.seq.push(e),s.map[e.id]=e}function yh(s,e,t){const n=s.name,i=n.length;for(B1.lastIndex=0;;){const r=B1.exec(n),o=B1.lastIndex;let A=r[1];const a=r[2]==="]",c=r[3];if(a&&(A=A|0),c===void 0||c==="["&&o+2===i){yo(t,c===void 0?new Eh(A,s,e):new DA(A,s,e));break}else{let h=t.map[A];h===void 0&&(h=new UA(A),yo(t,h)),t=h}}}function T2(s,e){this.seq=[],this.map={};const t=s.getProgramParameter(e,35718);for(let n=0;n<t;++n){const i=s.getActiveUniform(e,n),r=s.getUniformLocation(e,i.name);yh(i,r,this)}}T2.prototype.setValue=function(s,e,t,n){const i=this.map[e];i!==void 0&&i.setValue(s,t,n)};T2.prototype.setOptional=function(s,e,t){const n=e[t];n!==void 0&&this.setValue(s,t,n)};T2.upload=function(s,e,t,n){for(let i=0,r=e.length;i!==r;++i){const o=e[i],A=t[o.id];A.needsUpdate!==!1&&o.setValue(s,A.value,n)}};T2.seqWithValue=function(s,e){const t=[];for(let n=0,i=s.length;n!==i;++n){const r=s[n];r.id in e&&t.push(r)}return t};function xo(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}let xh=0;function Ch(s,e){const t=s.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let o=i;o<r;o++)n.push(o+1+": "+t[o]);return n.join(`
`)}function vh(s){switch(s){case B2:return["Linear","( value )"];case Ve:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",s),["Linear","( value )"]}}function Co(s,e,t){const n=s.getShaderParameter(e,35713),i=s.getShaderInfoLog(e).trim();if(n&&i==="")return"";const r=parseInt(/ERROR: 0:(\d+)/.exec(i)[1]);return t.toUpperCase()+`

`+i+`

`+Ch(s.getShaderSource(e),r)}function Qh(s,e){const t=vh(e);return"vec4 "+s+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function _h(s,e){let t;switch(e){case mA:t="Linear";break;case Za:t="Reinhard";break;case Xa:t="OptimizedCineon";break;case qa:t="ACESFilmic";break;case $a:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function Ih(s){return[s.extensionDerivatives||!!s.envMapCubeUVHeight||s.bumpMap||s.tangentSpaceNormalMap||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ai).join(`
`)}function bh(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function Fh(s,e){const t={},n=s.getProgramParameter(e,35721);for(let i=0;i<n;i++){const r=s.getActiveAttrib(e,i),o=r.name;let A=1;r.type===35674&&(A=2),r.type===35675&&(A=3),r.type===35676&&(A=4),t[o]={type:r.type,location:s.getAttribLocation(e,o),locationSize:A}}return t}function ai(s){return s!==""}function vo(s,e){return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Qo(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Th=/^[ \t]*#include +<([\w\d./]+)>/gm;function Y1(s){return s.replace(Th,Sh)}function Sh(s,e){const t=Ge[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Y1(t)}const Dh=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Uh=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function _o(s){return s.replace(Uh,GA).replace(Dh,Gh)}function Gh(s,e,t,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),GA(s,e,t,n)}function GA(s,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function Io(s){let e="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Rh(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===dA?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===Ia?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Ai&&(e="SHADOWMAP_TYPE_VSM"),e}function Nh(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Dn:case Un:e="ENVMAP_TYPE_CUBE";break;case yr:e="ENVMAP_TYPE_CUBE_UV";break}return e}function zh(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case Un:e="ENVMAP_MODE_REFRACTION";break}return e}function Lh(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case Er:e="ENVMAP_BLENDING_MULTIPLY";break;case Oa:e="ENVMAP_BLENDING_MIX";break;case Ja:e="ENVMAP_BLENDING_ADD";break}return e}function Ph(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e/32+1)+3,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function kh(s,e,t,n){const i=s.getContext(),r=t.defines;let o=t.vertexShader,A=t.fragmentShader;const a=Rh(t),c=Nh(t),l=zh(t),h=Lh(t),u=Ph(t),f=t.isWebGL2?"":Ih(t),g=bh(r),p=i.createProgram();let d,m,v=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(d=[g].filter(ai).join(`
`),d.length>0&&(d+=`
`),m=[f,g].filter(ai).join(`
`),m.length>0&&(m+=`
`)):(d=[Io(t),"#define SHADER_NAME "+t.shaderName,g,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+t.maxBones,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+l:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.useVertexTexture?"#define BONE_TEXTURE":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+a:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ai).join(`
`),m=[f,Io(t),"#define SHADER_NAME "+t.shaderName,g,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+l:"",t.envMap?"#define "+h:"",u?"#define CUBEUV_TEXEL_WIDTH "+u.texelWidth:"",u?"#define CUBEUV_TEXEL_HEIGHT "+u.texelHeight:"",u?"#define CUBEUV_MAX_MIP "+u.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+a:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Xt?"#define TONE_MAPPING":"",t.toneMapping!==Xt?Ge.tonemapping_pars_fragment:"",t.toneMapping!==Xt?_h("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Ge.encodings_pars_fragment,Qh("linearToOutputTexel",t.outputEncoding),t.depthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(ai).join(`
`)),o=Y1(o),o=vo(o,t),o=Qo(o,t),A=Y1(A),A=vo(A,t),A=Qo(A,t),o=_o(o),A=_o(A),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(v=`#version 300 es
`,d=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+d,m=["#define varying in",t.glslVersion===Zs?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Zs?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+m);const y=v+d+o,Q=v+m+A,M=xo(i,35633,y),I=xo(i,35632,Q);if(i.attachShader(p,M),i.attachShader(p,I),t.index0AttributeName!==void 0?i.bindAttribLocation(p,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(p,0,"position"),i.linkProgram(p),s.debug.checkShaderErrors){const X=i.getProgramInfoLog(p).trim(),z=i.getShaderInfoLog(M).trim(),B=i.getShaderInfoLog(I).trim();let F=!0,J=!0;if(i.getProgramParameter(p,35714)===!1){F=!1;const D=Co(i,M,"vertex"),P=Co(i,I,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(p,35715)+`

Program Info Log: `+X+`
`+D+`
`+P)}else X!==""?console.warn("THREE.WebGLProgram: Program Info Log:",X):(z===""||B==="")&&(J=!1);J&&(this.diagnostics={runnable:F,programLog:X,vertexShader:{log:z,prefix:d},fragmentShader:{log:B,prefix:m}})}i.deleteShader(M),i.deleteShader(I);let T;this.getUniforms=function(){return T===void 0&&(T=new T2(i,p)),T};let U;return this.getAttributes=function(){return U===void 0&&(U=Fh(i,p)),U},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(p),this.program=void 0},this.name=t.shaderName,this.id=xh++,this.cacheKey=e,this.usedTimes=1,this.program=p,this.vertexShader=M,this.fragmentShader=I,this}let Yh=0;class Hh{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return t.has(e)===!1&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(t.has(e)===!1){const n=new Vh(e);t.set(e,n)}return t.get(e)}}class Vh{constructor(e){this.id=Yh++,this.code=e,this.usedTimes=0}}function Kh(s,e,t,n,i,r,o){const A=new CA,a=new Hh,c=[],l=i.isWebGL2,h=i.logarithmicDepthBuffer,u=i.floatVertexTextures,f=i.maxVertexUniforms,g=i.vertexTextures;let p=i.precision;const d={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function m(B){const J=B.skeleton.bones;if(u)return 1024;{const P=Math.floor((f-20)/4),N=Math.min(P,J.length);return N<J.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+J.length+" bones. This GPU supports "+N+"."),0):N}}function v(B,F,J,D,P){const N=D.fog,k=P.geometry,S=B.isMeshStandardMaterial?D.environment:null,W=(B.isMeshStandardMaterial?t:e).get(B.envMap||S),$=!!W&&W.mapping===yr?W.image.height:null,ee=d[B.type],te=P.isSkinnedMesh?m(P):0;B.precision!==null&&(p=i.getMaxPrecision(B.precision),p!==B.precision&&console.warn("THREE.WebGLProgram.getParameters:",B.precision,"not supported, using",p,"instead."));const he=k.morphAttributes.position||k.morphAttributes.normal||k.morphAttributes.color,Re=he!==void 0?he.length:0;let Ce=0;k.morphAttributes.position!==void 0&&(Ce=1),k.morphAttributes.normal!==void 0&&(Ce=2),k.morphAttributes.color!==void 0&&(Ce=3);let j,ke,Ie,be;if(ee){const ne=o2[ee];j=ne.vertexShader,ke=ne.fragmentShader}else j=B.vertexShader,ke=B.fragmentShader,a.update(B),Ie=a.getVertexShaderID(B),be=a.getFragmentShaderID(B);const re=s.getRenderTarget(),Ue=B.alphaTest>0,K=B.clearcoat>0;return{isWebGL2:l,shaderID:ee,shaderName:B.type,vertexShader:j,fragmentShader:ke,defines:B.defines,customVertexShaderID:Ie,customFragmentShaderID:be,isRawShaderMaterial:B.isRawShaderMaterial===!0,glslVersion:B.glslVersion,precision:p,instancing:P.isInstancedMesh===!0,instancingColor:P.isInstancedMesh===!0&&P.instanceColor!==null,supportsVertexTextures:g,outputEncoding:re===null?s.outputEncoding:re.isXRRenderTarget===!0?re.texture.encoding:B2,map:!!B.map,matcap:!!B.matcap,envMap:!!W,envMapMode:W&&W.mapping,envMapCubeUVHeight:$,lightMap:!!B.lightMap,aoMap:!!B.aoMap,emissiveMap:!!B.emissiveMap,bumpMap:!!B.bumpMap,normalMap:!!B.normalMap,objectSpaceNormalMap:B.normalMapType===E3,tangentSpaceNormalMap:B.normalMapType===kn,decodeVideoTexture:!!B.map&&B.map.isVideoTexture===!0&&B.map.encoding===Ve,clearcoat:K,clearcoatMap:K&&!!B.clearcoatMap,clearcoatRoughnessMap:K&&!!B.clearcoatRoughnessMap,clearcoatNormalMap:K&&!!B.clearcoatNormalMap,displacementMap:!!B.displacementMap,roughnessMap:!!B.roughnessMap,metalnessMap:!!B.metalnessMap,specularMap:!!B.specularMap,specularIntensityMap:!!B.specularIntensityMap,specularColorMap:!!B.specularColorMap,opaque:B.transparent===!1&&B.blending===bn,alphaMap:!!B.alphaMap,alphaTest:Ue,gradientMap:!!B.gradientMap,sheen:B.sheen>0,sheenColorMap:!!B.sheenColorMap,sheenRoughnessMap:!!B.sheenRoughnessMap,transmission:B.transmission>0,transmissionMap:!!B.transmissionMap,thicknessMap:!!B.thicknessMap,combine:B.combine,vertexTangents:!!B.normalMap&&!!k.attributes.tangent,vertexColors:B.vertexColors,vertexAlphas:B.vertexColors===!0&&!!k.attributes.color&&k.attributes.color.itemSize===4,vertexUvs:!!B.map||!!B.bumpMap||!!B.normalMap||!!B.specularMap||!!B.alphaMap||!!B.emissiveMap||!!B.roughnessMap||!!B.metalnessMap||!!B.clearcoatMap||!!B.clearcoatRoughnessMap||!!B.clearcoatNormalMap||!!B.displacementMap||!!B.transmissionMap||!!B.thicknessMap||!!B.specularIntensityMap||!!B.specularColorMap||!!B.sheenColorMap||!!B.sheenRoughnessMap,uvsVertexOnly:!(!!B.map||!!B.bumpMap||!!B.normalMap||!!B.specularMap||!!B.alphaMap||!!B.emissiveMap||!!B.roughnessMap||!!B.metalnessMap||!!B.clearcoatNormalMap||B.transmission>0||!!B.transmissionMap||!!B.thicknessMap||!!B.specularIntensityMap||!!B.specularColorMap||B.sheen>0||!!B.sheenColorMap||!!B.sheenRoughnessMap)&&!!B.displacementMap,fog:!!N,useFog:B.fog,fogExp2:N&&N.isFogExp2,flatShading:!!B.flatShading,sizeAttenuation:B.sizeAttenuation,logarithmicDepthBuffer:h,skinning:P.isSkinnedMesh===!0&&te>0,maxBones:te,useVertexTexture:u,morphTargets:k.morphAttributes.position!==void 0,morphNormals:k.morphAttributes.normal!==void 0,morphColors:k.morphAttributes.color!==void 0,morphTargetsCount:Re,morphTextureStride:Ce,numDirLights:F.directional.length,numPointLights:F.point.length,numSpotLights:F.spot.length,numRectAreaLights:F.rectArea.length,numHemiLights:F.hemi.length,numDirLightShadows:F.directionalShadowMap.length,numPointLightShadows:F.pointShadowMap.length,numSpotLightShadows:F.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:B.dithering,shadowMapEnabled:s.shadowMap.enabled&&J.length>0,shadowMapType:s.shadowMap.type,toneMapping:B.toneMapped?s.toneMapping:Xt,physicallyCorrectLights:s.physicallyCorrectLights,premultipliedAlpha:B.premultipliedAlpha,doubleSided:B.side===At,flipSided:B.side===Zt,depthPacking:B.depthPacking!==void 0?B.depthPacking:!1,index0AttributeName:B.index0AttributeName,extensionDerivatives:B.extensions&&B.extensions.derivatives,extensionFragDepth:B.extensions&&B.extensions.fragDepth,extensionDrawBuffers:B.extensions&&B.extensions.drawBuffers,extensionShaderTextureLOD:B.extensions&&B.extensions.shaderTextureLOD,rendererExtensionFragDepth:l||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:l||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:l||n.has("EXT_shader_texture_lod"),customProgramCacheKey:B.customProgramCacheKey()}}function y(B){const F=[];if(B.shaderID?F.push(B.shaderID):(F.push(B.customVertexShaderID),F.push(B.customFragmentShaderID)),B.defines!==void 0)for(const J in B.defines)F.push(J),F.push(B.defines[J]);return B.isRawShaderMaterial===!1&&(Q(F,B),M(F,B),F.push(s.outputEncoding)),F.push(B.customProgramCacheKey),F.join()}function Q(B,F){B.push(F.precision),B.push(F.outputEncoding),B.push(F.envMapMode),B.push(F.envMapCubeUVHeight),B.push(F.combine),B.push(F.vertexUvs),B.push(F.fogExp2),B.push(F.sizeAttenuation),B.push(F.maxBones),B.push(F.morphTargetsCount),B.push(F.morphAttributeCount),B.push(F.numDirLights),B.push(F.numPointLights),B.push(F.numSpotLights),B.push(F.numHemiLights),B.push(F.numRectAreaLights),B.push(F.numDirLightShadows),B.push(F.numPointLightShadows),B.push(F.numSpotLightShadows),B.push(F.shadowMapType),B.push(F.toneMapping),B.push(F.numClippingPlanes),B.push(F.numClipIntersection)}function M(B,F){A.disableAll(),F.isWebGL2&&A.enable(0),F.supportsVertexTextures&&A.enable(1),F.instancing&&A.enable(2),F.instancingColor&&A.enable(3),F.map&&A.enable(4),F.matcap&&A.enable(5),F.envMap&&A.enable(6),F.lightMap&&A.enable(7),F.aoMap&&A.enable(8),F.emissiveMap&&A.enable(9),F.bumpMap&&A.enable(10),F.normalMap&&A.enable(11),F.objectSpaceNormalMap&&A.enable(12),F.tangentSpaceNormalMap&&A.enable(13),F.clearcoat&&A.enable(14),F.clearcoatMap&&A.enable(15),F.clearcoatRoughnessMap&&A.enable(16),F.clearcoatNormalMap&&A.enable(17),F.displacementMap&&A.enable(18),F.specularMap&&A.enable(19),F.roughnessMap&&A.enable(20),F.metalnessMap&&A.enable(21),F.gradientMap&&A.enable(22),F.alphaMap&&A.enable(23),F.alphaTest&&A.enable(24),F.vertexColors&&A.enable(25),F.vertexAlphas&&A.enable(26),F.vertexUvs&&A.enable(27),F.vertexTangents&&A.enable(28),F.uvsVertexOnly&&A.enable(29),F.fog&&A.enable(30),B.push(A.mask),A.disableAll(),F.useFog&&A.enable(0),F.flatShading&&A.enable(1),F.logarithmicDepthBuffer&&A.enable(2),F.skinning&&A.enable(3),F.useVertexTexture&&A.enable(4),F.morphTargets&&A.enable(5),F.morphNormals&&A.enable(6),F.morphColors&&A.enable(7),F.premultipliedAlpha&&A.enable(8),F.shadowMapEnabled&&A.enable(9),F.physicallyCorrectLights&&A.enable(10),F.doubleSided&&A.enable(11),F.flipSided&&A.enable(12),F.depthPacking&&A.enable(13),F.dithering&&A.enable(14),F.specularIntensityMap&&A.enable(15),F.specularColorMap&&A.enable(16),F.transmission&&A.enable(17),F.transmissionMap&&A.enable(18),F.thicknessMap&&A.enable(19),F.sheen&&A.enable(20),F.sheenColorMap&&A.enable(21),F.sheenRoughnessMap&&A.enable(22),F.decodeVideoTexture&&A.enable(23),F.opaque&&A.enable(24),B.push(A.mask)}function I(B){const F=d[B.type];let J;if(F){const D=o2[F];J=L3.clone(D.uniforms)}else J=B.uniforms;return J}function T(B,F){let J;for(let D=0,P=c.length;D<P;D++){const N=c[D];if(N.cacheKey===F){J=N,++J.usedTimes;break}}return J===void 0&&(J=new kh(s,F,B,r),c.push(J)),J}function U(B){if(--B.usedTimes===0){const F=c.indexOf(B);c[F]=c[c.length-1],c.pop(),B.destroy()}}function X(B){a.remove(B)}function z(){a.dispose()}return{getParameters:v,getProgramCacheKey:y,getUniforms:I,acquireProgram:T,releaseProgram:U,releaseShaderCache:X,programs:c,dispose:z}}function jh(){let s=new WeakMap;function e(r){let o=s.get(r);return o===void 0&&(o={},s.set(r,o)),o}function t(r){s.delete(r)}function n(r,o,A){s.get(r)[o]=A}function i(){s=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function Wh(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function bo(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function Fo(){const s=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function o(h,u,f,g,p,d){let m=s[e];return m===void 0?(m={id:h.id,object:h,geometry:u,material:f,groupOrder:g,renderOrder:h.renderOrder,z:p,group:d},s[e]=m):(m.id=h.id,m.object=h,m.geometry=u,m.material=f,m.groupOrder=g,m.renderOrder=h.renderOrder,m.z=p,m.group=d),e++,m}function A(h,u,f,g,p,d){const m=o(h,u,f,g,p,d);f.transmission>0?n.push(m):f.transparent===!0?i.push(m):t.push(m)}function a(h,u,f,g,p,d){const m=o(h,u,f,g,p,d);f.transmission>0?n.unshift(m):f.transparent===!0?i.unshift(m):t.unshift(m)}function c(h,u){t.length>1&&t.sort(h||Wh),n.length>1&&n.sort(u||bo),i.length>1&&i.sort(u||bo)}function l(){for(let h=e,u=s.length;h<u;h++){const f=s[h];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:A,unshift:a,finish:l,sort:c}}function Oh(){let s=new WeakMap;function e(n,i){let r;return s.has(n)===!1?(r=new Fo,s.set(n,[r])):i>=s.get(n).length?(r=new Fo,s.get(n).push(r)):r=s.get(n)[i],r}function t(){s=new WeakMap}return{get:e,dispose:t}}function Jh(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new w,color:new ie};break;case"SpotLight":t={position:new w,direction:new w,color:new ie,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new w,color:new ie,distance:0,decay:0};break;case"HemisphereLight":t={direction:new w,skyColor:new ie,groundColor:new ie};break;case"RectAreaLight":t={color:new ie,position:new w,halfWidth:new w,halfHeight:new w};break}return s[e.id]=t,t}}}function Zh(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new V};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new V};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new V,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let Xh=0;function qh(s,e){return(e.castShadow?1:0)-(s.castShadow?1:0)}function $h(s,e){const t=new Jh,n=Zh(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let l=0;l<9;l++)i.probe.push(new w);const r=new w,o=new we,A=new we;function a(l,h){let u=0,f=0,g=0;for(let X=0;X<9;X++)i.probe[X].set(0,0,0);let p=0,d=0,m=0,v=0,y=0,Q=0,M=0,I=0;l.sort(qh);const T=h!==!0?Math.PI:1;for(let X=0,z=l.length;X<z;X++){const B=l[X],F=B.color,J=B.intensity,D=B.distance,P=B.shadow&&B.shadow.map?B.shadow.map.texture:null;if(B.isAmbientLight)u+=F.r*J*T,f+=F.g*J*T,g+=F.b*J*T;else if(B.isLightProbe)for(let N=0;N<9;N++)i.probe[N].addScaledVector(B.sh.coefficients[N],J);else if(B.isDirectionalLight){const N=t.get(B);if(N.color.copy(B.color).multiplyScalar(B.intensity*T),B.castShadow){const k=B.shadow,S=n.get(B);S.shadowBias=k.bias,S.shadowNormalBias=k.normalBias,S.shadowRadius=k.radius,S.shadowMapSize=k.mapSize,i.directionalShadow[p]=S,i.directionalShadowMap[p]=P,i.directionalShadowMatrix[p]=B.shadow.matrix,Q++}i.directional[p]=N,p++}else if(B.isSpotLight){const N=t.get(B);if(N.position.setFromMatrixPosition(B.matrixWorld),N.color.copy(F).multiplyScalar(J*T),N.distance=D,N.coneCos=Math.cos(B.angle),N.penumbraCos=Math.cos(B.angle*(1-B.penumbra)),N.decay=B.decay,B.castShadow){const k=B.shadow,S=n.get(B);S.shadowBias=k.bias,S.shadowNormalBias=k.normalBias,S.shadowRadius=k.radius,S.shadowMapSize=k.mapSize,i.spotShadow[m]=S,i.spotShadowMap[m]=P,i.spotShadowMatrix[m]=B.shadow.matrix,I++}i.spot[m]=N,m++}else if(B.isRectAreaLight){const N=t.get(B);N.color.copy(F).multiplyScalar(J),N.halfWidth.set(B.width*.5,0,0),N.halfHeight.set(0,B.height*.5,0),i.rectArea[v]=N,v++}else if(B.isPointLight){const N=t.get(B);if(N.color.copy(B.color).multiplyScalar(B.intensity*T),N.distance=B.distance,N.decay=B.decay,B.castShadow){const k=B.shadow,S=n.get(B);S.shadowBias=k.bias,S.shadowNormalBias=k.normalBias,S.shadowRadius=k.radius,S.shadowMapSize=k.mapSize,S.shadowCameraNear=k.camera.near,S.shadowCameraFar=k.camera.far,i.pointShadow[d]=S,i.pointShadowMap[d]=P,i.pointShadowMatrix[d]=B.shadow.matrix,M++}i.point[d]=N,d++}else if(B.isHemisphereLight){const N=t.get(B);N.skyColor.copy(B.color).multiplyScalar(J*T),N.groundColor.copy(B.groundColor).multiplyScalar(J*T),i.hemi[y]=N,y++}}v>0&&(e.isWebGL2||s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Ae.LTC_FLOAT_1,i.rectAreaLTC2=Ae.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Ae.LTC_HALF_1,i.rectAreaLTC2=Ae.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=u,i.ambient[1]=f,i.ambient[2]=g;const U=i.hash;(U.directionalLength!==p||U.pointLength!==d||U.spotLength!==m||U.rectAreaLength!==v||U.hemiLength!==y||U.numDirectionalShadows!==Q||U.numPointShadows!==M||U.numSpotShadows!==I)&&(i.directional.length=p,i.spot.length=m,i.rectArea.length=v,i.point.length=d,i.hemi.length=y,i.directionalShadow.length=Q,i.directionalShadowMap.length=Q,i.pointShadow.length=M,i.pointShadowMap.length=M,i.spotShadow.length=I,i.spotShadowMap.length=I,i.directionalShadowMatrix.length=Q,i.pointShadowMatrix.length=M,i.spotShadowMatrix.length=I,U.directionalLength=p,U.pointLength=d,U.spotLength=m,U.rectAreaLength=v,U.hemiLength=y,U.numDirectionalShadows=Q,U.numPointShadows=M,U.numSpotShadows=I,i.version=Xh++)}function c(l,h){let u=0,f=0,g=0,p=0,d=0;const m=h.matrixWorldInverse;for(let v=0,y=l.length;v<y;v++){const Q=l[v];if(Q.isDirectionalLight){const M=i.directional[u];M.direction.setFromMatrixPosition(Q.matrixWorld),r.setFromMatrixPosition(Q.target.matrixWorld),M.direction.sub(r),M.direction.transformDirection(m),u++}else if(Q.isSpotLight){const M=i.spot[g];M.position.setFromMatrixPosition(Q.matrixWorld),M.position.applyMatrix4(m),M.direction.setFromMatrixPosition(Q.matrixWorld),r.setFromMatrixPosition(Q.target.matrixWorld),M.direction.sub(r),M.direction.transformDirection(m),g++}else if(Q.isRectAreaLight){const M=i.rectArea[p];M.position.setFromMatrixPosition(Q.matrixWorld),M.position.applyMatrix4(m),A.identity(),o.copy(Q.matrixWorld),o.premultiply(m),A.extractRotation(o),M.halfWidth.set(Q.width*.5,0,0),M.halfHeight.set(0,Q.height*.5,0),M.halfWidth.applyMatrix4(A),M.halfHeight.applyMatrix4(A),p++}else if(Q.isPointLight){const M=i.point[f];M.position.setFromMatrixPosition(Q.matrixWorld),M.position.applyMatrix4(m),f++}else if(Q.isHemisphereLight){const M=i.hemi[d];M.direction.setFromMatrixPosition(Q.matrixWorld),M.direction.transformDirection(m),M.direction.normalize(),d++}}}return{setup:a,setupView:c,state:i}}function To(s,e){const t=new $h(s,e),n=[],i=[];function r(){n.length=0,i.length=0}function o(h){n.push(h)}function A(h){i.push(h)}function a(h){t.setup(n,h)}function c(h){t.setupView(n,h)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:a,setupLightsView:c,pushLight:o,pushShadow:A}}function eu(s,e){let t=new WeakMap;function n(r,o=0){let A;return t.has(r)===!1?(A=new To(s,e),t.set(r,[A])):o>=t.get(r).length?(A=new To(s,e),t.get(r).push(A)):A=t.get(r)[o],A}function i(){t=new WeakMap}return{get:n,dispose:i}}class ts extends dt{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=B3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}ts.prototype.isMeshDepthMaterial=!0;class ns extends dt{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new w,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}ns.prototype.isMeshDistanceMaterial=!0;const tu=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,nu=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function RA(s,e,t){let n=new Qr;const i=new V,r=new V,o=new Je,A=new ts({depthPacking:M3}),a=new ns,c={},l=t.maxTextureSize,h={0:Zt,1:di,2:At},u=new Ze({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new V},radius:{value:4}},vertexShader:tu,fragmentShader:nu}),f=u.clone();f.defines.HORIZONTAL_PASS=1;const g=new Xe;g.setAttribute("position",new ot(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const p=new ge(g,u),d=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=dA,this.render=function(Q,M,I){if(d.enabled===!1||d.autoUpdate===!1&&d.needsUpdate===!1||Q.length===0)return;const T=s.getRenderTarget(),U=s.getActiveCubeFace(),X=s.getActiveMipmapLevel(),z=s.state;z.setBlending(F2),z.buffers.color.setClear(1,1,1,1),z.buffers.depth.setTest(!0),z.setScissorTest(!1);for(let B=0,F=Q.length;B<F;B++){const J=Q[B],D=J.shadow;if(D===void 0){console.warn("THREE.WebGLShadowMap:",J,"has no shadow.");continue}if(D.autoUpdate===!1&&D.needsUpdate===!1)continue;i.copy(D.mapSize);const P=D.getFrameExtents();if(i.multiply(P),r.copy(D.mapSize),(i.x>l||i.y>l)&&(i.x>l&&(r.x=Math.floor(l/P.x),i.x=r.x*P.x,D.mapSize.x=r.x),i.y>l&&(r.y=Math.floor(l/P.y),i.y=r.y*P.y,D.mapSize.y=r.y)),D.map===null&&!D.isPointLightShadow&&this.type===Ai&&(D.map=new je(i.x,i.y),D.map.texture.name=J.name+".shadowMap",D.mapPass=new je(i.x,i.y),D.camera.updateProjectionMatrix()),D.map===null){const k={minFilter:gt,magFilter:gt,format:Jt};D.map=new je(i.x,i.y,k),D.map.texture.name=J.name+".shadowMap",D.camera.updateProjectionMatrix()}s.setRenderTarget(D.map),s.clear();const N=D.getViewportCount();for(let k=0;k<N;k++){const S=D.getViewport(k);o.set(r.x*S.x,r.y*S.y,r.x*S.z,r.y*S.w),z.viewport(o),D.updateMatrices(J,k),n=D.getFrustum(),y(M,I,D.camera,J,this.type)}!D.isPointLightShadow&&this.type===Ai&&m(D,I),D.needsUpdate=!1}d.needsUpdate=!1,s.setRenderTarget(T,U,X)};function m(Q,M){const I=e.update(p);u.defines.VSM_SAMPLES!==Q.blurSamples&&(u.defines.VSM_SAMPLES=Q.blurSamples,f.defines.VSM_SAMPLES=Q.blurSamples,u.needsUpdate=!0,f.needsUpdate=!0),u.uniforms.shadow_pass.value=Q.map.texture,u.uniforms.resolution.value=Q.mapSize,u.uniforms.radius.value=Q.radius,s.setRenderTarget(Q.mapPass),s.clear(),s.renderBufferDirect(M,null,I,u,p,null),f.uniforms.shadow_pass.value=Q.mapPass.texture,f.uniforms.resolution.value=Q.mapSize,f.uniforms.radius.value=Q.radius,s.setRenderTarget(Q.map),s.clear(),s.renderBufferDirect(M,null,I,f,p,null)}function v(Q,M,I,T,U,X){let z=null;const B=I.isPointLight===!0?Q.customDistanceMaterial:Q.customDepthMaterial;if(B!==void 0?z=B:z=I.isPointLight===!0?a:A,s.localClippingEnabled&&M.clipShadows===!0&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0){const F=z.uuid,J=M.uuid;let D=c[F];D===void 0&&(D={},c[F]=D);let P=D[J];P===void 0&&(P=z.clone(),D[J]=P),z=P}return z.visible=M.visible,z.wireframe=M.wireframe,X===Ai?z.side=M.shadowSide!==null?M.shadowSide:M.side:z.side=M.shadowSide!==null?M.shadowSide:h[M.side],z.alphaMap=M.alphaMap,z.alphaTest=M.alphaTest,z.clipShadows=M.clipShadows,z.clippingPlanes=M.clippingPlanes,z.clipIntersection=M.clipIntersection,z.displacementMap=M.displacementMap,z.displacementScale=M.displacementScale,z.displacementBias=M.displacementBias,z.wireframeLinewidth=M.wireframeLinewidth,z.linewidth=M.linewidth,I.isPointLight===!0&&z.isMeshDistanceMaterial===!0&&(z.referencePosition.setFromMatrixPosition(I.matrixWorld),z.nearDistance=T,z.farDistance=U),z}function y(Q,M,I,T,U){if(Q.visible===!1)return;if(Q.layers.test(M.layers)&&(Q.isMesh||Q.isLine||Q.isPoints)&&(Q.castShadow||Q.receiveShadow&&U===Ai)&&(!Q.frustumCulled||n.intersectsObject(Q))){Q.modelViewMatrix.multiplyMatrices(I.matrixWorldInverse,Q.matrixWorld);const B=e.update(Q),F=Q.material;if(Array.isArray(F)){const J=B.groups;for(let D=0,P=J.length;D<P;D++){const N=J[D],k=F[N.materialIndex];if(k&&k.visible){const S=v(Q,k,T,I.near,I.far,U);s.renderBufferDirect(I,null,B,S,Q,N)}}}else if(F.visible){const J=v(Q,F,T,I.near,I.far,U);s.renderBufferDirect(I,null,B,J,Q,null)}}const z=Q.children;for(let B=0,F=z.length;B<F;B++)y(z[B],M,I,T,U)}}function iu(s,e,t){const n=t.isWebGL2;function i(){let b=!1;const ae=new Je;let oe=null;const Ee=new Je(0,0,0,0);return{setMask:function(de){oe!==de&&!b&&(s.colorMask(de,de,de,de),oe=de)},setLocked:function(de){b=de},setClear:function(de,ye,se,ve,et){et===!0&&(de*=ve,ye*=ve,se*=ve),ae.set(de,ye,se,ve),Ee.equals(ae)===!1&&(s.clearColor(de,ye,se,ve),Ee.copy(ae))},reset:function(){b=!1,oe=null,Ee.set(-1,0,0,0)}}}function r(){let b=!1,ae=null,oe=null,Ee=null;return{setTest:function(de){de?Ce(2929):j(2929)},setMask:function(de){ae!==de&&!b&&(s.depthMask(de),ae=de)},setFunc:function(de){if(oe!==de){if(de)switch(de){case ka:s.depthFunc(512);break;case Ya:s.depthFunc(519);break;case Ha:s.depthFunc(513);break;case R1:s.depthFunc(515);break;case Va:s.depthFunc(514);break;case Ka:s.depthFunc(518);break;case ja:s.depthFunc(516);break;case Wa:s.depthFunc(517);break;default:s.depthFunc(515)}else s.depthFunc(515);oe=de}},setLocked:function(de){b=de},setClear:function(de){Ee!==de&&(s.clearDepth(de),Ee=de)},reset:function(){b=!1,ae=null,oe=null,Ee=null}}}function o(){let b=!1,ae=null,oe=null,Ee=null,de=null,ye=null,se=null,ve=null,et=null;return{setTest:function(ze){b||(ze?Ce(2960):j(2960))},setMask:function(ze){ae!==ze&&!b&&(s.stencilMask(ze),ae=ze)},setFunc:function(ze,$t,e2){(oe!==ze||Ee!==$t||de!==e2)&&(s.stencilFunc(ze,$t,e2),oe=ze,Ee=$t,de=e2)},setOp:function(ze,$t,e2){(ye!==ze||se!==$t||ve!==e2)&&(s.stencilOp(ze,$t,e2),ye=ze,se=$t,ve=e2)},setLocked:function(ze){b=ze},setClear:function(ze){et!==ze&&(s.clearStencil(ze),et=ze)},reset:function(){b=!1,ae=null,oe=null,Ee=null,de=null,ye=null,se=null,ve=null,et=null}}}const A=new i,a=new r,c=new o;let l={},h={},u=new WeakMap,f=[],g=null,p=!1,d=null,m=null,v=null,y=null,Q=null,M=null,I=null,T=!1,U=null,X=null,z=null,B=null,F=null;const J=s.getParameter(35661);let D=!1,P=0;const N=s.getParameter(7938);N.indexOf("WebGL")!==-1?(P=parseFloat(/^WebGL (\d)/.exec(N)[1]),D=P>=1):N.indexOf("OpenGL ES")!==-1&&(P=parseFloat(/^OpenGL ES (\d)/.exec(N)[1]),D=P>=2);let k=null,S={};const W=s.getParameter(3088),$=s.getParameter(2978),ee=new Je().fromArray(W),te=new Je().fromArray($);function he(b,ae,oe){const Ee=new Uint8Array(4),de=s.createTexture();s.bindTexture(b,de),s.texParameteri(b,10241,9728),s.texParameteri(b,10240,9728);for(let ye=0;ye<oe;ye++)s.texImage2D(ae+ye,0,6408,1,1,0,6408,5121,Ee);return de}const Re={};Re[3553]=he(3553,3553,1),Re[34067]=he(34067,34069,6),A.setClear(0,0,0,1),a.setClear(1),c.setClear(0),Ce(2929),a.setFunc(R1),ne(!1),fe(Es),Ce(2884),K(F2);function Ce(b){l[b]!==!0&&(s.enable(b),l[b]=!0)}function j(b){l[b]!==!1&&(s.disable(b),l[b]=!1)}function ke(b,ae){return h[b]!==ae?(s.bindFramebuffer(b,ae),h[b]=ae,n&&(b===36009&&(h[36160]=ae),b===36160&&(h[36009]=ae)),!0):!1}function Ie(b,ae){let oe=f,Ee=!1;if(b)if(oe=u.get(ae),oe===void 0&&(oe=[],u.set(ae,oe)),b.isWebGLMultipleRenderTargets){const de=b.texture;if(oe.length!==de.length||oe[0]!==36064){for(let ye=0,se=de.length;ye<se;ye++)oe[ye]=36064+ye;oe.length=de.length,Ee=!0}}else oe[0]!==36064&&(oe[0]=36064,Ee=!0);else oe[0]!==1029&&(oe[0]=1029,Ee=!0);Ee&&(t.isWebGL2?s.drawBuffers(oe):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(oe))}function be(b){return g!==b?(s.useProgram(b),g=b,!0):!1}const re={[yn]:32774,[Fa]:32778,[Ta]:32779};if(n)re[vs]=32775,re[Qs]=32776;else{const b=e.get("EXT_blend_minmax");b!==null&&(re[vs]=b.MIN_EXT,re[Qs]=b.MAX_EXT)}const Ue={[Sa]:0,[Da]:1,[Ua]:768,[pA]:770,[Pa]:776,[za]:774,[Ra]:772,[Ga]:769,[gA]:771,[La]:775,[Na]:773};function K(b,ae,oe,Ee,de,ye,se,ve){if(b===F2){p===!0&&(j(3042),p=!1);return}if(p===!1&&(Ce(3042),p=!0),b!==ba){if(b!==d||ve!==T){if((m!==yn||Q!==yn)&&(s.blendEquation(32774),m=yn,Q=yn),ve)switch(b){case bn:s.blendFuncSeparate(1,771,1,771);break;case ys:s.blendFunc(1,1);break;case xs:s.blendFuncSeparate(0,769,0,1);break;case Cs:s.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",b);break}else switch(b){case bn:s.blendFuncSeparate(770,771,1,771);break;case ys:s.blendFunc(770,1);break;case xs:s.blendFuncSeparate(0,769,0,1);break;case Cs:s.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",b);break}v=null,y=null,M=null,I=null,d=b,T=ve}return}de=de||ae,ye=ye||oe,se=se||Ee,(ae!==m||de!==Q)&&(s.blendEquationSeparate(re[ae],re[de]),m=ae,Q=de),(oe!==v||Ee!==y||ye!==M||se!==I)&&(s.blendFuncSeparate(Ue[oe],Ue[Ee],Ue[ye],Ue[se]),v=oe,y=Ee,M=ye,I=se),d=b,T=null}function Z(b,ae){b.side===At?j(2884):Ce(2884);let oe=b.side===Zt;ae&&(oe=!oe),ne(oe),b.blending===bn&&b.transparent===!1?K(F2):K(b.blending,b.blendEquation,b.blendSrc,b.blendDst,b.blendEquationAlpha,b.blendSrcAlpha,b.blendDstAlpha,b.premultipliedAlpha),a.setFunc(b.depthFunc),a.setTest(b.depthTest),a.setMask(b.depthWrite),A.setMask(b.colorWrite);const Ee=b.stencilWrite;c.setTest(Ee),Ee&&(c.setMask(b.stencilWriteMask),c.setFunc(b.stencilFunc,b.stencilRef,b.stencilFuncMask),c.setOp(b.stencilFail,b.stencilZFail,b.stencilZPass)),Qe(b.polygonOffset,b.polygonOffsetFactor,b.polygonOffsetUnits),b.alphaToCoverage===!0?Ce(32926):j(32926)}function ne(b){U!==b&&(b?s.frontFace(2304):s.frontFace(2305),U=b)}function fe(b){b!==Qa?(Ce(2884),b!==X&&(b===Es?s.cullFace(1029):b===_a?s.cullFace(1028):s.cullFace(1032))):j(2884),X=b}function le(b){b!==z&&(D&&s.lineWidth(b),z=b)}function Qe(b,ae,oe){b?(Ce(32823),(B!==ae||F!==oe)&&(s.polygonOffset(ae,oe),B=ae,F=oe)):j(32823)}function Me(b){b?Ce(3089):j(3089)}function me(b){b===void 0&&(b=33984+J-1),k!==b&&(s.activeTexture(b),k=b)}function nt(b,ae){k===null&&me();let oe=S[k];oe===void 0&&(oe={type:void 0,texture:void 0},S[k]=oe),(oe.type!==b||oe.texture!==ae)&&(s.bindTexture(b,ae||Re[b]),oe.type=b,oe.texture=ae)}function qe(){const b=S[k];b!==void 0&&b.type!==void 0&&(s.bindTexture(b.type,null),b.type=void 0,b.texture=void 0)}function _(){try{s.compressedTexImage2D.apply(s,arguments)}catch(b){console.error("THREE.WebGLState:",b)}}function E(){try{s.texSubImage2D.apply(s,arguments)}catch(b){console.error("THREE.WebGLState:",b)}}function Y(){try{s.texSubImage3D.apply(s,arguments)}catch(b){console.error("THREE.WebGLState:",b)}}function q(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(b){console.error("THREE.WebGLState:",b)}}function ce(){try{s.texStorage2D.apply(s,arguments)}catch(b){console.error("THREE.WebGLState:",b)}}function ue(){try{s.texStorage3D.apply(s,arguments)}catch(b){console.error("THREE.WebGLState:",b)}}function Be(){try{s.texImage2D.apply(s,arguments)}catch(b){console.error("THREE.WebGLState:",b)}}function H(){try{s.texImage3D.apply(s,arguments)}catch(b){console.error("THREE.WebGLState:",b)}}function Fe(b){ee.equals(b)===!1&&(s.scissor(b.x,b.y,b.z,b.w),ee.copy(b))}function Se(b){te.equals(b)===!1&&(s.viewport(b.x,b.y,b.z,b.w),te.copy(b))}function pe(){s.disable(3042),s.disable(2884),s.disable(2929),s.disable(32823),s.disable(3089),s.disable(2960),s.disable(32926),s.blendEquation(32774),s.blendFunc(1,0),s.blendFuncSeparate(1,0,1,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(513),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(519,0,4294967295),s.stencilOp(7680,7680,7680),s.clearStencil(0),s.cullFace(1029),s.frontFace(2305),s.polygonOffset(0,0),s.activeTexture(33984),s.bindFramebuffer(36160,null),n===!0&&(s.bindFramebuffer(36009,null),s.bindFramebuffer(36008,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),l={},k=null,S={},h={},u=new WeakMap,f=[],g=null,p=!1,d=null,m=null,v=null,y=null,Q=null,M=null,I=null,T=!1,U=null,X=null,z=null,B=null,F=null,ee.set(0,0,s.canvas.width,s.canvas.height),te.set(0,0,s.canvas.width,s.canvas.height),A.reset(),a.reset(),c.reset()}return{buffers:{color:A,depth:a,stencil:c},enable:Ce,disable:j,bindFramebuffer:ke,drawBuffers:Ie,useProgram:be,setBlending:K,setMaterial:Z,setFlipSided:ne,setCullFace:fe,setLineWidth:le,setPolygonOffset:Qe,setScissorTest:Me,activeTexture:me,bindTexture:nt,unbindTexture:qe,compressedTexImage2D:_,texImage2D:Be,texImage3D:H,texStorage2D:ce,texStorage3D:ue,texSubImage2D:E,texSubImage3D:Y,compressedTexSubImage2D:q,scissor:Fe,viewport:Se,reset:pe}}function ru(s,e,t,n,i,r,o){const A=i.isWebGL2,a=i.maxTextures,c=i.maxCubemapSize,l=i.maxTextureSize,h=i.maxSamples,u=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,f=/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap;let p;const d=new WeakMap;let m=!1;try{m=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function v(_,E){return m?new OffscreenCanvas(_,E):gi("canvas")}function y(_,E,Y,q){let ce=1;if((_.width>q||_.height>q)&&(ce=q/Math.max(_.width,_.height)),ce<1||E===!0)if(typeof HTMLImageElement!="undefined"&&_ instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&_ instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&_ instanceof ImageBitmap){const ue=E?k1:Math.floor,Be=ue(ce*_.width),H=ue(ce*_.height);p===void 0&&(p=v(Be,H));const Fe=Y?v(Be,H):p;return Fe.width=Be,Fe.height=H,Fe.getContext("2d").drawImage(_,0,0,Be,H),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+_.width+"x"+_.height+") to ("+Be+"x"+H+")."),Fe}else return"data"in _&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+_.width+"x"+_.height+")."),_;return _}function Q(_){return Xs(_.width)&&Xs(_.height)}function M(_){return A?!1:_.wrapS!==Ot||_.wrapT!==Ot||_.minFilter!==gt&&_.minFilter!==St}function I(_,E){return _.generateMipmaps&&E&&_.minFilter!==gt&&_.minFilter!==St}function T(_){s.generateMipmap(_)}function U(_,E,Y,q,ce=!1){if(A===!1)return E;if(_!==null){if(s[_]!==void 0)return s[_];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+_+"'")}let ue=E;return E===6403&&(Y===5126&&(ue=33326),Y===5131&&(ue=33325),Y===5121&&(ue=33321)),E===33319&&(Y===5126&&(ue=33328),Y===5131&&(ue=33327),Y===5121&&(ue=33323)),E===6408&&(Y===5126&&(ue=34836),Y===5131&&(ue=34842),Y===5121&&(ue=q===Ve&&ce===!1?35907:32856),Y===32819&&(ue=32854),Y===32820&&(ue=32855)),(ue===33325||ue===33326||ue===33327||ue===33328||ue===34842||ue===34836)&&e.get("EXT_color_buffer_float"),ue}function X(_,E,Y){return I(_,Y)===!0||_.isFramebufferTexture&&_.minFilter!==gt&&_.minFilter!==St?Math.log2(Math.max(E.width,E.height))+1:_.mipmaps!==void 0&&_.mipmaps.length>0?_.mipmaps.length:_.isCompressedTexture&&Array.isArray(_.image)?E.mipmaps.length:1}function z(_){return _===gt||_===_s||_===Is?9728:9729}function B(_){const E=_.target;E.removeEventListener("dispose",B),J(E),E.isVideoTexture&&g.delete(E)}function F(_){const E=_.target;E.removeEventListener("dispose",F),P(E)}function J(_){const E=n.get(_);if(E.__webglInit===void 0)return;const Y=_.source,q=d.get(Y);if(q){const ce=q[E.__cacheKey];ce.usedTimes--,ce.usedTimes===0&&D(_),Object.keys(q).length===0&&d.delete(Y)}n.remove(_)}function D(_){const E=n.get(_);s.deleteTexture(E.__webglTexture);const Y=_.source,q=d.get(Y);delete q[E.__cacheKey],o.memory.textures--}function P(_){const E=_.texture,Y=n.get(_),q=n.get(E);if(q.__webglTexture!==void 0&&(s.deleteTexture(q.__webglTexture),o.memory.textures--),_.depthTexture&&_.depthTexture.dispose(),_.isWebGLCubeRenderTarget)for(let ce=0;ce<6;ce++)s.deleteFramebuffer(Y.__webglFramebuffer[ce]),Y.__webglDepthbuffer&&s.deleteRenderbuffer(Y.__webglDepthbuffer[ce]);else s.deleteFramebuffer(Y.__webglFramebuffer),Y.__webglDepthbuffer&&s.deleteRenderbuffer(Y.__webglDepthbuffer),Y.__webglMultisampledFramebuffer&&s.deleteFramebuffer(Y.__webglMultisampledFramebuffer),Y.__webglColorRenderbuffer&&s.deleteRenderbuffer(Y.__webglColorRenderbuffer),Y.__webglDepthRenderbuffer&&s.deleteRenderbuffer(Y.__webglDepthRenderbuffer);if(_.isWebGLMultipleRenderTargets)for(let ce=0,ue=E.length;ce<ue;ce++){const Be=n.get(E[ce]);Be.__webglTexture&&(s.deleteTexture(Be.__webglTexture),o.memory.textures--),n.remove(E[ce])}n.remove(E),n.remove(_)}let N=0;function k(){N=0}function S(){const _=N;return _>=a&&console.warn("THREE.WebGLTextures: Trying to use "+_+" texture units while this GPU supports only "+a),N+=1,_}function W(_){const E=[];return E.push(_.wrapS),E.push(_.wrapT),E.push(_.magFilter),E.push(_.minFilter),E.push(_.anisotropy),E.push(_.internalFormat),E.push(_.format),E.push(_.type),E.push(_.generateMipmaps),E.push(_.premultiplyAlpha),E.push(_.flipY),E.push(_.unpackAlignment),E.push(_.encoding),E.join()}function $(_,E){const Y=n.get(_);if(_.isVideoTexture&&nt(_),_.isRenderTargetTexture===!1&&_.version>0&&Y.__version!==_.version){const q=_.image;if(q===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(q.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ie(Y,_,E);return}}t.activeTexture(33984+E),t.bindTexture(3553,Y.__webglTexture)}function ee(_,E){const Y=n.get(_);if(_.version>0&&Y.__version!==_.version){Ie(Y,_,E);return}t.activeTexture(33984+E),t.bindTexture(35866,Y.__webglTexture)}function te(_,E){const Y=n.get(_);if(_.version>0&&Y.__version!==_.version){Ie(Y,_,E);return}t.activeTexture(33984+E),t.bindTexture(32879,Y.__webglTexture)}function he(_,E){const Y=n.get(_);if(_.version>0&&Y.__version!==_.version){be(Y,_,E);return}t.activeTexture(33984+E),t.bindTexture(34067,Y.__webglTexture)}const Re={[dr]:10497,[Ot]:33071,[z1]:33648},Ce={[gt]:9728,[_s]:9984,[Is]:9986,[St]:9729,[e3]:9985,[xr]:9987};function j(_,E,Y){if(Y?(s.texParameteri(_,10242,Re[E.wrapS]),s.texParameteri(_,10243,Re[E.wrapT]),(_===32879||_===35866)&&s.texParameteri(_,32882,Re[E.wrapR]),s.texParameteri(_,10240,Ce[E.magFilter]),s.texParameteri(_,10241,Ce[E.minFilter])):(s.texParameteri(_,10242,33071),s.texParameteri(_,10243,33071),(_===32879||_===35866)&&s.texParameteri(_,32882,33071),(E.wrapS!==Ot||E.wrapT!==Ot)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(_,10240,z(E.magFilter)),s.texParameteri(_,10241,z(E.minFilter)),E.minFilter!==gt&&E.minFilter!==St&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const q=e.get("EXT_texture_filter_anisotropic");if(E.type===V2&&e.has("OES_texture_float_linear")===!1||A===!1&&E.type===Fn&&e.has("OES_texture_half_float_linear")===!1)return;(E.anisotropy>1||n.get(E).__currentAnisotropy)&&(s.texParameterf(_,q.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(E.anisotropy,i.getMaxAnisotropy())),n.get(E).__currentAnisotropy=E.anisotropy)}}function ke(_,E){let Y=!1;_.__webglInit===void 0&&(_.__webglInit=!0,E.addEventListener("dispose",B));const q=E.source;let ce=d.get(q);ce===void 0&&(ce={},d.set(q,ce));const ue=W(E);if(ue!==_.__cacheKey){ce[ue]===void 0&&(ce[ue]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,Y=!0),ce[ue].usedTimes++;const Be=ce[_.__cacheKey];Be!==void 0&&(ce[_.__cacheKey].usedTimes--,Be.usedTimes===0&&D(E)),_.__cacheKey=ue,_.__webglTexture=ce[ue].texture}return Y}function Ie(_,E,Y){let q=3553;E.isDataArrayTexture&&(q=35866),E.isData3DTexture&&(q=32879);const ce=ke(_,E),ue=E.source;if(t.activeTexture(33984+Y),t.bindTexture(q,_.__webglTexture),ue.version!==ue.__currentVersion||ce===!0){s.pixelStorei(37440,E.flipY),s.pixelStorei(37441,E.premultiplyAlpha),s.pixelStorei(3317,E.unpackAlignment),s.pixelStorei(37443,0);const Be=M(E)&&Q(E.image)===!1;let H=y(E.image,Be,!1,l);H=qe(E,H);const Fe=Q(H)||A,Se=r.convert(E.format,E.encoding);let pe=r.convert(E.type),b=U(E.internalFormat,Se,pe,E.encoding,E.isVideoTexture);j(q,E,Fe);let ae;const oe=E.mipmaps,Ee=A&&E.isVideoTexture!==!0,de=_.__version===void 0,ye=X(E,H,Fe);if(E.isDepthTexture)b=6402,A?E.type===V2?b=36012:E.type===ar?b=33190:E.type===Tn?b=35056:b=33189:E.type===V2&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),E.format===j2&&b===6402&&E.type!==fi&&E.type!==ar&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),E.type=fi,pe=r.convert(E.type)),E.format===Rn&&b===6402&&(b=34041,E.type!==Tn&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),E.type=Tn,pe=r.convert(E.type))),Ee&&de?t.texStorage2D(3553,1,b,H.width,H.height):t.texImage2D(3553,0,b,H.width,H.height,0,Se,pe,null);else if(E.isDataTexture)if(oe.length>0&&Fe){Ee&&de&&t.texStorage2D(3553,ye,b,oe[0].width,oe[0].height);for(let se=0,ve=oe.length;se<ve;se++)ae=oe[se],Ee?t.texSubImage2D(3553,se,0,0,ae.width,ae.height,Se,pe,ae.data):t.texImage2D(3553,se,b,ae.width,ae.height,0,Se,pe,ae.data);E.generateMipmaps=!1}else Ee?(de&&t.texStorage2D(3553,ye,b,H.width,H.height),t.texSubImage2D(3553,0,0,0,H.width,H.height,Se,pe,H.data)):t.texImage2D(3553,0,b,H.width,H.height,0,Se,pe,H.data);else if(E.isCompressedTexture){Ee&&de&&t.texStorage2D(3553,ye,b,oe[0].width,oe[0].height);for(let se=0,ve=oe.length;se<ve;se++)ae=oe[se],E.format!==Jt?Se!==null?Ee?t.compressedTexSubImage2D(3553,se,0,0,ae.width,ae.height,Se,ae.data):t.compressedTexImage2D(3553,se,b,ae.width,ae.height,0,ae.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ee?t.texSubImage2D(3553,se,0,0,ae.width,ae.height,Se,pe,ae.data):t.texImage2D(3553,se,b,ae.width,ae.height,0,Se,pe,ae.data)}else if(E.isDataArrayTexture)Ee?(de&&t.texStorage3D(35866,ye,b,H.width,H.height,H.depth),t.texSubImage3D(35866,0,0,0,0,H.width,H.height,H.depth,Se,pe,H.data)):t.texImage3D(35866,0,b,H.width,H.height,H.depth,0,Se,pe,H.data);else if(E.isData3DTexture)Ee?(de&&t.texStorage3D(32879,ye,b,H.width,H.height,H.depth),t.texSubImage3D(32879,0,0,0,0,H.width,H.height,H.depth,Se,pe,H.data)):t.texImage3D(32879,0,b,H.width,H.height,H.depth,0,Se,pe,H.data);else if(E.isFramebufferTexture)Ee&&de?t.texStorage2D(3553,ye,b,H.width,H.height):t.texImage2D(3553,0,b,H.width,H.height,0,Se,pe,null);else if(oe.length>0&&Fe){Ee&&de&&t.texStorage2D(3553,ye,b,oe[0].width,oe[0].height);for(let se=0,ve=oe.length;se<ve;se++)ae=oe[se],Ee?t.texSubImage2D(3553,se,0,0,Se,pe,ae):t.texImage2D(3553,se,b,Se,pe,ae);E.generateMipmaps=!1}else Ee?(de&&t.texStorage2D(3553,ye,b,H.width,H.height),t.texSubImage2D(3553,0,0,0,Se,pe,H)):t.texImage2D(3553,0,b,Se,pe,H);I(E,Fe)&&T(q),ue.__currentVersion=ue.version,E.onUpdate&&E.onUpdate(E)}_.__version=E.version}function be(_,E,Y){if(E.image.length!==6)return;const q=ke(_,E),ce=E.source;if(t.activeTexture(33984+Y),t.bindTexture(34067,_.__webglTexture),ce.version!==ce.__currentVersion||q===!0){s.pixelStorei(37440,E.flipY),s.pixelStorei(37441,E.premultiplyAlpha),s.pixelStorei(3317,E.unpackAlignment),s.pixelStorei(37443,0);const ue=E.isCompressedTexture||E.image[0].isCompressedTexture,Be=E.image[0]&&E.image[0].isDataTexture,H=[];for(let se=0;se<6;se++)!ue&&!Be?H[se]=y(E.image[se],!1,!0,c):H[se]=Be?E.image[se].image:E.image[se],H[se]=qe(E,H[se]);const Fe=H[0],Se=Q(Fe)||A,pe=r.convert(E.format,E.encoding),b=r.convert(E.type),ae=U(E.internalFormat,pe,b,E.encoding),oe=A&&E.isVideoTexture!==!0,Ee=_.__version===void 0;let de=X(E,Fe,Se);j(34067,E,Se);let ye;if(ue){oe&&Ee&&t.texStorage2D(34067,de,ae,Fe.width,Fe.height);for(let se=0;se<6;se++){ye=H[se].mipmaps;for(let ve=0;ve<ye.length;ve++){const et=ye[ve];E.format!==Jt?pe!==null?oe?t.compressedTexSubImage2D(34069+se,ve,0,0,et.width,et.height,pe,et.data):t.compressedTexImage2D(34069+se,ve,ae,et.width,et.height,0,et.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):oe?t.texSubImage2D(34069+se,ve,0,0,et.width,et.height,pe,b,et.data):t.texImage2D(34069+se,ve,ae,et.width,et.height,0,pe,b,et.data)}}}else{ye=E.mipmaps,oe&&Ee&&(ye.length>0&&de++,t.texStorage2D(34067,de,ae,H[0].width,H[0].height));for(let se=0;se<6;se++)if(Be){oe?t.texSubImage2D(34069+se,0,0,0,H[se].width,H[se].height,pe,b,H[se].data):t.texImage2D(34069+se,0,ae,H[se].width,H[se].height,0,pe,b,H[se].data);for(let ve=0;ve<ye.length;ve++){const ze=ye[ve].image[se].image;oe?t.texSubImage2D(34069+se,ve+1,0,0,ze.width,ze.height,pe,b,ze.data):t.texImage2D(34069+se,ve+1,ae,ze.width,ze.height,0,pe,b,ze.data)}}else{oe?t.texSubImage2D(34069+se,0,0,0,pe,b,H[se]):t.texImage2D(34069+se,0,ae,pe,b,H[se]);for(let ve=0;ve<ye.length;ve++){const et=ye[ve];oe?t.texSubImage2D(34069+se,ve+1,0,0,pe,b,et.image[se]):t.texImage2D(34069+se,ve+1,ae,pe,b,et.image[se])}}}I(E,Se)&&T(34067),ce.__currentVersion=ce.version,E.onUpdate&&E.onUpdate(E)}_.__version=E.version}function re(_,E,Y,q,ce){const ue=r.convert(Y.format,Y.encoding),Be=r.convert(Y.type),H=U(Y.internalFormat,ue,Be,Y.encoding);n.get(E).__hasExternalTextures||(ce===32879||ce===35866?t.texImage3D(ce,0,H,E.width,E.height,E.depth,0,ue,Be,null):t.texImage2D(ce,0,H,E.width,E.height,0,ue,Be,null)),t.bindFramebuffer(36160,_),me(E)?u.framebufferTexture2DMultisampleEXT(36160,q,ce,n.get(Y).__webglTexture,0,Me(E)):s.framebufferTexture2D(36160,q,ce,n.get(Y).__webglTexture,0),t.bindFramebuffer(36160,null)}function Ue(_,E,Y){if(s.bindRenderbuffer(36161,_),E.depthBuffer&&!E.stencilBuffer){let q=33189;if(Y||me(E)){const ce=E.depthTexture;ce&&ce.isDepthTexture&&(ce.type===V2?q=36012:ce.type===ar&&(q=33190));const ue=Me(E);me(E)?u.renderbufferStorageMultisampleEXT(36161,ue,q,E.width,E.height):s.renderbufferStorageMultisample(36161,ue,q,E.width,E.height)}else s.renderbufferStorage(36161,q,E.width,E.height);s.framebufferRenderbuffer(36160,36096,36161,_)}else if(E.depthBuffer&&E.stencilBuffer){const q=Me(E);Y&&me(E)===!1?s.renderbufferStorageMultisample(36161,q,35056,E.width,E.height):me(E)?u.renderbufferStorageMultisampleEXT(36161,q,35056,E.width,E.height):s.renderbufferStorage(36161,34041,E.width,E.height),s.framebufferRenderbuffer(36160,33306,36161,_)}else{const q=E.isWebGLMultipleRenderTargets===!0?E.texture[0]:E.texture,ce=r.convert(q.format,q.encoding),ue=r.convert(q.type),Be=U(q.internalFormat,ce,ue,q.encoding),H=Me(E);Y&&me(E)===!1?s.renderbufferStorageMultisample(36161,H,Be,E.width,E.height):me(E)?u.renderbufferStorageMultisampleEXT(36161,H,Be,E.width,E.height):s.renderbufferStorage(36161,Be,E.width,E.height)}s.bindRenderbuffer(36161,null)}function K(_,E){if(E&&E.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,_),!(E.depthTexture&&E.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(E.depthTexture).__webglTexture||E.depthTexture.image.width!==E.width||E.depthTexture.image.height!==E.height)&&(E.depthTexture.image.width=E.width,E.depthTexture.image.height=E.height,E.depthTexture.needsUpdate=!0),$(E.depthTexture,0);const q=n.get(E.depthTexture).__webglTexture,ce=Me(E);if(E.depthTexture.format===j2)me(E)?u.framebufferTexture2DMultisampleEXT(36160,36096,3553,q,0,ce):s.framebufferTexture2D(36160,36096,3553,q,0);else if(E.depthTexture.format===Rn)me(E)?u.framebufferTexture2DMultisampleEXT(36160,33306,3553,q,0,ce):s.framebufferTexture2D(36160,33306,3553,q,0);else throw new Error("Unknown depthTexture format")}function Z(_){const E=n.get(_),Y=_.isWebGLCubeRenderTarget===!0;if(_.depthTexture&&!E.__autoAllocateDepthBuffer){if(Y)throw new Error("target.depthTexture not supported in Cube render targets");K(E.__webglFramebuffer,_)}else if(Y){E.__webglDepthbuffer=[];for(let q=0;q<6;q++)t.bindFramebuffer(36160,E.__webglFramebuffer[q]),E.__webglDepthbuffer[q]=s.createRenderbuffer(),Ue(E.__webglDepthbuffer[q],_,!1)}else t.bindFramebuffer(36160,E.__webglFramebuffer),E.__webglDepthbuffer=s.createRenderbuffer(),Ue(E.__webglDepthbuffer,_,!1);t.bindFramebuffer(36160,null)}function ne(_,E,Y){const q=n.get(_);E!==void 0&&re(q.__webglFramebuffer,_,_.texture,36064,3553),Y!==void 0&&Z(_)}function fe(_){const E=_.texture,Y=n.get(_),q=n.get(E);_.addEventListener("dispose",F),_.isWebGLMultipleRenderTargets!==!0&&(q.__webglTexture===void 0&&(q.__webglTexture=s.createTexture()),q.__version=E.version,o.memory.textures++);const ce=_.isWebGLCubeRenderTarget===!0,ue=_.isWebGLMultipleRenderTargets===!0,Be=Q(_)||A;if(ce){Y.__webglFramebuffer=[];for(let H=0;H<6;H++)Y.__webglFramebuffer[H]=s.createFramebuffer()}else if(Y.__webglFramebuffer=s.createFramebuffer(),ue)if(i.drawBuffers){const H=_.texture;for(let Fe=0,Se=H.length;Fe<Se;Fe++){const pe=n.get(H[Fe]);pe.__webglTexture===void 0&&(pe.__webglTexture=s.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(A&&_.samples>0&&me(_)===!1){Y.__webglMultisampledFramebuffer=s.createFramebuffer(),Y.__webglColorRenderbuffer=s.createRenderbuffer(),s.bindRenderbuffer(36161,Y.__webglColorRenderbuffer);const H=r.convert(E.format,E.encoding),Fe=r.convert(E.type),Se=U(E.internalFormat,H,Fe,E.encoding),pe=Me(_);s.renderbufferStorageMultisample(36161,pe,Se,_.width,_.height),t.bindFramebuffer(36160,Y.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064,36161,Y.__webglColorRenderbuffer),s.bindRenderbuffer(36161,null),_.depthBuffer&&(Y.__webglDepthRenderbuffer=s.createRenderbuffer(),Ue(Y.__webglDepthRenderbuffer,_,!0)),t.bindFramebuffer(36160,null)}if(ce){t.bindTexture(34067,q.__webglTexture),j(34067,E,Be);for(let H=0;H<6;H++)re(Y.__webglFramebuffer[H],_,E,36064,34069+H);I(E,Be)&&T(34067),t.unbindTexture()}else if(ue){const H=_.texture;for(let Fe=0,Se=H.length;Fe<Se;Fe++){const pe=H[Fe],b=n.get(pe);t.bindTexture(3553,b.__webglTexture),j(3553,pe,Be),re(Y.__webglFramebuffer,_,pe,36064+Fe,3553),I(pe,Be)&&T(3553)}t.unbindTexture()}else{let H=3553;(_.isWebGL3DRenderTarget||_.isWebGLArrayRenderTarget)&&(A?H=_.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(H,q.__webglTexture),j(H,E,Be),re(Y.__webglFramebuffer,_,E,36064,H),I(E,Be)&&T(H),t.unbindTexture()}_.depthBuffer&&Z(_)}function le(_){const E=Q(_)||A,Y=_.isWebGLMultipleRenderTargets===!0?_.texture:[_.texture];for(let q=0,ce=Y.length;q<ce;q++){const ue=Y[q];if(I(ue,E)){const Be=_.isWebGLCubeRenderTarget?34067:3553,H=n.get(ue).__webglTexture;t.bindTexture(Be,H),T(Be),t.unbindTexture()}}}function Qe(_){if(A&&_.samples>0&&me(_)===!1){const E=_.width,Y=_.height;let q=16384;const ce=[36064],ue=_.stencilBuffer?33306:36096;_.depthBuffer&&ce.push(ue);const Be=n.get(_),H=Be.__ignoreDepthValues!==void 0?Be.__ignoreDepthValues:!1;H===!1&&(_.depthBuffer&&(q|=256),_.stencilBuffer&&(q|=1024)),t.bindFramebuffer(36008,Be.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,Be.__webglFramebuffer),H===!0&&(s.invalidateFramebuffer(36008,[ue]),s.invalidateFramebuffer(36009,[ue])),s.blitFramebuffer(0,0,E,Y,0,0,E,Y,q,9728),f&&s.invalidateFramebuffer(36008,ce),t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,Be.__webglMultisampledFramebuffer)}}function Me(_){return Math.min(h,_.samples)}function me(_){const E=n.get(_);return A&&_.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&E.__useRenderToTexture!==!1}function nt(_){const E=o.render.frame;g.get(_)!==E&&(g.set(_,E),_.update())}function qe(_,E){const Y=_.encoding,q=_.format,ce=_.type;return _.isCompressedTexture===!0||_.isVideoTexture===!0||_.format===L1||Y!==B2&&(Y===Ve?A===!1?e.has("EXT_sRGB")===!0&&q===Jt?(_.format=L1,_.minFilter=St,_.generateMipmaps=!1):E=X2.sRGBToLinear(E):(q!==Jt||ce!==O2)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",Y)),E}this.allocateTextureUnit=S,this.resetTextureUnits=k,this.setTexture2D=$,this.setTexture2DArray=ee,this.setTexture3D=te,this.setTextureCube=he,this.rebindTextures=ne,this.setupRenderTarget=fe,this.updateRenderTargetMipmap=le,this.updateMultisampleRenderTarget=Qe,this.setupDepthRenderbuffer=Z,this.setupFrameBufferTexture=re,this.useMultisampledRTT=me}function su(s,e,t){const n=t.isWebGL2;function i(r,o=null){let A;if(r===O2)return 5121;if(r===r3)return 32819;if(r===s3)return 32820;if(r===t3)return 5120;if(r===n3)return 5122;if(r===fi)return 5123;if(r===i3)return 5124;if(r===ar)return 5125;if(r===V2)return 5126;if(r===Fn)return n?5131:(A=e.get("OES_texture_half_float"),A!==null?A.HALF_FLOAT_OES:null);if(r===o3)return 6406;if(r===Jt)return 6408;if(r===A3)return 6409;if(r===a3)return 6410;if(r===j2)return 6402;if(r===Rn)return 34041;if(r===c3)return 6403;if(r===BA)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(r===L1)return A=e.get("EXT_sRGB"),A!==null?A.SRGB_ALPHA_EXT:null;if(r===l3)return 36244;if(r===h3)return 33319;if(r===u3)return 33320;if(r===d3)return 36249;if(r===kr||r===Yr||r===Hr||r===Vr)if(o===Ve)if(A=e.get("WEBGL_compressed_texture_s3tc_srgb"),A!==null){if(r===kr)return A.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===Yr)return A.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===Hr)return A.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===Vr)return A.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(A=e.get("WEBGL_compressed_texture_s3tc"),A!==null){if(r===kr)return A.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Yr)return A.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===Hr)return A.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===Vr)return A.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===bs||r===Fs||r===Ts||r===Ss)if(A=e.get("WEBGL_compressed_texture_pvrtc"),A!==null){if(r===bs)return A.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===Fs)return A.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===Ts)return A.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===Ss)return A.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===f3)return A=e.get("WEBGL_compressed_texture_etc1"),A!==null?A.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===Ds||r===Us)if(A=e.get("WEBGL_compressed_texture_etc"),A!==null){if(r===Ds)return o===Ve?A.COMPRESSED_SRGB8_ETC2:A.COMPRESSED_RGB8_ETC2;if(r===Us)return o===Ve?A.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:A.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===Gs||r===Rs||r===Ns||r===zs||r===Ls||r===Ps||r===ks||r===Ys||r===Hs||r===Vs||r===Ks||r===js||r===Ws||r===Os)if(A=e.get("WEBGL_compressed_texture_astc"),A!==null){if(r===Gs)return o===Ve?A.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:A.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===Rs)return o===Ve?A.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:A.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===Ns)return o===Ve?A.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:A.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===zs)return o===Ve?A.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:A.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===Ls)return o===Ve?A.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:A.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===Ps)return o===Ve?A.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:A.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===ks)return o===Ve?A.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:A.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===Ys)return o===Ve?A.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:A.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===Hs)return o===Ve?A.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:A.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===Vs)return o===Ve?A.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:A.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===Ks)return o===Ve?A.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:A.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===js)return o===Ve?A.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:A.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===Ws)return o===Ve?A.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:A.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===Os)return o===Ve?A.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:A.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===Js)if(A=e.get("EXT_texture_compression_bptc"),A!==null){if(r===Js)return o===Ve?A.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:A.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(r===Tn)return n?34042:(A=e.get("WEBGL_depth_texture"),A!==null?A.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:i}}class NA extends mt{constructor(e=[]){super(),this.cameras=e}}NA.prototype.isArrayCamera=!0;class ci extends Ne{constructor(){super(),this.type="Group"}}ci.prototype.isGroup=!0;const ou={type:"move"};class M1{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ci,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ci,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new w,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new w),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ci,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new w,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new w),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,o=null;const A=this._targetRay,a=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred")if(A!==null&&(i=t.getPose(e.targetRaySpace,n),i!==null&&(A.matrix.fromArray(i.transform.matrix),A.matrix.decompose(A.position,A.rotation,A.scale),i.linearVelocity?(A.hasLinearVelocity=!0,A.linearVelocity.copy(i.linearVelocity)):A.hasLinearVelocity=!1,i.angularVelocity?(A.hasAngularVelocity=!0,A.angularVelocity.copy(i.angularVelocity)):A.hasAngularVelocity=!1,this.dispatchEvent(ou))),c&&e.hand){o=!0;for(const p of e.hand.values()){const d=t.getJointPose(p,n);if(c.joints[p.jointName]===void 0){const v=new ci;v.matrixAutoUpdate=!1,v.visible=!1,c.joints[p.jointName]=v,c.add(v)}const m=c.joints[p.jointName];d!==null&&(m.matrix.fromArray(d.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.jointRadius=d.radius),m.visible=d!==null}const l=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],u=l.position.distanceTo(h.position),f=.02,g=.005;c.inputState.pinching&&u>f+g?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&u<=f-g&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else a!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1));return A!==null&&(A.visible=i!==null),a!==null&&(a.visible=r!==null),c!==null&&(c.visible=o!==null),this}}class zA extends at{constructor(e,t,n,i,r,o,A,a,c,l){if(l=l!==void 0?l:j2,l!==j2&&l!==Rn)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&l===j2&&(n=fi),n===void 0&&l===Rn&&(n=Tn),super(null,i,r,o,A,a,l,n,c),this.image={width:e,height:t},this.magFilter=A!==void 0?A:gt,this.minFilter=a!==void 0?a:gt,this.flipY=!1,this.generateMipmaps=!1}}zA.prototype.isDepthTexture=!0;class Au extends Z2{constructor(e,t){super();const n=this;let i=null,r=1,o=null,A="local-floor",a=null,c=null,l=null,h=null,u=null;const f=t.getContextAttributes();let g=null,p=null;const d=[],m=new Map,v=new mt;v.layers.enable(1),v.viewport=new Je;const y=new mt;y.layers.enable(2),y.viewport=new Je;const Q=[v,y],M=new NA;M.layers.enable(1),M.layers.enable(2);let I=null,T=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(S){let W=d[S];return W===void 0&&(W=new M1,d[S]=W),W.getTargetRaySpace()},this.getControllerGrip=function(S){let W=d[S];return W===void 0&&(W=new M1,d[S]=W),W.getGripSpace()},this.getHand=function(S){let W=d[S];return W===void 0&&(W=new M1,d[S]=W),W.getHandSpace()};function U(S){const W=m.get(S.inputSource);W&&W.dispatchEvent({type:S.type,data:S.inputSource})}function X(){m.forEach(function(S,W){S.disconnect(W)}),m.clear(),I=null,T=null,e.setRenderTarget(g),h=null,l=null,c=null,i=null,p=null,k.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(S){r=S,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(S){A=S,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o},this.getBaseLayer=function(){return l!==null?l:h},this.getBinding=function(){return c},this.getFrame=function(){return u},this.getSession=function(){return i},this.setSession=async function(S){if(i=S,i!==null){if(g=e.getRenderTarget(),i.addEventListener("select",U),i.addEventListener("selectstart",U),i.addEventListener("selectend",U),i.addEventListener("squeeze",U),i.addEventListener("squeezestart",U),i.addEventListener("squeezeend",U),i.addEventListener("end",X),i.addEventListener("inputsourceschange",z),f.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const W={antialias:i.renderState.layers===void 0?f.antialias:!0,alpha:f.alpha,depth:f.depth,stencil:f.stencil,framebufferScaleFactor:r};h=new XRWebGLLayer(i,t,W),i.updateRenderState({baseLayer:h}),p=new je(h.framebufferWidth,h.framebufferHeight,{format:Jt,type:O2,encoding:e.outputEncoding})}else{let W=null,$=null,ee=null;f.depth&&(ee=f.stencil?35056:33190,W=f.stencil?Rn:j2,$=f.stencil?Tn:fi);const te={colorFormat:e.outputEncoding===Ve?35907:32856,depthFormat:ee,scaleFactor:r};c=new XRWebGLBinding(i,t),l=c.createProjectionLayer(te),i.updateRenderState({layers:[l]}),p=new je(l.textureWidth,l.textureHeight,{format:Jt,type:O2,depthTexture:new zA(l.textureWidth,l.textureHeight,$,void 0,void 0,void 0,void 0,void 0,void 0,W),stencilBuffer:f.stencil,encoding:e.outputEncoding,samples:f.antialias?4:0});const he=e.properties.get(p);he.__ignoreDepthValues=l.ignoreDepthValues}p.isXRRenderTarget=!0,this.setFoveation(1),o=await i.requestReferenceSpace(A),k.setContext(i),k.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function z(S){const W=i.inputSources;for(let $=0;$<d.length;$++)m.set(W[$],d[$]);for(let $=0;$<S.removed.length;$++){const ee=S.removed[$],te=m.get(ee);te&&(te.dispatchEvent({type:"disconnected",data:ee}),m.delete(ee))}for(let $=0;$<S.added.length;$++){const ee=S.added[$],te=m.get(ee);te&&te.dispatchEvent({type:"connected",data:ee})}}const B=new w,F=new w;function J(S,W,$){B.setFromMatrixPosition(W.matrixWorld),F.setFromMatrixPosition($.matrixWorld);const ee=B.distanceTo(F),te=W.projectionMatrix.elements,he=$.projectionMatrix.elements,Re=te[14]/(te[10]-1),Ce=te[14]/(te[10]+1),j=(te[9]+1)/te[5],ke=(te[9]-1)/te[5],Ie=(te[8]-1)/te[0],be=(he[8]+1)/he[0],re=Re*Ie,Ue=Re*be,K=ee/(-Ie+be),Z=K*-Ie;W.matrixWorld.decompose(S.position,S.quaternion,S.scale),S.translateX(Z),S.translateZ(K),S.matrixWorld.compose(S.position,S.quaternion,S.scale),S.matrixWorldInverse.copy(S.matrixWorld).invert();const ne=Re+K,fe=Ce+K,le=re-Z,Qe=Ue+(ee-Z),Me=j*Ce/fe*ne,me=ke*Ce/fe*ne;S.projectionMatrix.makePerspective(le,Qe,Me,me,ne,fe)}function D(S,W){W===null?S.matrixWorld.copy(S.matrix):S.matrixWorld.multiplyMatrices(W.matrixWorld,S.matrix),S.matrixWorldInverse.copy(S.matrixWorld).invert()}this.updateCamera=function(S){if(i===null)return;M.near=y.near=v.near=S.near,M.far=y.far=v.far=S.far,(I!==M.near||T!==M.far)&&(i.updateRenderState({depthNear:M.near,depthFar:M.far}),I=M.near,T=M.far);const W=S.parent,$=M.cameras;D(M,W);for(let te=0;te<$.length;te++)D($[te],W);M.matrixWorld.decompose(M.position,M.quaternion,M.scale),S.position.copy(M.position),S.quaternion.copy(M.quaternion),S.scale.copy(M.scale),S.matrix.copy(M.matrix),S.matrixWorld.copy(M.matrixWorld);const ee=S.children;for(let te=0,he=ee.length;te<he;te++)ee[te].updateMatrixWorld(!0);$.length===2?J(M,v,y):M.projectionMatrix.copy(v.projectionMatrix)},this.getCamera=function(){return M},this.getFoveation=function(){if(l!==null)return l.fixedFoveation;if(h!==null)return h.fixedFoveation},this.setFoveation=function(S){l!==null&&(l.fixedFoveation=S),h!==null&&h.fixedFoveation!==void 0&&(h.fixedFoveation=S)};let P=null;function N(S,W){if(a=W.getViewerPose(o),u=W,a!==null){const ee=a.views;h!==null&&(e.setRenderTargetFramebuffer(p,h.framebuffer),e.setRenderTarget(p));let te=!1;ee.length!==M.cameras.length&&(M.cameras.length=0,te=!0);for(let he=0;he<ee.length;he++){const Re=ee[he];let Ce=null;if(h!==null)Ce=h.getViewport(Re);else{const ke=c.getViewSubImage(l,Re);Ce=ke.viewport,he===0&&(e.setRenderTargetTextures(p,ke.colorTexture,l.ignoreDepthValues?void 0:ke.depthStencilTexture),e.setRenderTarget(p))}const j=Q[he];j.matrix.fromArray(Re.transform.matrix),j.projectionMatrix.fromArray(Re.projectionMatrix),j.viewport.set(Ce.x,Ce.y,Ce.width,Ce.height),he===0&&M.matrix.copy(j.matrix),te===!0&&M.cameras.push(j)}}const $=i.inputSources;for(let ee=0;ee<d.length;ee++){const te=d[ee],he=$[ee];te.update(he,W,o)}P&&P(S,W),u=null}const k=new IA;k.setAnimationLoop(N),this.setAnimationLoop=function(S){P=S},this.dispose=function(){}}}function au(s,e){function t(p,d){p.fogColor.value.copy(d.color),d.isFog?(p.fogNear.value=d.near,p.fogFar.value=d.far):d.isFogExp2&&(p.fogDensity.value=d.density)}function n(p,d,m,v,y){d.isMeshBasicMaterial||d.isMeshLambertMaterial?i(p,d):d.isMeshToonMaterial?(i(p,d),l(p,d)):d.isMeshPhongMaterial?(i(p,d),c(p,d)):d.isMeshStandardMaterial?(i(p,d),h(p,d),d.isMeshPhysicalMaterial&&u(p,d,y)):d.isMeshMatcapMaterial?(i(p,d),f(p,d)):d.isMeshDepthMaterial?i(p,d):d.isMeshDistanceMaterial?(i(p,d),g(p,d)):d.isMeshNormalMaterial?i(p,d):d.isLineBasicMaterial?(r(p,d),d.isLineDashedMaterial&&o(p,d)):d.isPointsMaterial?A(p,d,m,v):d.isSpriteMaterial?a(p,d):d.isShadowMaterial?(p.color.value.copy(d.color),p.opacity.value=d.opacity):d.isShaderMaterial&&(d.uniformsNeedUpdate=!1)}function i(p,d){p.opacity.value=d.opacity,d.color&&p.diffuse.value.copy(d.color),d.emissive&&p.emissive.value.copy(d.emissive).multiplyScalar(d.emissiveIntensity),d.map&&(p.map.value=d.map),d.alphaMap&&(p.alphaMap.value=d.alphaMap),d.bumpMap&&(p.bumpMap.value=d.bumpMap,p.bumpScale.value=d.bumpScale,d.side===Zt&&(p.bumpScale.value*=-1)),d.displacementMap&&(p.displacementMap.value=d.displacementMap,p.displacementScale.value=d.displacementScale,p.displacementBias.value=d.displacementBias),d.emissiveMap&&(p.emissiveMap.value=d.emissiveMap),d.normalMap&&(p.normalMap.value=d.normalMap,p.normalScale.value.copy(d.normalScale),d.side===Zt&&p.normalScale.value.negate()),d.specularMap&&(p.specularMap.value=d.specularMap),d.alphaTest>0&&(p.alphaTest.value=d.alphaTest);const m=e.get(d).envMap;if(m&&(p.envMap.value=m,p.flipEnvMap.value=m.isCubeTexture&&m.isRenderTargetTexture===!1?-1:1,p.reflectivity.value=d.reflectivity,p.ior.value=d.ior,p.refractionRatio.value=d.refractionRatio),d.lightMap){p.lightMap.value=d.lightMap;const Q=s.physicallyCorrectLights!==!0?Math.PI:1;p.lightMapIntensity.value=d.lightMapIntensity*Q}d.aoMap&&(p.aoMap.value=d.aoMap,p.aoMapIntensity.value=d.aoMapIntensity);let v;d.map?v=d.map:d.specularMap?v=d.specularMap:d.displacementMap?v=d.displacementMap:d.normalMap?v=d.normalMap:d.bumpMap?v=d.bumpMap:d.roughnessMap?v=d.roughnessMap:d.metalnessMap?v=d.metalnessMap:d.alphaMap?v=d.alphaMap:d.emissiveMap?v=d.emissiveMap:d.clearcoatMap?v=d.clearcoatMap:d.clearcoatNormalMap?v=d.clearcoatNormalMap:d.clearcoatRoughnessMap?v=d.clearcoatRoughnessMap:d.specularIntensityMap?v=d.specularIntensityMap:d.specularColorMap?v=d.specularColorMap:d.transmissionMap?v=d.transmissionMap:d.thicknessMap?v=d.thicknessMap:d.sheenColorMap?v=d.sheenColorMap:d.sheenRoughnessMap&&(v=d.sheenRoughnessMap),v!==void 0&&(v.isWebGLRenderTarget&&(v=v.texture),v.matrixAutoUpdate===!0&&v.updateMatrix(),p.uvTransform.value.copy(v.matrix));let y;d.aoMap?y=d.aoMap:d.lightMap&&(y=d.lightMap),y!==void 0&&(y.isWebGLRenderTarget&&(y=y.texture),y.matrixAutoUpdate===!0&&y.updateMatrix(),p.uv2Transform.value.copy(y.matrix))}function r(p,d){p.diffuse.value.copy(d.color),p.opacity.value=d.opacity}function o(p,d){p.dashSize.value=d.dashSize,p.totalSize.value=d.dashSize+d.gapSize,p.scale.value=d.scale}function A(p,d,m,v){p.diffuse.value.copy(d.color),p.opacity.value=d.opacity,p.size.value=d.size*m,p.scale.value=v*.5,d.map&&(p.map.value=d.map),d.alphaMap&&(p.alphaMap.value=d.alphaMap),d.alphaTest>0&&(p.alphaTest.value=d.alphaTest);let y;d.map?y=d.map:d.alphaMap&&(y=d.alphaMap),y!==void 0&&(y.matrixAutoUpdate===!0&&y.updateMatrix(),p.uvTransform.value.copy(y.matrix))}function a(p,d){p.diffuse.value.copy(d.color),p.opacity.value=d.opacity,p.rotation.value=d.rotation,d.map&&(p.map.value=d.map),d.alphaMap&&(p.alphaMap.value=d.alphaMap),d.alphaTest>0&&(p.alphaTest.value=d.alphaTest);let m;d.map?m=d.map:d.alphaMap&&(m=d.alphaMap),m!==void 0&&(m.matrixAutoUpdate===!0&&m.updateMatrix(),p.uvTransform.value.copy(m.matrix))}function c(p,d){p.specular.value.copy(d.specular),p.shininess.value=Math.max(d.shininess,1e-4)}function l(p,d){d.gradientMap&&(p.gradientMap.value=d.gradientMap)}function h(p,d){p.roughness.value=d.roughness,p.metalness.value=d.metalness,d.roughnessMap&&(p.roughnessMap.value=d.roughnessMap),d.metalnessMap&&(p.metalnessMap.value=d.metalnessMap),e.get(d).envMap&&(p.envMapIntensity.value=d.envMapIntensity)}function u(p,d,m){p.ior.value=d.ior,d.sheen>0&&(p.sheenColor.value.copy(d.sheenColor).multiplyScalar(d.sheen),p.sheenRoughness.value=d.sheenRoughness,d.sheenColorMap&&(p.sheenColorMap.value=d.sheenColorMap),d.sheenRoughnessMap&&(p.sheenRoughnessMap.value=d.sheenRoughnessMap)),d.clearcoat>0&&(p.clearcoat.value=d.clearcoat,p.clearcoatRoughness.value=d.clearcoatRoughness,d.clearcoatMap&&(p.clearcoatMap.value=d.clearcoatMap),d.clearcoatRoughnessMap&&(p.clearcoatRoughnessMap.value=d.clearcoatRoughnessMap),d.clearcoatNormalMap&&(p.clearcoatNormalScale.value.copy(d.clearcoatNormalScale),p.clearcoatNormalMap.value=d.clearcoatNormalMap,d.side===Zt&&p.clearcoatNormalScale.value.negate())),d.transmission>0&&(p.transmission.value=d.transmission,p.transmissionSamplerMap.value=m.texture,p.transmissionSamplerSize.value.set(m.width,m.height),d.transmissionMap&&(p.transmissionMap.value=d.transmissionMap),p.thickness.value=d.thickness,d.thicknessMap&&(p.thicknessMap.value=d.thicknessMap),p.attenuationDistance.value=d.attenuationDistance,p.attenuationColor.value.copy(d.attenuationColor)),p.specularIntensity.value=d.specularIntensity,p.specularColor.value.copy(d.specularColor),d.specularIntensityMap&&(p.specularIntensityMap.value=d.specularIntensityMap),d.specularColorMap&&(p.specularColorMap.value=d.specularColorMap)}function f(p,d){d.matcap&&(p.matcap.value=d.matcap)}function g(p,d){p.referencePosition.value.copy(d.referencePosition),p.nearDistance.value=d.nearDistance,p.farDistance.value=d.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function cu(){const s=gi("canvas");return s.style.display="block",s}function We(s={}){const e=s.canvas!==void 0?s.canvas:cu(),t=s.context!==void 0?s.context:null,n=s.depth!==void 0?s.depth:!0,i=s.stencil!==void 0?s.stencil:!0,r=s.antialias!==void 0?s.antialias:!1,o=s.premultipliedAlpha!==void 0?s.premultipliedAlpha:!0,A=s.preserveDrawingBuffer!==void 0?s.preserveDrawingBuffer:!1,a=s.powerPreference!==void 0?s.powerPreference:"default",c=s.failIfMajorPerformanceCaveat!==void 0?s.failIfMajorPerformanceCaveat:!1;let l;s.context!==void 0?l=t.getContextAttributes().alpha:l=s.alpha!==void 0?s.alpha:!1;let h=null,u=null;const f=[],g=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=B2,this.physicallyCorrectLights=!1,this.toneMapping=Xt,this.toneMappingExposure=1;const p=this;let d=!1,m=0,v=0,y=null,Q=-1,M=null;const I=new Je,T=new Je;let U=null,X=e.width,z=e.height,B=1,F=null,J=null;const D=new Je(0,0,X,z),P=new Je(0,0,X,z);let N=!1;const k=new Qr;let S=!1,W=!1,$=null;const ee=new we,te=new V,he=new w,Re={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ce(){return y===null?B:1}let j=t;function ke(C,G){for(let L=0;L<C.length;L++){const R=C[L],O=e.getContext(R,G);if(O!==null)return O}return null}try{const C={alpha:!0,depth:n,stencil:i,antialias:r,premultipliedAlpha:o,preserveDrawingBuffer:A,powerPreference:a,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${J1}`),e.addEventListener("webglcontextlost",b,!1),e.addEventListener("webglcontextrestored",ae,!1),j===null){const G=["webgl2","webgl","experimental-webgl"];if(p.isWebGL1Renderer===!0&&G.shift(),j=ke(G,C),j===null)throw ke(G)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}j.getShaderPrecisionFormat===void 0&&(j.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let Ie,be,re,Ue,K,Z,ne,fe,le,Qe,Me,me,nt,qe,_,E,Y,q,ce,ue,Be,H,Fe;function Se(){Ie=new _0(j),be=new E0(j,Ie,s),Ie.init(be),H=new su(j,Ie,be),re=new iu(j,Ie,be),Ue=new F0(j),K=new jh,Z=new ru(j,Ie,re,K,be,H,Ue),ne=new x0(p),fe=new Q0(p),le=new V3(j,be),Fe=new B0(j,Ie,le,be),Qe=new I0(j,le,Ue,Fe),Me=new U0(j,Qe,le,Ue),ce=new D0(j,be,Z),E=new y0(K),me=new Kh(p,ne,fe,Ie,be,Fe,E),nt=new au(p,K),qe=new Oh,_=new eu(Ie,be),q=new w0(p,ne,re,Me,l,o),Y=new RA(p,Me,be),ue=new M0(j,Ie,Ue,be),Be=new b0(j,Ie,Ue,be),Ue.programs=me.programs,p.capabilities=be,p.extensions=Ie,p.properties=K,p.renderLists=qe,p.shadowMap=Y,p.state=re,p.info=Ue}Se();const pe=new Au(p,j);this.xr=pe,this.getContext=function(){return j},this.getContextAttributes=function(){return j.getContextAttributes()},this.forceContextLoss=function(){const C=Ie.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=Ie.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return B},this.setPixelRatio=function(C){C!==void 0&&(B=C,this.setSize(X,z,!1))},this.getSize=function(C){return C.set(X,z)},this.setSize=function(C,G,L){if(pe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}X=C,z=G,e.width=Math.floor(C*B),e.height=Math.floor(G*B),L!==!1&&(e.style.width=C+"px",e.style.height=G+"px"),this.setViewport(0,0,C,G)},this.getDrawingBufferSize=function(C){return C.set(X*B,z*B).floor()},this.setDrawingBufferSize=function(C,G,L){X=C,z=G,B=L,e.width=Math.floor(C*L),e.height=Math.floor(G*L),this.setViewport(0,0,C,G)},this.getCurrentViewport=function(C){return C.copy(I)},this.getViewport=function(C){return C.copy(D)},this.setViewport=function(C,G,L,R){C.isVector4?D.set(C.x,C.y,C.z,C.w):D.set(C,G,L,R),re.viewport(I.copy(D).multiplyScalar(B).floor())},this.getScissor=function(C){return C.copy(P)},this.setScissor=function(C,G,L,R){C.isVector4?P.set(C.x,C.y,C.z,C.w):P.set(C,G,L,R),re.scissor(T.copy(P).multiplyScalar(B).floor())},this.getScissorTest=function(){return N},this.setScissorTest=function(C){re.setScissorTest(N=C)},this.setOpaqueSort=function(C){F=C},this.setTransparentSort=function(C){J=C},this.getClearColor=function(C){return C.copy(q.getClearColor())},this.setClearColor=function(){q.setClearColor.apply(q,arguments)},this.getClearAlpha=function(){return q.getClearAlpha()},this.setClearAlpha=function(){q.setClearAlpha.apply(q,arguments)},this.clear=function(C=!0,G=!0,L=!0){let R=0;C&&(R|=16384),G&&(R|=256),L&&(R|=1024),j.clear(R)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",b,!1),e.removeEventListener("webglcontextrestored",ae,!1),qe.dispose(),_.dispose(),K.dispose(),ne.dispose(),fe.dispose(),Me.dispose(),Fe.dispose(),me.dispose(),pe.dispose(),pe.removeEventListener("sessionstart",ve),pe.removeEventListener("sessionend",et),$&&($.dispose(),$=null),ze.stop()};function b(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),d=!0}function ae(){console.log("THREE.WebGLRenderer: Context Restored."),d=!1;const C=Ue.autoReset,G=Y.enabled,L=Y.autoUpdate,R=Y.needsUpdate,O=Y.type;Se(),Ue.autoReset=C,Y.enabled=G,Y.autoUpdate=L,Y.needsUpdate=R,Y.type=O}function oe(C){const G=C.target;G.removeEventListener("dispose",oe),Ee(G)}function Ee(C){de(C),K.remove(C)}function de(C){const G=K.get(C).programs;G!==void 0&&(G.forEach(function(L){me.releaseProgram(L)}),C.isShaderMaterial&&me.releaseShaderCache(C))}this.renderBufferDirect=function(C,G,L,R,O,xe){G===null&&(G=Re);const _e=O.isMesh&&O.matrixWorld.determinant()<0,De=wa(C,G,L,R,O);re.setMaterial(R,_e);let Te=L.index;const He=L.attributes.position;if(Te===null){if(He===void 0||He.count===0)return}else if(Te.count===0)return;let Le=1;R.wireframe===!0&&(Te=Qe.getWireframeAttribute(L),Le=2),Fe.setup(O,R,De,L,Te);let Pe,st=ue;Te!==null&&(Pe=le.get(Te),st=Be,st.setIndex(Pe));const N2=Te!==null?Te.count:He.count,$2=L.drawRange.start*Le,en=L.drawRange.count*Le,t2=xe!==null?xe.start*Le:0,Ye=xe!==null?xe.count*Le:1/0,tn=Math.max($2,t2),ct=Math.min(N2,$2+en,t2+Ye)-1,n2=Math.max(0,ct-tn+1);if(n2!==0){if(O.isMesh)R.wireframe===!0?(re.setLineWidth(R.wireframeLinewidth*Ce()),st.setMode(1)):st.setMode(4);else if(O.isLine){let M2=R.linewidth;M2===void 0&&(M2=1),re.setLineWidth(M2*Ce()),O.isLineSegments?st.setMode(1):O.isLineLoop?st.setMode(2):st.setMode(3)}else O.isPoints?st.setMode(0):O.isSprite&&st.setMode(4);if(O.isInstancedMesh)st.renderInstances(tn,n2,O.count);else if(L.isInstancedBufferGeometry){const M2=Math.min(L.instanceCount,L._maxInstanceCount);st.renderInstances(tn,n2,M2)}else st.render(tn,n2)}},this.compile=function(C,G){u=_.get(C),u.init(),g.push(u),C.traverseVisible(function(L){L.isLight&&L.layers.test(G.layers)&&(u.pushLight(L),L.castShadow&&u.pushShadow(L))}),u.setupLights(p.physicallyCorrectLights),C.traverse(function(L){const R=L.material;if(R)if(Array.isArray(R))for(let O=0;O<R.length;O++){const xe=R[O];Nr(xe,C,L)}else Nr(R,C,L)}),g.pop(),u=null};let ye=null;function se(C){ye&&ye(C)}function ve(){ze.stop()}function et(){ze.start()}const ze=new IA;ze.setAnimationLoop(se),typeof self!="undefined"&&ze.setContext(self),this.setAnimationLoop=function(C){ye=C,pe.setAnimationLoop(C),C===null?ze.stop():ze.start()},pe.addEventListener("sessionstart",ve),pe.addEventListener("sessionend",et),this.render=function(C,G){if(G!==void 0&&G.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(d===!0)return;C.autoUpdate===!0&&C.updateMatrixWorld(),G.parent===null&&G.updateMatrixWorld(),pe.enabled===!0&&pe.isPresenting===!0&&(pe.cameraAutoUpdate===!0&&pe.updateCamera(G),G=pe.getCamera()),C.isScene===!0&&C.onBeforeRender(p,C,G,y),u=_.get(C,g.length),u.init(),g.push(u),ee.multiplyMatrices(G.projectionMatrix,G.matrixWorldInverse),k.setFromProjectionMatrix(ee),W=this.localClippingEnabled,S=E.init(this.clippingPlanes,W,G),h=qe.get(C,f.length),h.init(),f.push(h),$t(C,G,0,p.sortObjects),h.finish(),p.sortObjects===!0&&h.sort(F,J),S===!0&&E.beginShadows();const L=u.state.shadowsArray;if(Y.render(L,C,G),S===!0&&E.endShadows(),this.info.autoReset===!0&&this.info.reset(),q.render(h,C),u.setupLights(p.physicallyCorrectLights),G.isArrayCamera){const R=G.cameras;for(let O=0,xe=R.length;O<xe;O++){const _e=R[O];e2(h,C,_e,_e.viewport)}}else e2(h,C,G);y!==null&&(Z.updateMultisampleRenderTarget(y),Z.updateRenderTargetMipmap(y)),C.isScene===!0&&C.onAfterRender(p,C,G),Fe.resetDefaultState(),Q=-1,M=null,g.pop(),g.length>0?u=g[g.length-1]:u=null,f.pop(),f.length>0?h=f[f.length-1]:h=null};function $t(C,G,L,R){if(C.visible===!1)return;if(C.layers.test(G.layers)){if(C.isGroup)L=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update(G);else if(C.isLight)u.pushLight(C),C.castShadow&&u.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||k.intersectsSprite(C)){R&&he.setFromMatrixPosition(C.matrixWorld).applyMatrix4(ee);const _e=Me.update(C),De=C.material;De.visible&&h.push(C,_e,De,L,he.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(C.isSkinnedMesh&&C.skeleton.frame!==Ue.render.frame&&(C.skeleton.update(),C.skeleton.frame=Ue.render.frame),!C.frustumCulled||k.intersectsObject(C))){R&&he.setFromMatrixPosition(C.matrixWorld).applyMatrix4(ee);const _e=Me.update(C),De=C.material;if(Array.isArray(De)){const Te=_e.groups;for(let He=0,Le=Te.length;He<Le;He++){const Pe=Te[He],st=De[Pe.materialIndex];st&&st.visible&&h.push(C,_e,st,L,he.z,Pe)}}else De.visible&&h.push(C,_e,De,L,he.z,null)}}const xe=C.children;for(let _e=0,De=xe.length;_e<De;_e++)$t(xe[_e],G,L,R)}function e2(C,G,L,R){const O=C.opaque,xe=C.transmissive,_e=C.transparent;u.setupLightsView(L),xe.length>0&&ga(O,G,L),R&&re.viewport(I.copy(R)),O.length>0&&Qi(O,G,L),xe.length>0&&Qi(xe,G,L),_e.length>0&&Qi(_e,G,L),re.buffers.depth.setTest(!0),re.buffers.depth.setMask(!0),re.buffers.color.setMask(!0),re.setPolygonOffset(!1)}function ga(C,G,L){const R=be.isWebGL2;$===null&&($=new je(1,1,{generateMipmaps:!0,type:H.convert(Fn)!==null?Fn:O2,minFilter:xr,samples:R&&r===!0?4:0})),p.getDrawingBufferSize(te),R?$.setSize(te.x,te.y):$.setSize(k1(te.x),k1(te.y));const O=p.getRenderTarget();p.setRenderTarget($),p.clear();const xe=p.toneMapping;p.toneMapping=Xt,Qi(C,G,L),p.toneMapping=xe,Z.updateMultisampleRenderTarget($),Z.updateRenderTargetMipmap($),p.setRenderTarget(O)}function Qi(C,G,L){const R=G.isScene===!0?G.overrideMaterial:null;for(let O=0,xe=C.length;O<xe;O++){const _e=C[O],De=_e.object,Te=_e.geometry,He=R===null?_e.material:R,Le=_e.group;De.layers.test(L.layers)&&ma(De,G,L,Te,He,Le)}}function ma(C,G,L,R,O,xe){C.onBeforeRender(p,G,L,R,O,xe),C.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),O.onBeforeRender(p,G,L,R,C,xe),O.transparent===!0&&O.side===At?(O.side=Zt,O.needsUpdate=!0,p.renderBufferDirect(L,G,R,O,C,xe),O.side=di,O.needsUpdate=!0,p.renderBufferDirect(L,G,R,O,C,xe),O.side=At):p.renderBufferDirect(L,G,R,O,C,xe),C.onAfterRender(p,G,L,R,O,xe)}function Nr(C,G,L){G.isScene!==!0&&(G=Re);const R=K.get(C),O=u.state.lights,xe=u.state.shadowsArray,_e=O.state.version,De=me.getParameters(C,O.state,xe,G,L),Te=me.getProgramCacheKey(De);let He=R.programs;R.environment=C.isMeshStandardMaterial?G.environment:null,R.fog=G.fog,R.envMap=(C.isMeshStandardMaterial?fe:ne).get(C.envMap||R.environment),He===void 0&&(C.addEventListener("dispose",oe),He=new Map,R.programs=He);let Le=He.get(Te);if(Le!==void 0){if(R.currentProgram===Le&&R.lightsStateVersion===_e)return Bs(C,De),Le}else De.uniforms=me.getUniforms(C),C.onBuild(L,De,p),C.onBeforeCompile(De,p),Le=me.acquireProgram(De,Te),He.set(Te,Le),R.uniforms=De.uniforms;const Pe=R.uniforms;(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(Pe.clippingPlanes=E.uniform),Bs(C,De),R.needsLights=Ma(C),R.lightsStateVersion=_e,R.needsLights&&(Pe.ambientLightColor.value=O.state.ambient,Pe.lightProbe.value=O.state.probe,Pe.directionalLights.value=O.state.directional,Pe.directionalLightShadows.value=O.state.directionalShadow,Pe.spotLights.value=O.state.spot,Pe.spotLightShadows.value=O.state.spotShadow,Pe.rectAreaLights.value=O.state.rectArea,Pe.ltc_1.value=O.state.rectAreaLTC1,Pe.ltc_2.value=O.state.rectAreaLTC2,Pe.pointLights.value=O.state.point,Pe.pointLightShadows.value=O.state.pointShadow,Pe.hemisphereLights.value=O.state.hemi,Pe.directionalShadowMap.value=O.state.directionalShadowMap,Pe.directionalShadowMatrix.value=O.state.directionalShadowMatrix,Pe.spotShadowMap.value=O.state.spotShadowMap,Pe.spotShadowMatrix.value=O.state.spotShadowMatrix,Pe.pointShadowMap.value=O.state.pointShadowMap,Pe.pointShadowMatrix.value=O.state.pointShadowMatrix);const st=Le.getUniforms(),N2=T2.seqWithValue(st.seq,Pe);return R.currentProgram=Le,R.uniformsList=N2,Le}function Bs(C,G){const L=K.get(C);L.outputEncoding=G.outputEncoding,L.instancing=G.instancing,L.skinning=G.skinning,L.morphTargets=G.morphTargets,L.morphNormals=G.morphNormals,L.morphColors=G.morphColors,L.morphTargetsCount=G.morphTargetsCount,L.numClippingPlanes=G.numClippingPlanes,L.numIntersection=G.numClipIntersection,L.vertexAlphas=G.vertexAlphas,L.vertexTangents=G.vertexTangents,L.toneMapping=G.toneMapping}function wa(C,G,L,R,O){G.isScene!==!0&&(G=Re),Z.resetTextureUnits();const xe=G.fog,_e=R.isMeshStandardMaterial?G.environment:null,De=y===null?p.outputEncoding:y.isXRRenderTarget===!0?y.texture.encoding:B2,Te=(R.isMeshStandardMaterial?fe:ne).get(R.envMap||_e),He=R.vertexColors===!0&&!!L.attributes.color&&L.attributes.color.itemSize===4,Le=!!R.normalMap&&!!L.attributes.tangent,Pe=!!L.morphAttributes.position,st=!!L.morphAttributes.normal,N2=!!L.morphAttributes.color,$2=R.toneMapped?p.toneMapping:Xt,en=L.morphAttributes.position||L.morphAttributes.normal||L.morphAttributes.color,t2=en!==void 0?en.length:0,Ye=K.get(R),tn=u.state.lights;if(S===!0&&(W===!0||C!==M)){const Yt=C===M&&R.id===Q;E.setState(R,C,Yt)}let ct=!1;R.version===Ye.__version?(Ye.needsLights&&Ye.lightsStateVersion!==tn.state.version||Ye.outputEncoding!==De||O.isInstancedMesh&&Ye.instancing===!1||!O.isInstancedMesh&&Ye.instancing===!0||O.isSkinnedMesh&&Ye.skinning===!1||!O.isSkinnedMesh&&Ye.skinning===!0||Ye.envMap!==Te||R.fog&&Ye.fog!==xe||Ye.numClippingPlanes!==void 0&&(Ye.numClippingPlanes!==E.numPlanes||Ye.numIntersection!==E.numIntersection)||Ye.vertexAlphas!==He||Ye.vertexTangents!==Le||Ye.morphTargets!==Pe||Ye.morphNormals!==st||Ye.morphColors!==N2||Ye.toneMapping!==$2||be.isWebGL2===!0&&Ye.morphTargetsCount!==t2)&&(ct=!0):(ct=!0,Ye.__version=R.version);let n2=Ye.currentProgram;ct===!0&&(n2=Nr(R,G,O));let M2=!1,Zn=!1,zr=!1;const xt=n2.getUniforms(),Xn=Ye.uniforms;if(re.useProgram(n2.program)&&(M2=!0,Zn=!0,zr=!0),R.id!==Q&&(Q=R.id,Zn=!0),M2||M!==C){if(xt.setValue(j,"projectionMatrix",C.projectionMatrix),be.logarithmicDepthBuffer&&xt.setValue(j,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),M!==C&&(M=C,Zn=!0,zr=!0),R.isShaderMaterial||R.isMeshPhongMaterial||R.isMeshToonMaterial||R.isMeshStandardMaterial||R.envMap){const Yt=xt.map.cameraPosition;Yt!==void 0&&Yt.setValue(j,he.setFromMatrixPosition(C.matrixWorld))}(R.isMeshPhongMaterial||R.isMeshToonMaterial||R.isMeshLambertMaterial||R.isMeshBasicMaterial||R.isMeshStandardMaterial||R.isShaderMaterial)&&xt.setValue(j,"isOrthographic",C.isOrthographicCamera===!0),(R.isMeshPhongMaterial||R.isMeshToonMaterial||R.isMeshLambertMaterial||R.isMeshBasicMaterial||R.isMeshStandardMaterial||R.isShaderMaterial||R.isShadowMaterial||O.isSkinnedMesh)&&xt.setValue(j,"viewMatrix",C.matrixWorldInverse)}if(O.isSkinnedMesh){xt.setOptional(j,O,"bindMatrix"),xt.setOptional(j,O,"bindMatrixInverse");const Yt=O.skeleton;Yt&&(be.floatVertexTextures?(Yt.boneTexture===null&&Yt.computeBoneTexture(),xt.setValue(j,"boneTexture",Yt.boneTexture,Z),xt.setValue(j,"boneTextureSize",Yt.boneTextureSize)):xt.setOptional(j,Yt,"boneMatrices"))}const Lr=L.morphAttributes;return(Lr.position!==void 0||Lr.normal!==void 0||Lr.color!==void 0&&be.isWebGL2===!0)&&ce.update(O,L,R,n2),(Zn||Ye.receiveShadow!==O.receiveShadow)&&(Ye.receiveShadow=O.receiveShadow,xt.setValue(j,"receiveShadow",O.receiveShadow)),Zn&&(xt.setValue(j,"toneMappingExposure",p.toneMappingExposure),Ye.needsLights&&Ba(Xn,zr),xe&&R.fog&&nt.refreshFogUniforms(Xn,xe),nt.refreshMaterialUniforms(Xn,R,B,z,$),T2.upload(j,Ye.uniformsList,Xn,Z)),R.isShaderMaterial&&R.uniformsNeedUpdate===!0&&(T2.upload(j,Ye.uniformsList,Xn,Z),R.uniformsNeedUpdate=!1),R.isSpriteMaterial&&xt.setValue(j,"center",O.center),xt.setValue(j,"modelViewMatrix",O.modelViewMatrix),xt.setValue(j,"normalMatrix",O.normalMatrix),xt.setValue(j,"modelMatrix",O.matrixWorld),n2}function Ba(C,G){C.ambientLightColor.needsUpdate=G,C.lightProbe.needsUpdate=G,C.directionalLights.needsUpdate=G,C.directionalLightShadows.needsUpdate=G,C.pointLights.needsUpdate=G,C.pointLightShadows.needsUpdate=G,C.spotLights.needsUpdate=G,C.spotLightShadows.needsUpdate=G,C.rectAreaLights.needsUpdate=G,C.hemisphereLights.needsUpdate=G}function Ma(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return m},this.getActiveMipmapLevel=function(){return v},this.getRenderTarget=function(){return y},this.setRenderTargetTextures=function(C,G,L){K.get(C.texture).__webglTexture=G,K.get(C.depthTexture).__webglTexture=L;const R=K.get(C);R.__hasExternalTextures=!0,R.__hasExternalTextures&&(R.__autoAllocateDepthBuffer=L===void 0,R.__autoAllocateDepthBuffer||Ie.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),R.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(C,G){const L=K.get(C);L.__webglFramebuffer=G,L.__useDefaultFramebuffer=G===void 0},this.setRenderTarget=function(C,G=0,L=0){y=C,m=G,v=L;let R=!0;if(C){const Te=K.get(C);Te.__useDefaultFramebuffer!==void 0?(re.bindFramebuffer(36160,null),R=!1):Te.__webglFramebuffer===void 0?Z.setupRenderTarget(C):Te.__hasExternalTextures&&Z.rebindTextures(C,K.get(C.texture).__webglTexture,K.get(C.depthTexture).__webglTexture)}let O=null,xe=!1,_e=!1;if(C){const Te=C.texture;(Te.isData3DTexture||Te.isDataArrayTexture)&&(_e=!0);const He=K.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(O=He[G],xe=!0):be.isWebGL2&&C.samples>0&&Z.useMultisampledRTT(C)===!1?O=K.get(C).__webglMultisampledFramebuffer:O=He,I.copy(C.viewport),T.copy(C.scissor),U=C.scissorTest}else I.copy(D).multiplyScalar(B).floor(),T.copy(P).multiplyScalar(B).floor(),U=N;if(re.bindFramebuffer(36160,O)&&be.drawBuffers&&R&&re.drawBuffers(C,O),re.viewport(I),re.scissor(T),re.setScissorTest(U),xe){const Te=K.get(C.texture);j.framebufferTexture2D(36160,36064,34069+G,Te.__webglTexture,L)}else if(_e){const Te=K.get(C.texture),He=G||0;j.framebufferTextureLayer(36160,36064,Te.__webglTexture,L||0,He)}Q=-1},this.readRenderTargetPixels=function(C,G,L,R,O,xe,_e){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let De=K.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&_e!==void 0&&(De=De[_e]),De){re.bindFramebuffer(36160,De);try{const Te=C.texture,He=Te.format,Le=Te.type;if(He!==Jt&&H.convert(He)!==j.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Pe=Le===Fn&&(Ie.has("EXT_color_buffer_half_float")||be.isWebGL2&&Ie.has("EXT_color_buffer_float"));if(Le!==O2&&H.convert(Le)!==j.getParameter(35738)&&!(Le===V2&&(be.isWebGL2||Ie.has("OES_texture_float")||Ie.has("WEBGL_color_buffer_float")))&&!Pe){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}G>=0&&G<=C.width-R&&L>=0&&L<=C.height-O&&j.readPixels(G,L,R,O,H.convert(He),H.convert(Le),xe)}finally{const Te=y!==null?K.get(y).__webglFramebuffer:null;re.bindFramebuffer(36160,Te)}}},this.copyFramebufferToTexture=function(C,G,L=0){if(G.isFramebufferTexture!==!0){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}const R=Math.pow(2,-L),O=Math.floor(G.image.width*R),xe=Math.floor(G.image.height*R);Z.setTexture2D(G,0),j.copyTexSubImage2D(3553,L,0,0,C.x,C.y,O,xe),re.unbindTexture()},this.copyTextureToTexture=function(C,G,L,R=0){const O=G.image.width,xe=G.image.height,_e=H.convert(L.format),De=H.convert(L.type);Z.setTexture2D(L,0),j.pixelStorei(37440,L.flipY),j.pixelStorei(37441,L.premultiplyAlpha),j.pixelStorei(3317,L.unpackAlignment),G.isDataTexture?j.texSubImage2D(3553,R,C.x,C.y,O,xe,_e,De,G.image.data):G.isCompressedTexture?j.compressedTexSubImage2D(3553,R,C.x,C.y,G.mipmaps[0].width,G.mipmaps[0].height,_e,G.mipmaps[0].data):j.texSubImage2D(3553,R,C.x,C.y,_e,De,G.image),R===0&&L.generateMipmaps&&j.generateMipmap(3553),re.unbindTexture()},this.copyTextureToTexture3D=function(C,G,L,R,O=0){if(p.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const xe=C.max.x-C.min.x+1,_e=C.max.y-C.min.y+1,De=C.max.z-C.min.z+1,Te=H.convert(R.format),He=H.convert(R.type);let Le;if(R.isData3DTexture)Z.setTexture3D(R,0),Le=32879;else if(R.isDataArrayTexture)Z.setTexture2DArray(R,0),Le=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}j.pixelStorei(37440,R.flipY),j.pixelStorei(37441,R.premultiplyAlpha),j.pixelStorei(3317,R.unpackAlignment);const Pe=j.getParameter(3314),st=j.getParameter(32878),N2=j.getParameter(3316),$2=j.getParameter(3315),en=j.getParameter(32877),t2=L.isCompressedTexture?L.mipmaps[0]:L.image;j.pixelStorei(3314,t2.width),j.pixelStorei(32878,t2.height),j.pixelStorei(3316,C.min.x),j.pixelStorei(3315,C.min.y),j.pixelStorei(32877,C.min.z),L.isDataTexture||L.isData3DTexture?j.texSubImage3D(Le,O,G.x,G.y,G.z,xe,_e,De,Te,He,t2.data):L.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),j.compressedTexSubImage3D(Le,O,G.x,G.y,G.z,xe,_e,De,Te,t2.data)):j.texSubImage3D(Le,O,G.x,G.y,G.z,xe,_e,De,Te,He,t2),j.pixelStorei(3314,Pe),j.pixelStorei(32878,st),j.pixelStorei(3316,N2),j.pixelStorei(3315,$2),j.pixelStorei(32877,en),O===0&&R.generateMipmaps&&j.generateMipmap(Le),re.unbindTexture()},this.initTexture=function(C){Z.setTexture2D(C,0),re.unbindTexture()},this.resetState=function(){m=0,v=0,y=null,re.reset(),Fe.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}We.prototype.isWebGLRenderer=!0;class lu extends We{}lu.prototype.isWebGL1Renderer=!0;class It extends Ne{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}It.prototype.isScene=!0;class Ei{constructor(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=pi,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=A2()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=A2()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=A2()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}Ei.prototype.isInterleavedBuffer=!0;const bt=new w;class mi{constructor(e,t,n,i=!1){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)bt.fromBufferAttribute(this,t),bt.applyMatrix4(e),this.setXYZ(t,bt.x,bt.y,bt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)bt.fromBufferAttribute(this,t),bt.applyNormalMatrix(e),this.setXYZ(t,bt.x,bt.y,bt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)bt.fromBufferAttribute(this,t),bt.transformDirection(e),this.setXYZ(t,bt.x,bt.y,bt.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new ot(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new mi(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}mi.prototype.isInterleavedBufferAttribute=!0;class is extends dt{constructor(e){super(),this.type="SpriteMaterial",this.color=new ie(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}is.prototype.isSpriteMaterial=!0;let mn;const ni=new w,wn=new w,Bn=new w,Mn=new V,ii=new V,LA=new we,Wi=new w,ri=new w,Oi=new w,So=new V,E1=new V,Do=new V;class hu extends Ne{constructor(e){if(super(),this.type="Sprite",mn===void 0){mn=new Xe;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Ei(t,5);mn.setIndex([0,1,2,0,2,3]),mn.setAttribute("position",new mi(n,3,0,!1)),mn.setAttribute("uv",new mi(n,2,3,!1))}this.geometry=mn,this.material=e!==void 0?e:new is,this.center=new V(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),wn.setFromMatrixScale(this.matrixWorld),LA.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Bn.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&wn.multiplyScalar(-Bn.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const o=this.center;Ji(Wi.set(-.5,-.5,0),Bn,o,wn,i,r),Ji(ri.set(.5,-.5,0),Bn,o,wn,i,r),Ji(Oi.set(.5,.5,0),Bn,o,wn,i,r),So.set(0,0),E1.set(1,0),Do.set(1,1);let A=e.ray.intersectTriangle(Wi,ri,Oi,!1,ni);if(A===null&&(Ji(ri.set(-.5,.5,0),Bn,o,wn,i,r),E1.set(0,1),A=e.ray.intersectTriangle(Wi,Oi,ri,!1,ni),A===null))return;const a=e.ray.origin.distanceTo(ni);a<e.near||a>e.far||t.push({distance:a,point:ni.clone(),uv:ht.getUV(ni,Wi,ri,Oi,So,E1,Do,new V),face:null,object:this})}copy(e){return super.copy(e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}hu.prototype.isSprite=!0;function Ji(s,e,t,n,i,r){Mn.subVectors(s,t).addScalar(.5).multiply(n),i!==void 0?(ii.x=r*Mn.x-i*Mn.y,ii.y=i*Mn.x+r*Mn.y):ii.copy(Mn),s.copy(e),s.x+=ii.x,s.y+=ii.y,s.applyMatrix4(LA)}const Uo=new w,Go=new Je,Ro=new Je,uu=new w,No=new we;class PA extends ge{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new we,this.bindMatrixInverse=new we}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Je,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;Go.fromBufferAttribute(i.attributes.skinIndex,e),Ro.fromBufferAttribute(i.attributes.skinWeight,e),Uo.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const o=Ro.getComponent(r);if(o!==0){const A=Go.getComponent(r);No.multiplyMatrices(n.bones[A].matrixWorld,n.boneInverses[A]),t.addScaledVector(uu.copy(Uo).applyMatrix4(No),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}PA.prototype.isSkinnedMesh=!0;class du extends Ne{constructor(){super(),this.type="Bone"}}du.prototype.isBone=!0;class fu extends at{constructor(e=null,t=1,n=1,i,r,o,A,a,c=gt,l=gt,h,u){super(null,o,A,a,c,l,i,r,h,u),this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}fu.prototype.isDataTexture=!0;class H1 extends ot{constructor(e,t,n,i=1){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}H1.prototype.isInstancedBufferAttribute=!0;const zo=new we,Lo=new we,Zi=[],si=new ge;class pu extends ge{constructor(e,t,n){super(e,t),this.instanceMatrix=new H1(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(si.geometry=this.geometry,si.material=this.material,si.material!==void 0)for(let r=0;r<i;r++){this.getMatrixAt(r,zo),Lo.multiplyMatrices(n,zo),si.matrixWorld=Lo,si.raycast(e,Zi);for(let o=0,A=Zi.length;o<A;o++){const a=Zi[o];a.instanceId=r,a.object=this,t.push(a)}Zi.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new H1(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}pu.prototype.isInstancedMesh=!0;class Kn extends dt{constructor(e){super(),this.type="LineBasicMaterial",this.color=new ie(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}Kn.prototype.isLineBasicMaterial=!0;const Po=new w,ko=new w,Yo=new we,y1=new Hn,Xi=new Yn;class rs extends Ne{constructor(e=new Xe,t=new Kn){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)Po.fromBufferAttribute(t,i-1),ko.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Po.distanceTo(ko);e.setAttribute("lineDistance",new $e(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Xi.copy(n.boundingSphere),Xi.applyMatrix4(i),Xi.radius+=r,e.ray.intersectsSphere(Xi)===!1)return;Yo.copy(i).invert(),y1.copy(e.ray).applyMatrix4(Yo);const A=r/((this.scale.x+this.scale.y+this.scale.z)/3),a=A*A,c=new w,l=new w,h=new w,u=new w,f=this.isLineSegments?2:1;if(n.isBufferGeometry){const g=n.index,d=n.attributes.position;if(g!==null){const m=Math.max(0,o.start),v=Math.min(g.count,o.start+o.count);for(let y=m,Q=v-1;y<Q;y+=f){const M=g.getX(y),I=g.getX(y+1);if(c.fromBufferAttribute(d,M),l.fromBufferAttribute(d,I),y1.distanceSqToSegment(c,l,u,h)>a)continue;u.applyMatrix4(this.matrixWorld);const U=e.ray.origin.distanceTo(u);U<e.near||U>e.far||t.push({distance:U,point:h.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else{const m=Math.max(0,o.start),v=Math.min(d.count,o.start+o.count);for(let y=m,Q=v-1;y<Q;y+=f){if(c.fromBufferAttribute(d,y),l.fromBufferAttribute(d,y+1),y1.distanceSqToSegment(c,l,u,h)>a)continue;u.applyMatrix4(this.matrixWorld);const I=e.ray.origin.distanceTo(u);I<e.near||I>e.far||t.push({distance:I,point:h.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const A=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[A]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}rs.prototype.isLine=!0;const Ho=new w,Vo=new w;class ss extends rs{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)Ho.fromBufferAttribute(t,i),Vo.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Ho.distanceTo(Vo);e.setAttribute("lineDistance",new $e(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}ss.prototype.isLineSegments=!0;class gu extends rs{constructor(e,t){super(e,t),this.type="LineLoop"}}gu.prototype.isLineLoop=!0;class os extends dt{constructor(e){super(),this.type="PointsMaterial",this.color=new ie(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}os.prototype.isPointsMaterial=!0;const Ko=new we,V1=new Hn,qi=new Yn,$i=new w;class mu extends Ne{constructor(e=new Xe,t=new os){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),qi.copy(n.boundingSphere),qi.applyMatrix4(i),qi.radius+=r,e.ray.intersectsSphere(qi)===!1)return;Ko.copy(i).invert(),V1.copy(e.ray).applyMatrix4(Ko);const A=r/((this.scale.x+this.scale.y+this.scale.z)/3),a=A*A;if(n.isBufferGeometry){const c=n.index,h=n.attributes.position;if(c!==null){const u=Math.max(0,o.start),f=Math.min(c.count,o.start+o.count);for(let g=u,p=f;g<p;g++){const d=c.getX(g);$i.fromBufferAttribute(h,d),jo($i,d,a,i,e,t,this)}}else{const u=Math.max(0,o.start),f=Math.min(h.count,o.start+o.count);for(let g=u,p=f;g<p;g++)$i.fromBufferAttribute(h,g),jo($i,g,a,i,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const A=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[A]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}mu.prototype.isPoints=!0;function jo(s,e,t,n,i,r,o){const A=V1.distanceSqToPoint(s);if(A<t){const a=new w;V1.closestPointToPoint(s,a),a.applyMatrix4(n);const c=i.ray.origin.distanceTo(a);if(c<i.near||c>i.far)return;r.push({distance:c,distanceToRay:Math.sqrt(A),point:a,index:e,face:null,object:o})}}class wu extends at{constructor(e,t,n,i,r,o,A,a,c){super(e,t,n,i,r,o,A,a,c),this.minFilter=o!==void 0?o:St,this.magFilter=r!==void 0?r:St,this.generateMipmaps=!1;const l=this;function h(){l.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}wu.prototype.isVideoTexture=!0;class Bu extends at{constructor(e,t,n){super({width:e,height:t}),this.format=n,this.magFilter=gt,this.minFilter=gt,this.generateMipmaps=!1,this.needsUpdate=!0}}Bu.prototype.isFramebufferTexture=!0;class Mu extends at{constructor(e,t,n,i,r,o,A,a,c,l,h,u){super(null,o,A,a,c,l,i,r,h,u),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}Mu.prototype.isCompressedTexture=!0;class jn extends at{constructor(e,t,n,i,r,o,A,a,c){super(e,t,n,i,r,o,A,a,c),this.needsUpdate=!0}}jn.prototype.isCanvasTexture=!0;class kt{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const r=n.length;let o;t?o=t:o=e*n[r-1];let A=0,a=r-1,c;for(;A<=a;)if(i=Math.floor(A+(a-A)/2),c=n[i]-o,c<0)A=i+1;else if(c>0)a=i-1;else{a=i;break}if(i=a,n[i]===o)return i/(r-1);const l=n[i],u=n[i+1]-l,f=(o-l)/u;return(i+f)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const o=this.getPoint(i),A=this.getPoint(r),a=t||(o.isVector2?new V:new w);return a.copy(A).sub(o).normalize(),a}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new w,i=[],r=[],o=[],A=new w,a=new we;for(let f=0;f<=e;f++){const g=f/e;i[f]=this.getTangentAt(g,new w)}r[0]=new w,o[0]=new w;let c=Number.MAX_VALUE;const l=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);l<=c&&(c=l,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),u<=c&&n.set(0,0,1),A.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],A),o[0].crossVectors(i[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),o[f]=o[f-1].clone(),A.crossVectors(i[f-1],i[f]),A.length()>Number.EPSILON){A.normalize();const g=Math.acos(vt(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(a.makeRotationAxis(A,g))}o[f].crossVectors(i[f],r[f])}if(t===!0){let f=Math.acos(vt(r[0].dot(r[e]),-1,1));f/=e,i[0].dot(A.crossVectors(r[0],r[e]))>0&&(f=-f);for(let g=1;g<=e;g++)r[g].applyMatrix4(a.makeRotationAxis(i[g],f*g)),o[g].crossVectors(i[g],r[g])}return{tangents:i,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Ir extends kt{constructor(e=0,t=0,n=1,i=1,r=0,o=Math.PI*2,A=!1,a=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=A,this.aRotation=a}getPoint(e,t){const n=t||new V,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(o?r=0:r=i),this.aClockwise===!0&&!o&&(r===i?r=-i:r=r-i);const A=this.aStartAngle+e*r;let a=this.aX+this.xRadius*Math.cos(A),c=this.aY+this.yRadius*Math.sin(A);if(this.aRotation!==0){const l=Math.cos(this.aRotation),h=Math.sin(this.aRotation),u=a-this.aX,f=c-this.aY;a=u*l-f*h+this.aX,c=u*h+f*l+this.aY}return n.set(a,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}Ir.prototype.isEllipseCurve=!0;class kA extends Ir{constructor(e,t,n,i,r,o){super(e,t,n,n,i,r,o),this.type="ArcCurve"}}kA.prototype.isArcCurve=!0;function As(){let s=0,e=0,t=0,n=0;function i(r,o,A,a){s=r,e=A,t=-3*r+3*o-2*A-a,n=2*r-2*o+A+a}return{initCatmullRom:function(r,o,A,a,c){i(o,A,c*(A-r),c*(a-o))},initNonuniformCatmullRom:function(r,o,A,a,c,l,h){let u=(o-r)/c-(A-r)/(c+l)+(A-o)/l,f=(A-o)/l-(a-o)/(l+h)+(a-A)/h;u*=l,f*=l,i(o,A,u,f)},calc:function(r){const o=r*r,A=o*r;return s+e*r+t*o+n*A}}}const er=new w,x1=new As,C1=new As,v1=new As;class YA extends kt{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new w){const n=t,i=this.points,r=i.length,o=(r-(this.closed?0:1))*e;let A=Math.floor(o),a=o-A;this.closed?A+=A>0?0:(Math.floor(Math.abs(A)/r)+1)*r:a===0&&A===r-1&&(A=r-2,a=1);let c,l;this.closed||A>0?c=i[(A-1)%r]:(er.subVectors(i[0],i[1]).add(i[0]),c=er);const h=i[A%r],u=i[(A+1)%r];if(this.closed||A+2<r?l=i[(A+2)%r]:(er.subVectors(i[r-1],i[r-2]).add(i[r-1]),l=er),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let g=Math.pow(c.distanceToSquared(h),f),p=Math.pow(h.distanceToSquared(u),f),d=Math.pow(u.distanceToSquared(l),f);p<1e-4&&(p=1),g<1e-4&&(g=p),d<1e-4&&(d=p),x1.initNonuniformCatmullRom(c.x,h.x,u.x,l.x,g,p,d),C1.initNonuniformCatmullRom(c.y,h.y,u.y,l.y,g,p,d),v1.initNonuniformCatmullRom(c.z,h.z,u.z,l.z,g,p,d)}else this.curveType==="catmullrom"&&(x1.initCatmullRom(c.x,h.x,u.x,l.x,this.tension),C1.initCatmullRom(c.y,h.y,u.y,l.y,this.tension),v1.initCatmullRom(c.z,h.z,u.z,l.z,this.tension));return n.set(x1.calc(a),C1.calc(a),v1.calc(a)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new w().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}YA.prototype.isCatmullRomCurve3=!0;function Wo(s,e,t,n,i){const r=(n-e)*.5,o=(i-t)*.5,A=s*s,a=s*A;return(2*t-2*n+r+o)*a+(-3*t+3*n-2*r-o)*A+r*s+t}function Eu(s,e){const t=1-s;return t*t*e}function yu(s,e){return 2*(1-s)*s*e}function xu(s,e){return s*s*e}function li(s,e,t,n){return Eu(s,e)+yu(s,t)+xu(s,n)}function Cu(s,e){const t=1-s;return t*t*t*e}function vu(s,e){const t=1-s;return 3*t*t*s*e}function Qu(s,e){return 3*(1-s)*s*s*e}function _u(s,e){return s*s*s*e}function hi(s,e,t,n,i){return Cu(s,e)+vu(s,t)+Qu(s,n)+_u(s,i)}class as extends kt{constructor(e=new V,t=new V,n=new V,i=new V){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new V){const n=t,i=this.v0,r=this.v1,o=this.v2,A=this.v3;return n.set(hi(e,i.x,r.x,o.x,A.x),hi(e,i.y,r.y,o.y,A.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}as.prototype.isCubicBezierCurve=!0;class HA extends kt{constructor(e=new w,t=new w,n=new w,i=new w){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new w){const n=t,i=this.v0,r=this.v1,o=this.v2,A=this.v3;return n.set(hi(e,i.x,r.x,o.x,A.x),hi(e,i.y,r.y,o.y,A.y),hi(e,i.z,r.z,o.z,A.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}HA.prototype.isCubicBezierCurve3=!0;class br extends kt{constructor(e=new V,t=new V){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new V){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new V;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}br.prototype.isLineCurve=!0;class Iu extends kt{constructor(e=new w,t=new w){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new w){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class cs extends kt{constructor(e=new V,t=new V,n=new V){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new V){const n=t,i=this.v0,r=this.v1,o=this.v2;return n.set(li(e,i.x,r.x,o.x),li(e,i.y,r.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}cs.prototype.isQuadraticBezierCurve=!0;class VA extends kt{constructor(e=new w,t=new w,n=new w){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new w){const n=t,i=this.v0,r=this.v1,o=this.v2;return n.set(li(e,i.x,r.x,o.x),li(e,i.y,r.y,o.y),li(e,i.z,r.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}VA.prototype.isQuadraticBezierCurve3=!0;class ls extends kt{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new V){const n=t,i=this.points,r=(i.length-1)*e,o=Math.floor(r),A=r-o,a=i[o===0?o:o-1],c=i[o],l=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set(Wo(A,a.x,c.x,l.x,h.x),Wo(A,a.y,c.y,l.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new V().fromArray(i))}return this}}ls.prototype.isSplineCurve=!0;var KA=Object.freeze({__proto__:null,ArcCurve:kA,CatmullRomCurve3:YA,CubicBezierCurve:as,CubicBezierCurve3:HA,EllipseCurve:Ir,LineCurve:br,LineCurve3:Iu,QuadraticBezierCurve:cs,QuadraticBezierCurve3:VA,SplineCurve:ls});class bu extends kt{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new br(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const o=i[r]-n,A=this.curves[r],a=A.getLength(),c=a===0?0:1-o/a;return A.getPointAt(c,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],A=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,a=o.getPoints(A);for(let c=0;c<a.length;c++){const l=a[c];n&&n.equals(l)||(t.push(l),n=l)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new KA[i.type]().fromJSON(i))}return this}}class K1 extends bu{constructor(e){super(),this.type="Path",this.currentPoint=new V,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new br(this.currentPoint.clone(),new V(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new cs(this.currentPoint.clone(),new V(e,t),new V(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,o){const A=new as(this.currentPoint.clone(),new V(e,t),new V(n,i),new V(r,o));return this.curves.push(A),this.currentPoint.set(r,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new ls(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,o){const A=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(e+A,t+a,n,i,r,o),this}absarc(e,t,n,i,r,o){return this.absellipse(e,t,n,n,i,r,o),this}ellipse(e,t,n,i,r,o,A,a){const c=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(e+c,t+l,n,i,r,o,A,a),this}absellipse(e,t,n,i,r,o,A,a){const c=new Ir(e,t,n,i,r,o,A,a);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const l=c.getPoint(1);return this.currentPoint.copy(l),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class J2 extends Xe{constructor(e=1,t=1,n=1,i=8,r=1,o=!1,A=0,a=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:A,thetaLength:a};const c=this;i=Math.floor(i),r=Math.floor(r);const l=[],h=[],u=[],f=[];let g=0;const p=[],d=n/2;let m=0;v(),o===!1&&(e>0&&y(!0),t>0&&y(!1)),this.setIndex(l),this.setAttribute("position",new $e(h,3)),this.setAttribute("normal",new $e(u,3)),this.setAttribute("uv",new $e(f,2));function v(){const Q=new w,M=new w;let I=0;const T=(t-e)/n;for(let U=0;U<=r;U++){const X=[],z=U/r,B=z*(t-e)+e;for(let F=0;F<=i;F++){const J=F/i,D=J*a+A,P=Math.sin(D),N=Math.cos(D);M.x=B*P,M.y=-z*n+d,M.z=B*N,h.push(M.x,M.y,M.z),Q.set(P,T,N).normalize(),u.push(Q.x,Q.y,Q.z),f.push(J,1-z),X.push(g++)}p.push(X)}for(let U=0;U<i;U++)for(let X=0;X<r;X++){const z=p[X][U],B=p[X+1][U],F=p[X+1][U+1],J=p[X][U+1];l.push(z,B,J),l.push(B,F,J),I+=6}c.addGroup(m,I,0),m+=I}function y(Q){const M=g,I=new V,T=new w;let U=0;const X=Q===!0?e:t,z=Q===!0?1:-1;for(let F=1;F<=i;F++)h.push(0,d*z,0),u.push(0,z,0),f.push(.5,.5),g++;const B=g;for(let F=0;F<=i;F++){const D=F/i*a+A,P=Math.cos(D),N=Math.sin(D);T.x=X*N,T.y=d*z,T.z=X*P,h.push(T.x,T.y,T.z),u.push(0,z,0),I.x=P*.5+.5,I.y=N*.5*z+.5,f.push(I.x,I.y),g++}for(let F=0;F<i;F++){const J=M+F,D=B+F;Q===!0?l.push(D,D+1,J):l.push(D+1,D,J),U+=3}c.addGroup(m,U,Q===!0?1:2),m+=U}}static fromJSON(e){return new J2(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Fr extends J2{constructor(e=1,t=1,n=8,i=1,r=!1,o=0,A=Math.PI*2){super(0,e,t,n,i,r,o,A),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:o,thetaLength:A}}static fromJSON(e){return new Fr(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}new w;new w;new w;new ht;class yi extends K1{constructor(e){super(e),this.uuid=A2(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new K1().fromJSON(i))}return this}}const Fu={triangulate:function(s,e,t=2){const n=e&&e.length,i=n?e[0]*t:s.length;let r=jA(s,0,i,t,!0);const o=[];if(!r||r.next===r.prev)return o;let A,a,c,l,h,u,f;if(n&&(r=Gu(s,e,r,t)),s.length>80*t){A=c=s[0],a=l=s[1];for(let g=t;g<i;g+=t)h=s[g],u=s[g+1],h<A&&(A=h),u<a&&(a=u),h>c&&(c=h),u>l&&(l=u);f=Math.max(c-A,l-a),f=f!==0?1/f:0}return wi(r,o,t,A,a,f),o}};function jA(s,e,t,n,i){let r,o;if(i===ju(s,e,t,n)>0)for(r=e;r<t;r+=n)o=Oo(r,s[r],s[r+1],o);else for(r=t-n;r>=e;r-=n)o=Oo(r,s[r],s[r+1],o);return o&&Tr(o,o.next)&&(Mi(o),o=o.next),o}function U2(s,e){if(!s)return s;e||(e=s);let t=s,n;do if(n=!1,!t.steiner&&(Tr(t,t.next)||rt(t.prev,t,t.next)===0)){if(Mi(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function wi(s,e,t,n,i,r,o){if(!s)return;!o&&r&&Pu(s,n,i,r);let A=s,a,c;for(;s.prev!==s.next;){if(a=s.prev,c=s.next,r?Su(s,n,i,r):Tu(s)){e.push(a.i/t),e.push(s.i/t),e.push(c.i/t),Mi(s),s=c.next,A=c.next;continue}if(s=c,s===A){o?o===1?(s=Du(U2(s),e,t),wi(s,e,t,n,i,r,2)):o===2&&Uu(s,e,t,n,i,r):wi(U2(s),e,t,n,i,r,1);break}}}function Tu(s){const e=s.prev,t=s,n=s.next;if(rt(e,t,n)>=0)return!1;let i=s.next.next;for(;i!==s.prev;){if(Qn(e.x,e.y,t.x,t.y,n.x,n.y,i.x,i.y)&&rt(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function Su(s,e,t,n){const i=s.prev,r=s,o=s.next;if(rt(i,r,o)>=0)return!1;const A=i.x<r.x?i.x<o.x?i.x:o.x:r.x<o.x?r.x:o.x,a=i.y<r.y?i.y<o.y?i.y:o.y:r.y<o.y?r.y:o.y,c=i.x>r.x?i.x>o.x?i.x:o.x:r.x>o.x?r.x:o.x,l=i.y>r.y?i.y>o.y?i.y:o.y:r.y>o.y?r.y:o.y,h=j1(A,a,e,t,n),u=j1(c,l,e,t,n);let f=s.prevZ,g=s.nextZ;for(;f&&f.z>=h&&g&&g.z<=u;){if(f!==s.prev&&f!==s.next&&Qn(i.x,i.y,r.x,r.y,o.x,o.y,f.x,f.y)&&rt(f.prev,f,f.next)>=0||(f=f.prevZ,g!==s.prev&&g!==s.next&&Qn(i.x,i.y,r.x,r.y,o.x,o.y,g.x,g.y)&&rt(g.prev,g,g.next)>=0))return!1;g=g.nextZ}for(;f&&f.z>=h;){if(f!==s.prev&&f!==s.next&&Qn(i.x,i.y,r.x,r.y,o.x,o.y,f.x,f.y)&&rt(f.prev,f,f.next)>=0)return!1;f=f.prevZ}for(;g&&g.z<=u;){if(g!==s.prev&&g!==s.next&&Qn(i.x,i.y,r.x,r.y,o.x,o.y,g.x,g.y)&&rt(g.prev,g,g.next)>=0)return!1;g=g.nextZ}return!0}function Du(s,e,t){let n=s;do{const i=n.prev,r=n.next.next;!Tr(i,r)&&WA(i,n,n.next,r)&&Bi(i,r)&&Bi(r,i)&&(e.push(i.i/t),e.push(n.i/t),e.push(r.i/t),Mi(n),Mi(n.next),n=s=r),n=n.next}while(n!==s);return U2(n)}function Uu(s,e,t,n,i,r){let o=s;do{let A=o.next.next;for(;A!==o.prev;){if(o.i!==A.i&&Hu(o,A)){let a=OA(o,A);o=U2(o,o.next),a=U2(a,a.next),wi(o,e,t,n,i,r),wi(a,e,t,n,i,r);return}A=A.next}o=o.next}while(o!==s)}function Gu(s,e,t,n){const i=[];let r,o,A,a,c;for(r=0,o=e.length;r<o;r++)A=e[r]*n,a=r<o-1?e[r+1]*n:s.length,c=jA(s,A,a,n,!1),c===c.next&&(c.steiner=!0),i.push(Yu(c));for(i.sort(Ru),r=0;r<i.length;r++)Nu(i[r],t),t=U2(t,t.next);return t}function Ru(s,e){return s.x-e.x}function Nu(s,e){if(e=zu(s,e),e){const t=OA(e,s);U2(e,e.next),U2(t,t.next)}}function zu(s,e){let t=e;const n=s.x,i=s.y;let r=-1/0,o;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const u=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(u<=n&&u>r){if(r=u,u===n){if(i===t.y)return t;if(i===t.next.y)return t.next}o=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!o)return null;if(n===r)return o;const A=o,a=o.x,c=o.y;let l=1/0,h;t=o;do n>=t.x&&t.x>=a&&n!==t.x&&Qn(i<c?n:r,i,a,c,i<c?r:n,i,t.x,t.y)&&(h=Math.abs(i-t.y)/(n-t.x),Bi(t,s)&&(h<l||h===l&&(t.x>o.x||t.x===o.x&&Lu(o,t)))&&(o=t,l=h)),t=t.next;while(t!==A);return o}function Lu(s,e){return rt(s.prev,s,e.prev)<0&&rt(e.next,s,s.next)<0}function Pu(s,e,t,n){let i=s;do i.z===null&&(i.z=j1(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,ku(i)}function ku(s){let e,t,n,i,r,o,A,a,c=1;do{for(t=s,s=null,r=null,o=0;t;){for(o++,n=t,A=0,e=0;e<c&&(A++,n=n.nextZ,!!n);e++);for(a=c;A>0||a>0&&n;)A!==0&&(a===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,A--):(i=n,n=n.nextZ,a--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;t=n}r.nextZ=null,c*=2}while(o>1);return s}function j1(s,e,t,n,i){return s=32767*(s-t)*i,e=32767*(e-n)*i,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function Yu(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function Qn(s,e,t,n,i,r,o,A){return(i-o)*(e-A)-(s-o)*(r-A)>=0&&(s-o)*(n-A)-(t-o)*(e-A)>=0&&(t-o)*(r-A)-(i-o)*(n-A)>=0}function Hu(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!Vu(s,e)&&(Bi(s,e)&&Bi(e,s)&&Ku(s,e)&&(rt(s.prev,s,e.prev)||rt(s,e.prev,e))||Tr(s,e)&&rt(s.prev,s,s.next)>0&&rt(e.prev,e,e.next)>0)}function rt(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function Tr(s,e){return s.x===e.x&&s.y===e.y}function WA(s,e,t,n){const i=nr(rt(s,e,t)),r=nr(rt(s,e,n)),o=nr(rt(t,n,s)),A=nr(rt(t,n,e));return!!(i!==r&&o!==A||i===0&&tr(s,t,e)||r===0&&tr(s,n,e)||o===0&&tr(t,s,n)||A===0&&tr(t,e,n))}function tr(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function nr(s){return s>0?1:s<0?-1:0}function Vu(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&WA(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function Bi(s,e){return rt(s.prev,s,s.next)<0?rt(s,e,s.next)>=0&&rt(s,s.prev,e)>=0:rt(s,e,s.prev)<0||rt(s,s.next,e)<0}function Ku(s,e){let t=s,n=!1;const i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function OA(s,e){const t=new W1(s.i,s.x,s.y),n=new W1(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function Oo(s,e,t,n){const i=new W1(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Mi(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function W1(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function ju(s,e,t,n){let i=0;for(let r=e,o=t-n;r<t;r+=n)i+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return i}class S2{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return S2.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];Jo(e),Zo(n,e);let o=e.length;t.forEach(Jo);for(let a=0;a<t.length;a++)i.push(o),o+=t[a].length,Zo(n,t[a]);const A=Fu.triangulate(n,i);for(let a=0;a<A.length;a+=3)r.push(A.slice(a,a+3));return r}}function Jo(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function Zo(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class Wn extends Xe{constructor(e=new yi([new V(.5,.5),new V(-.5,.5),new V(-.5,-.5),new V(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let A=0,a=e.length;A<a;A++){const c=e[A];o(c)}this.setAttribute("position",new $e(i,3)),this.setAttribute("uv",new $e(r,2)),this.computeVertexNormals();function o(A){const a=[],c=t.curveSegments!==void 0?t.curveSegments:12,l=t.steps!==void 0?t.steps:1;let h=t.depth!==void 0?t.depth:1,u=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:.2,g=t.bevelSize!==void 0?t.bevelSize:f-.1,p=t.bevelOffset!==void 0?t.bevelOffset:0,d=t.bevelSegments!==void 0?t.bevelSegments:3;const m=t.extrudePath,v=t.UVGenerator!==void 0?t.UVGenerator:Wu;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=t.amount);let y,Q=!1,M,I,T,U;m&&(y=m.getSpacedPoints(l),Q=!0,u=!1,M=m.computeFrenetFrames(l,!1),I=new w,T=new w,U=new w),u||(d=0,f=0,g=0,p=0);const X=A.extractPoints(c);let z=X.shape;const B=X.holes;if(!S2.isClockWise(z)){z=z.reverse();for(let K=0,Z=B.length;K<Z;K++){const ne=B[K];S2.isClockWise(ne)&&(B[K]=ne.reverse())}}const J=S2.triangulateShape(z,B),D=z;for(let K=0,Z=B.length;K<Z;K++){const ne=B[K];z=z.concat(ne)}function P(K,Z,ne){return Z||console.error("THREE.ExtrudeGeometry: vec does not exist"),Z.clone().multiplyScalar(ne).add(K)}const N=z.length,k=J.length;function S(K,Z,ne){let fe,le,Qe;const Me=K.x-Z.x,me=K.y-Z.y,nt=ne.x-K.x,qe=ne.y-K.y,_=Me*Me+me*me,E=Me*qe-me*nt;if(Math.abs(E)>Number.EPSILON){const Y=Math.sqrt(_),q=Math.sqrt(nt*nt+qe*qe),ce=Z.x-me/Y,ue=Z.y+Me/Y,Be=ne.x-qe/q,H=ne.y+nt/q,Fe=((Be-ce)*qe-(H-ue)*nt)/(Me*qe-me*nt);fe=ce+Me*Fe-K.x,le=ue+me*Fe-K.y;const Se=fe*fe+le*le;if(Se<=2)return new V(fe,le);Qe=Math.sqrt(Se/2)}else{let Y=!1;Me>Number.EPSILON?nt>Number.EPSILON&&(Y=!0):Me<-Number.EPSILON?nt<-Number.EPSILON&&(Y=!0):Math.sign(me)===Math.sign(qe)&&(Y=!0),Y?(fe=-me,le=Me,Qe=Math.sqrt(_)):(fe=Me,le=me,Qe=Math.sqrt(_/2))}return new V(fe/Qe,le/Qe)}const W=[];for(let K=0,Z=D.length,ne=Z-1,fe=K+1;K<Z;K++,ne++,fe++)ne===Z&&(ne=0),fe===Z&&(fe=0),W[K]=S(D[K],D[ne],D[fe]);const $=[];let ee,te=W.concat();for(let K=0,Z=B.length;K<Z;K++){const ne=B[K];ee=[];for(let fe=0,le=ne.length,Qe=le-1,Me=fe+1;fe<le;fe++,Qe++,Me++)Qe===le&&(Qe=0),Me===le&&(Me=0),ee[fe]=S(ne[fe],ne[Qe],ne[Me]);$.push(ee),te=te.concat(ee)}for(let K=0;K<d;K++){const Z=K/d,ne=f*Math.cos(Z*Math.PI/2),fe=g*Math.sin(Z*Math.PI/2)+p;for(let le=0,Qe=D.length;le<Qe;le++){const Me=P(D[le],W[le],fe);ke(Me.x,Me.y,-ne)}for(let le=0,Qe=B.length;le<Qe;le++){const Me=B[le];ee=$[le];for(let me=0,nt=Me.length;me<nt;me++){const qe=P(Me[me],ee[me],fe);ke(qe.x,qe.y,-ne)}}}const he=g+p;for(let K=0;K<N;K++){const Z=u?P(z[K],te[K],he):z[K];Q?(T.copy(M.normals[0]).multiplyScalar(Z.x),I.copy(M.binormals[0]).multiplyScalar(Z.y),U.copy(y[0]).add(T).add(I),ke(U.x,U.y,U.z)):ke(Z.x,Z.y,0)}for(let K=1;K<=l;K++)for(let Z=0;Z<N;Z++){const ne=u?P(z[Z],te[Z],he):z[Z];Q?(T.copy(M.normals[K]).multiplyScalar(ne.x),I.copy(M.binormals[K]).multiplyScalar(ne.y),U.copy(y[K]).add(T).add(I),ke(U.x,U.y,U.z)):ke(ne.x,ne.y,h/l*K)}for(let K=d-1;K>=0;K--){const Z=K/d,ne=f*Math.cos(Z*Math.PI/2),fe=g*Math.sin(Z*Math.PI/2)+p;for(let le=0,Qe=D.length;le<Qe;le++){const Me=P(D[le],W[le],fe);ke(Me.x,Me.y,h+ne)}for(let le=0,Qe=B.length;le<Qe;le++){const Me=B[le];ee=$[le];for(let me=0,nt=Me.length;me<nt;me++){const qe=P(Me[me],ee[me],fe);Q?ke(qe.x,qe.y+y[l-1].y,y[l-1].x+ne):ke(qe.x,qe.y,h+ne)}}}Re(),Ce();function Re(){const K=i.length/3;if(u){let Z=0,ne=N*Z;for(let fe=0;fe<k;fe++){const le=J[fe];Ie(le[2]+ne,le[1]+ne,le[0]+ne)}Z=l+d*2,ne=N*Z;for(let fe=0;fe<k;fe++){const le=J[fe];Ie(le[0]+ne,le[1]+ne,le[2]+ne)}}else{for(let Z=0;Z<k;Z++){const ne=J[Z];Ie(ne[2],ne[1],ne[0])}for(let Z=0;Z<k;Z++){const ne=J[Z];Ie(ne[0]+N*l,ne[1]+N*l,ne[2]+N*l)}}n.addGroup(K,i.length/3-K,0)}function Ce(){const K=i.length/3;let Z=0;j(D,Z),Z+=D.length;for(let ne=0,fe=B.length;ne<fe;ne++){const le=B[ne];j(le,Z),Z+=le.length}n.addGroup(K,i.length/3-K,1)}function j(K,Z){let ne=K.length;for(;--ne>=0;){const fe=ne;let le=ne-1;le<0&&(le=K.length-1);for(let Qe=0,Me=l+d*2;Qe<Me;Qe++){const me=N*Qe,nt=N*(Qe+1),qe=Z+fe+me,_=Z+le+me,E=Z+le+nt,Y=Z+fe+nt;be(qe,_,E,Y)}}}function ke(K,Z,ne){a.push(K),a.push(Z),a.push(ne)}function Ie(K,Z,ne){re(K),re(Z),re(ne);const fe=i.length/3,le=v.generateTopUV(n,i,fe-3,fe-2,fe-1);Ue(le[0]),Ue(le[1]),Ue(le[2])}function be(K,Z,ne,fe){re(K),re(Z),re(fe),re(Z),re(ne),re(fe);const le=i.length/3,Qe=v.generateSideWallUV(n,i,le-6,le-3,le-2,le-1);Ue(Qe[0]),Ue(Qe[1]),Ue(Qe[3]),Ue(Qe[1]),Ue(Qe[2]),Ue(Qe[3])}function re(K){i.push(a[K*3+0]),i.push(a[K*3+1]),i.push(a[K*3+2])}function Ue(K){r.push(K.x),r.push(K.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return Ou(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,o=e.shapes.length;r<o;r++){const A=t[e.shapes[r]];n.push(A)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new KA[i.type]().fromJSON(i)),new Wn(n,e.options)}}const Wu={generateTopUV:function(s,e,t,n,i){const r=e[t*3],o=e[t*3+1],A=e[n*3],a=e[n*3+1],c=e[i*3],l=e[i*3+1];return[new V(r,o),new V(A,a),new V(c,l)]},generateSideWallUV:function(s,e,t,n,i,r){const o=e[t*3],A=e[t*3+1],a=e[t*3+2],c=e[n*3],l=e[n*3+1],h=e[n*3+2],u=e[i*3],f=e[i*3+1],g=e[i*3+2],p=e[r*3],d=e[r*3+1],m=e[r*3+2];return Math.abs(A-l)<Math.abs(o-c)?[new V(o,1-a),new V(c,1-h),new V(u,1-g),new V(p,1-m)]:[new V(A,1-a),new V(l,1-h),new V(f,1-g),new V(d,1-m)]}};function Ou(s,e,t){if(t.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class hs extends Xe{constructor(e=new yi([new V(0,.5),new V(-.5,-.5),new V(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],o=[];let A=0,a=0;if(Array.isArray(e)===!1)c(e);else for(let l=0;l<e.length;l++)c(e[l]),this.addGroup(A,a,l),A+=a,a=0;this.setIndex(n),this.setAttribute("position",new $e(i,3)),this.setAttribute("normal",new $e(r,3)),this.setAttribute("uv",new $e(o,2));function c(l){const h=i.length/3,u=l.extractPoints(t);let f=u.shape;const g=u.holes;S2.isClockWise(f)===!1&&(f=f.reverse());for(let d=0,m=g.length;d<m;d++){const v=g[d];S2.isClockWise(v)===!0&&(g[d]=v.reverse())}const p=S2.triangulateShape(f,g);for(let d=0,m=g.length;d<m;d++){const v=g[d];f=f.concat(v)}for(let d=0,m=f.length;d<m;d++){const v=f[d];i.push(v.x,v.y,0),r.push(0,0,1),o.push(v.x,v.y)}for(let d=0,m=p.length;d<m;d++){const v=p[d],y=v[0]+h,Q=v[1]+h,M=v[2]+h;n.push(y,Q,M),a+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return Ju(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const o=t[e.shapes[i]];n.push(o)}return new hs(n,e.curveSegments)}}function Ju(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,n=s.length;t<n;t++){const i=s[t];e.shapes.push(i.uuid)}else e.shapes.push(s.uuid);return e}class D2 extends Xe{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,o=0,A=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:o,thetaLength:A},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const a=Math.min(o+A,Math.PI);let c=0;const l=[],h=new w,u=new w,f=[],g=[],p=[],d=[];for(let m=0;m<=n;m++){const v=[],y=m/n;let Q=0;m==0&&o==0?Q=.5/t:m==n&&a==Math.PI&&(Q=-.5/t);for(let M=0;M<=t;M++){const I=M/t;h.x=-e*Math.cos(i+I*r)*Math.sin(o+y*A),h.y=e*Math.cos(o+y*A),h.z=e*Math.sin(i+I*r)*Math.sin(o+y*A),g.push(h.x,h.y,h.z),u.copy(h).normalize(),p.push(u.x,u.y,u.z),d.push(I+Q,1-y),v.push(c++)}l.push(v)}for(let m=0;m<n;m++)for(let v=0;v<t;v++){const y=l[m][v+1],Q=l[m][v],M=l[m+1][v],I=l[m+1][v+1];(m!==0||o>0)&&f.push(y,Q,I),(m!==n-1||a<Math.PI)&&f.push(Q,M,I)}this.setIndex(f),this.setAttribute("position",new $e(g,3)),this.setAttribute("normal",new $e(p,3)),this.setAttribute("uv",new $e(d,2))}static fromJSON(e){return new D2(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class zn extends Xe{constructor(e=1,t=.4,n=8,i=6,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const o=[],A=[],a=[],c=[],l=new w,h=new w,u=new w;for(let f=0;f<=n;f++)for(let g=0;g<=i;g++){const p=g/i*r,d=f/n*Math.PI*2;h.x=(e+t*Math.cos(d))*Math.cos(p),h.y=(e+t*Math.cos(d))*Math.sin(p),h.z=t*Math.sin(d),A.push(h.x,h.y,h.z),l.x=e*Math.cos(p),l.y=e*Math.sin(p),u.subVectors(h,l).normalize(),a.push(u.x,u.y,u.z),c.push(g/i),c.push(f/n)}for(let f=1;f<=n;f++)for(let g=1;g<=i;g++){const p=(i+1)*f+g-1,d=(i+1)*(f-1)+g-1,m=(i+1)*(f-1)+g,v=(i+1)*f+g;o.push(p,d,v),o.push(d,m,v)}this.setIndex(o),this.setAttribute("position",new $e(A,3)),this.setAttribute("normal",new $e(a,3)),this.setAttribute("uv",new $e(c,2))}static fromJSON(e){return new zn(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class JA extends dt{constructor(e){super(),this.type="ShadowMaterial",this.color=new ie(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}JA.prototype.isShadowMaterial=!0;class ZA extends Ze{constructor(e){super(e),this.type="RawShaderMaterial"}}ZA.prototype.isRawShaderMaterial=!0;class Sr extends dt{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ie(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ie(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=kn,this.normalScale=new V(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}Sr.prototype.isMeshStandardMaterial=!0;class Oe extends Sr{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new V(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return vt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new ie(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new ie(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new ie(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}Oe.prototype.isMeshPhysicalMaterial=!0;class XA extends dt{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new ie(16777215),this.specular=new ie(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ie(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=kn,this.normalScale=new V(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Er,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}XA.prototype.isMeshPhongMaterial=!0;class qA extends dt{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ie(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ie(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=kn,this.normalScale=new V(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}qA.prototype.isMeshToonMaterial=!0;class $A extends dt{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=kn,this.normalScale=new V(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}$A.prototype.isMeshNormalMaterial=!0;class ea extends dt{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new ie(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ie(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Er,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}ea.prototype.isMeshLambertMaterial=!0;class ta extends dt{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ie(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=kn,this.normalScale=new V(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}ta.prototype.isMeshMatcapMaterial=!0;class na extends Kn{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}na.prototype.isLineDashedMaterial=!0;const Zu={ShadowMaterial:JA,SpriteMaterial:is,RawShaderMaterial:ZA,ShaderMaterial:Ze,PointsMaterial:os,MeshPhysicalMaterial:Oe,MeshStandardMaterial:Sr,MeshPhongMaterial:XA,MeshToonMaterial:qA,MeshNormalMaterial:$A,MeshLambertMaterial:ea,MeshDepthMaterial:ts,MeshDistanceMaterial:ns,MeshBasicMaterial:Qt,MeshMatcapMaterial:ta,LineDashedMaterial:na,LineBasicMaterial:Kn,Material:dt};dt.fromType=function(s){return new Zu[s]};const tt={arraySlice:function(s,e,t){return tt.isTypedArray(s)?new s.constructor(s.subarray(e,t!==void 0?t:s.length)):s.slice(e,t)},convertArray:function(s,e,t){return!s||!t&&s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)},isTypedArray:function(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)},getKeyframeOrder:function(s){function e(i,r){return s[i]-s[r]}const t=s.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n},sortedArray:function(s,e,t){const n=s.length,i=new s.constructor(n);for(let r=0,o=0;o!==n;++r){const A=t[r]*e;for(let a=0;a!==e;++a)i[o++]=s[A+a]}return i},flattenJSON:function(s,e,t,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let o=r[n];if(o!==void 0)if(Array.isArray(o))do o=r[n],o!==void 0&&(e.push(r.time),t.push.apply(t,o)),r=s[i++];while(r!==void 0);else if(o.toArray!==void 0)do o=r[n],o!==void 0&&(e.push(r.time),o.toArray(t,t.length)),r=s[i++];while(r!==void 0);else do o=r[n],o!==void 0&&(e.push(r.time),t.push(o)),r=s[i++];while(r!==void 0)},subclip:function(s,e,t,n,i=30){const r=s.clone();r.name=e;const o=[];for(let a=0;a<r.tracks.length;++a){const c=r.tracks[a],l=c.getValueSize(),h=[],u=[];for(let f=0;f<c.times.length;++f){const g=c.times[f]*i;if(!(g<t||g>=n)){h.push(c.times[f]);for(let p=0;p<l;++p)u.push(c.values[f*l+p])}}h.length!==0&&(c.times=tt.convertArray(h,c.times.constructor),c.values=tt.convertArray(u,c.values.constructor),o.push(c))}r.tracks=o;let A=1/0;for(let a=0;a<r.tracks.length;++a)A>r.tracks[a].times[0]&&(A=r.tracks[a].times[0]);for(let a=0;a<r.tracks.length;++a)r.tracks[a].shift(-1*A);return r.resetDuration(),r},makeClipAdditive:function(s,e=0,t=s,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let o=0;o<i;++o){const A=t.tracks[o],a=A.ValueTypeName;if(a==="bool"||a==="string")continue;const c=s.tracks.find(function(m){return m.name===A.name&&m.ValueTypeName===a});if(c===void 0)continue;let l=0;const h=A.getValueSize();A.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=h/3);let u=0;const f=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=f/3);const g=A.times.length-1;let p;if(r<=A.times[0]){const m=l,v=h-l;p=tt.arraySlice(A.values,m,v)}else if(r>=A.times[g]){const m=g*h+l,v=m+h-l;p=tt.arraySlice(A.values,m,v)}else{const m=A.createInterpolant(),v=l,y=h-l;m.evaluate(r),p=tt.arraySlice(m.resultBuffer,v,y)}a==="quaternion"&&new Ut().fromArray(p).normalize().conjugate().toArray(p);const d=c.times.length;for(let m=0;m<d;++m){const v=m*f+u;if(a==="quaternion")Ut.multiplyQuaternionsFlat(c.values,v,p,0,c.values,v);else{const y=f-u*2;for(let Q=0;Q<y;++Q)c.values[v+Q]-=p[Q]}}}return s.blendMode=MA,s}};class G2{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let A=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,r)}if(n===A)break;if(r=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=r)){const A=t[1];e<A&&(n=2,r=A);for(let a=n-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===a)break;if(i=r,r=t[--n-1],e>=r)break t}o=n,n=0;break n}break e}for(;n<o;){const A=n+o>>>1;e<t[A]?o=A:n=A+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(i===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,r,e)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let o=0;o!==i;++o)t[o]=n[r+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}G2.prototype.beforeStart_=G2.prototype.copySampleValue_;G2.prototype.afterEnd_=G2.prototype.copySampleValue_;class Xu extends G2{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:xn,endingEnd:xn}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,o=e+1,A=i[r],a=i[o];if(A===void 0)switch(this.getSettings_().endingStart){case Cn:r=e,A=2*t-n;break;case gr:r=i.length-2,A=t+i[r]-i[r+1];break;default:r=e,A=n}if(a===void 0)switch(this.getSettings_().endingEnd){case Cn:o=e,a=2*n-t;break;case gr:o=1,a=n+i[1]-i[0];break;default:o=e-1,a=t}const c=(n-t)*.5,l=this.valueSize;this._weightPrev=c/(t-A),this._weightNext=c/(a-n),this._offsetPrev=r*l,this._offsetNext=o*l}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,A=this.valueSize,a=e*A,c=a-A,l=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,f=this._weightNext,g=(n-t)/(i-t),p=g*g,d=p*g,m=-u*d+2*u*p-u*g,v=(1+u)*d+(-1.5-2*u)*p+(-.5+u)*g+1,y=(-1-f)*d+(1.5+f)*p+.5*g,Q=f*d-f*p;for(let M=0;M!==A;++M)r[M]=m*o[l+M]+v*o[c+M]+y*o[a+M]+Q*o[h+M];return r}}class ia extends G2{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,A=this.valueSize,a=e*A,c=a-A,l=(n-t)/(i-t),h=1-l;for(let u=0;u!==A;++u)r[u]=o[c+u]*h+o[a+u]*l;return r}}class qu extends G2{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class c2{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=tt.convertArray(t,this.TimeBufferType),this.values=tt.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:tt.convertArray(e.times,Array),values:tt.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new qu(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new ia(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Xu(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case fr:t=this.InterpolantFactoryMethodDiscrete;break;case pr:t=this.InterpolantFactoryMethodLinear;break;case Kr:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return fr;case this.InterpolantFactoryMethodLinear:return pr;case this.InterpolantFactoryMethodSmooth:return Kr}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,o=i-1;for(;r!==i&&n[r]<e;)++r;for(;o!==-1&&n[o]>t;)--o;if(++o,r!==0||o!==i){r>=o&&(o=Math.max(o,1),r=o-1);const A=this.getValueSize();this.times=tt.arraySlice(n,r,o),this.values=tt.arraySlice(this.values,r*A,o*A)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let A=0;A!==r;A++){const a=n[A];if(typeof a=="number"&&isNaN(a)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,A,a),e=!1;break}if(o!==null&&o>a){console.error("THREE.KeyframeTrack: Out of order keys.",this,A,a,o),e=!1;break}o=a}if(i!==void 0&&tt.isTypedArray(i))for(let A=0,a=i.length;A!==a;++A){const c=i[A];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,A,c),e=!1;break}}return e}optimize(){const e=tt.arraySlice(this.times),t=tt.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===Kr,r=e.length-1;let o=1;for(let A=1;A<r;++A){let a=!1;const c=e[A],l=e[A+1];if(c!==l&&(A!==1||c!==e[0]))if(i)a=!0;else{const h=A*n,u=h-n,f=h+n;for(let g=0;g!==n;++g){const p=t[h+g];if(p!==t[u+g]||p!==t[f+g]){a=!0;break}}}if(a){if(A!==o){e[o]=e[A];const h=A*n,u=o*n;for(let f=0;f!==n;++f)t[u+f]=t[h+f]}++o}}if(r>0){e[o]=e[r];for(let A=r*n,a=o*n,c=0;c!==n;++c)t[a+c]=t[A+c];++o}return o!==e.length?(this.times=tt.arraySlice(e,0,o),this.values=tt.arraySlice(t,0,o*n)):(this.times=e,this.values=t),this}clone(){const e=tt.arraySlice(this.times,0),t=tt.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}c2.prototype.TimeBufferType=Float32Array;c2.prototype.ValueBufferType=Float32Array;c2.prototype.DefaultInterpolation=pr;class On extends c2{}On.prototype.ValueTypeName="bool";On.prototype.ValueBufferType=Array;On.prototype.DefaultInterpolation=fr;On.prototype.InterpolantFactoryMethodLinear=void 0;On.prototype.InterpolantFactoryMethodSmooth=void 0;class ra extends c2{}ra.prototype.ValueTypeName="color";class wr extends c2{}wr.prototype.ValueTypeName="number";class $u extends G2{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,A=this.valueSize,a=(n-t)/(i-t);let c=e*A;for(let l=c+A;c!==l;c+=4)Ut.slerpFlat(r,0,o,c-A,o,c,a);return r}}class xi extends c2{InterpolantFactoryMethodLinear(e){return new $u(this.times,this.values,this.getValueSize(),e)}}xi.prototype.ValueTypeName="quaternion";xi.prototype.DefaultInterpolation=pr;xi.prototype.InterpolantFactoryMethodSmooth=void 0;class Jn extends c2{}Jn.prototype.ValueTypeName="string";Jn.prototype.ValueBufferType=Array;Jn.prototype.DefaultInterpolation=fr;Jn.prototype.InterpolantFactoryMethodLinear=void 0;Jn.prototype.InterpolantFactoryMethodSmooth=void 0;class Br extends c2{}Br.prototype.ValueTypeName="vector";class Xo{constructor(e,t=-1,n,i=Z1){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=A2(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,A=n.length;o!==A;++o)t.push(t4(n[o]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,o=n.length;r!==o;++r)t.push(c2.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,o=[];for(let A=0;A<r;A++){let a=[],c=[];a.push((A+r-1)%r,A,(A+1)%r),c.push(0,1,0);const l=tt.getKeyframeOrder(a);a=tt.sortedArray(a,1,l),c=tt.sortedArray(c,1,l),!i&&a[0]===0&&(a.push(r),c.push(c[0])),o.push(new wr(".morphTargetInfluences["+t[A].name+"]",a,c).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let A=0,a=e.length;A<a;A++){const c=e[A],l=c.name.match(r);if(l&&l.length>1){const h=l[1];let u=i[h];u||(i[h]=u=[]),u.push(c)}}const o=[];for(const A in i)o.push(this.CreateFromMorphTargetSequence(A,i[A],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,u,f,g,p){if(f.length!==0){const d=[],m=[];tt.flattenJSON(f,d,m,g),d.length!==0&&p.push(new h(u,d,m))}},i=[],r=e.name||"default",o=e.fps||30,A=e.blendMode;let a=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const u=c[h].keys;if(!(!u||u.length===0))if(u[0].morphTargets){const f={};let g;for(g=0;g<u.length;g++)if(u[g].morphTargets)for(let p=0;p<u[g].morphTargets.length;p++)f[u[g].morphTargets[p]]=-1;for(const p in f){const d=[],m=[];for(let v=0;v!==u[g].morphTargets.length;++v){const y=u[g];d.push(y.time),m.push(y.morphTarget===p?1:0)}i.push(new wr(".morphTargetInfluence["+p+"]",d,m))}a=f.length*o}else{const f=".bones["+t[h].name+"]";n(Br,f+".position",u,"pos",i),n(xi,f+".quaternion",u,"rot",i),n(Br,f+".scale",u,"scl",i)}}return i.length===0?null:new this(r,a,i,A)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function e4(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return wr;case"vector":case"vector2":case"vector3":case"vector4":return Br;case"color":return ra;case"quaternion":return xi;case"bool":case"boolean":return On;case"string":return Jn}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function t4(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=e4(s.type);if(s.times===void 0){const t=[],n=[];tt.flattenJSON(s.keys,t,n,"value"),s.times=t,s.values=n}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const Ln={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class n4{constructor(e,t,n){const i=this;let r=!1,o=0,A=0,a;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(l){A++,r===!1&&i.onStart!==void 0&&i.onStart(l,o,A),r=!0},this.itemEnd=function(l){o++,i.onProgress!==void 0&&i.onProgress(l,o,A),o===A&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(l){i.onError!==void 0&&i.onError(l)},this.resolveURL=function(l){return a?a(l):l},this.setURLModifier=function(l){return a=l,this},this.addHandler=function(l,h){return c.push(l,h),this},this.removeHandler=function(l){const h=c.indexOf(l);return h!==-1&&c.splice(h,2),this},this.getHandler=function(l){for(let h=0,u=c.length;h<u;h+=2){const f=c[h],g=c[h+1];if(f.global&&(f.lastIndex=0),f.test(l))return g}return null}}}const i4=new n4;class R2{constructor(e){this.manager=e!==void 0?e:i4,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const p2={};class r4 extends R2{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=Ln.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(p2[e]!==void 0){p2[e].push({onLoad:t,onProgress:n,onError:i});return}p2[e]=[],p2[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),A=this.mimeType,a=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream=="undefined"||c.body===void 0||c.body.getReader===void 0)return c;const l=p2[e],h=c.body.getReader(),u=c.headers.get("Content-Length"),f=u?parseInt(u):0,g=f!==0;let p=0;const d=new ReadableStream({start(m){v();function v(){h.read().then(({done:y,value:Q})=>{if(y)m.close();else{p+=Q.byteLength;const M=new ProgressEvent("progress",{lengthComputable:g,loaded:p,total:f});for(let I=0,T=l.length;I<T;I++){const U=l[I];U.onProgress&&U.onProgress(M)}m.enqueue(Q),v()}})}}});return new Response(d)}else throw Error(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`)}).then(c=>{switch(a){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(l=>new DOMParser().parseFromString(l,A));case"json":return c.json();default:if(A===void 0)return c.text();{const h=/charset="?([^;"\s]*)"?/i.exec(A),u=h&&h[1]?h[1].toLowerCase():void 0,f=new TextDecoder(u);return c.arrayBuffer().then(g=>f.decode(g))}}}).then(c=>{Ln.add(e,c);const l=p2[e];delete p2[e];for(let h=0,u=l.length;h<u;h++){const f=l[h];f.onLoad&&f.onLoad(c)}}).catch(c=>{const l=p2[e];if(l===void 0)throw this.manager.itemError(e),c;delete p2[e];for(let h=0,u=l.length;h<u;h++){const f=l[h];f.onError&&f.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class sa extends R2{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Ln.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const A=gi("img");function a(){l(),Ln.add(e,this),t&&t(this),r.manager.itemEnd(e)}function c(h){l(),i&&i(h),r.manager.itemError(e),r.manager.itemEnd(e)}function l(){A.removeEventListener("load",a,!1),A.removeEventListener("error",c,!1)}return A.addEventListener("load",a,!1),A.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(A.crossOrigin=this.crossOrigin),r.manager.itemStart(e),A.src=e,A}}class s4 extends R2{constructor(e){super(e)}load(e,t,n,i){const r=new vr,o=new sa(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let A=0;function a(c){o.load(e[c],function(l){r.images[c]=l,A++,A===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let c=0;c<e.length;++c)a(c);return r}}class Dr extends R2{constructor(e){super(e)}load(e,t,n,i){const r=new at,o=new sa(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(A){r.image=A,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class a2 extends Ne{constructor(e,t=1){super(),this.type="Light",this.color=new ie(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}a2.prototype.isLight=!0;class o4 extends a2{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(Ne.DefaultUp),this.updateMatrix(),this.groundColor=new ie(t)}copy(e){return a2.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}o4.prototype.isHemisphereLight=!0;const qo=new we,$o=new w,eA=new w;class us{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new V(512,512),this.map=null,this.mapPass=null,this.matrix=new we,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Qr,this._frameExtents=new V(1,1),this._viewportCount=1,this._viewports=[new Je(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;$o.setFromMatrixPosition(e.matrixWorld),t.position.copy($o),eA.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(eA),t.updateMatrixWorld(),qo.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(qo),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class oa extends us{constructor(){super(new mt(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera,n=P1*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}oa.prototype.isSpotLightShadow=!0;class A4 extends a2{constructor(e,t,n=0,i=Math.PI/3,r=0,o=1){super(e,t),this.type="SpotLight",this.position.copy(Ne.DefaultUp),this.updateMatrix(),this.target=new Ne,this.distance=n,this.angle=i,this.penumbra=r,this.decay=o,this.shadow=new oa}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}A4.prototype.isSpotLight=!0;const tA=new we,oi=new w,Q1=new w;class Aa extends us{constructor(){super(new mt(90,1,.5,500)),this._frameExtents=new V(4,2),this._viewportCount=6,this._viewports=[new Je(2,1,1,1),new Je(0,1,1,1),new Je(3,1,1,1),new Je(1,1,1,1),new Je(3,0,1,1),new Je(1,0,1,1)],this._cubeDirections=[new w(1,0,0),new w(-1,0,0),new w(0,0,1),new w(0,0,-1),new w(0,1,0),new w(0,-1,0)],this._cubeUps=[new w(0,1,0),new w(0,1,0),new w(0,1,0),new w(0,1,0),new w(0,0,1),new w(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),oi.setFromMatrixPosition(e.matrixWorld),n.position.copy(oi),Q1.copy(n.position),Q1.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Q1),n.updateMatrixWorld(),i.makeTranslation(-oi.x,-oi.y,-oi.z),tA.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(tA)}}Aa.prototype.isPointLightShadow=!0;class Sn extends a2{constructor(e,t,n=0,i=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Aa}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}Sn.prototype.isPointLight=!0;class aa extends us{constructor(){super(new Gt(-5,5,5,-5,.5,500))}}aa.prototype.isDirectionalLightShadow=!0;class Ur extends a2{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(Ne.DefaultUp),this.updateMatrix(),this.target=new Ne,this.shadow=new aa}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Ur.prototype.isDirectionalLight=!0;class Gr extends a2{constructor(e,t){super(e,t),this.type="AmbientLight"}}Gr.prototype.isAmbientLight=!0;class ds extends a2{constructor(e,t,n=10,i=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}ds.prototype.isRectAreaLight=!0;class ca{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new w)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*r),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*r)),t.addScaledVector(o[6],.315392*(3*r*r-1)),t.addScaledVector(o[7],1.092548*(n*r)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*r),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*r),t.addScaledVector(o[6],.743125*r*r-.247708),t.addScaledVector(o[7],2*.429043*n*r),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}ca.prototype.isSphericalHarmonics3=!0;class fs extends a2{constructor(e=new ca,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}fs.prototype.isLightProbe=!0;class a4{static decodeText(e){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class c4 extends Xe{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}c4.prototype.isInstancedBufferGeometry=!0;class l4 extends R2{constructor(e){super(e),typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Ln.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const A={};A.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",A.headers=this.requestHeader,fetch(e,A).then(function(a){return a.blob()}).then(function(a){return createImageBitmap(a,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(a){Ln.add(e,a),t&&t(a),r.manager.itemEnd(e)}).catch(function(a){i&&i(a),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}}l4.prototype.isImageBitmapLoader=!0;let ir;const h4={getContext:function(){return ir===void 0&&(ir=new(window.AudioContext||window.webkitAudioContext)),ir},setContext:function(s){ir=s}};class u4 extends R2{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new r4(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(A){try{const a=A.slice(0);h4.getContext().decodeAudioData(a,function(l){t(l)})}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)}}class d4 extends fs{constructor(e,t,n=1){super(void 0,n);const i=new ie().set(e),r=new ie().set(t),o=new w(i.r,i.g,i.b),A=new w(r.r,r.g,r.b),a=Math.sqrt(Math.PI),c=a*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(A).multiplyScalar(a),this.sh.coefficients[1].copy(o).sub(A).multiplyScalar(c)}}d4.prototype.isHemisphereLightProbe=!0;class f4 extends fs{constructor(e,t=1){super(void 0,t);const n=new ie().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}f4.prototype.isAmbientLightProbe=!0;class p4 extends Ne{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}class g4{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,o;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let A=0;A!==i;++A)n[r+A]=n[A];o=t}else{o+=t;const A=t/o;this._mixBufferRegion(n,r,0,A,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,o=this.cumulativeWeightAdditive,A=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const a=t*this._origIndex;this._mixBufferRegion(n,i,a,1-r,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let a=t,c=t+t;a!==c;++a)if(n[a]!==n[a+t]){A.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,o=i;r!==o;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let o=0;o!==r;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){Ut.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const o=this._workIndex*r;Ut.multiplyQuaternionsFlat(e,o,e,t,e,n),Ut.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,r){const o=1-i;for(let A=0;A!==r;++A){const a=t+A;e[a]=e[a]*o+e[n+A]*i}}_lerpAdditive(e,t,n,i,r){for(let o=0;o!==r;++o){const A=t+o;e[A]=e[A]+e[n+o]*i}}}const ps="\\[\\]\\.:\\/",m4=new RegExp("["+ps+"]","g"),gs="[^"+ps+"]",w4="[^"+ps.replace("\\.","")+"]",B4=/((?:WC+[\/:])*)/.source.replace("WC",gs),M4=/(WCOD+)?/.source.replace("WCOD",w4),E4=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",gs),y4=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",gs),x4=new RegExp("^"+B4+M4+E4+y4+"$"),C4=["material","materials","bones"];class v4{constructor(e,t,n){const i=n||Ke.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Ke{constructor(e,t,n){this.path=t,this.parsedPath=n||Ke.parseTrackName(t),this.node=Ke.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Ke.Composite(e,t,n):new Ke(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(m4,"")}static parseTrackName(e){const t=x4.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);C4.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let o=0;o<r.length;o++){const A=r[o];if(A.name===t||A.uuid===t)return A;const a=n(A.children);if(a)return a}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=Ke.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let c=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let l=0;l<e.length;l++)if(e[l].name===c){c=l;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const o=e[i];if(o===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",e);return}let A=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?A=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(A=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}a=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else o.fromArray!==void 0&&o.toArray!==void 0?(a=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(a=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][A]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ke.Composite=v4;Ke.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Ke.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Ke.prototype.GetterByBindingType=[Ke.prototype._getValue_direct,Ke.prototype._getValue_array,Ke.prototype._getValue_arrayElement,Ke.prototype._getValue_toArray];Ke.prototype.SetterByBindingTypeAndVersioning=[[Ke.prototype._setValue_direct,Ke.prototype._setValue_direct_setNeedsUpdate,Ke.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ke.prototype._setValue_array,Ke.prototype._setValue_array_setNeedsUpdate,Ke.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ke.prototype._setValue_arrayElement,Ke.prototype._setValue_arrayElement_setNeedsUpdate,Ke.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ke.prototype._setValue_fromArray,Ke.prototype._setValue_fromArray_setNeedsUpdate,Ke.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Q4{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,o=r.length,A=new Array(o),a={endingStart:xn,endingEnd:xn};for(let c=0;c!==o;++c){const l=r[c].createInterpolant(null);A[c]=l,l.settings=a}this._interpolantSettings=a,this._interpolants=A,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=g3,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,r=e._clip.duration,o=r/i,A=i/r;e.warp(1,o,t),this.warp(A,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,o=this.timeScale;let A=this._timeScaleInterpolant;A===null&&(A=i._lendControlInterpolant(),this._timeScaleInterpolant=A);const a=A.parameterPositions,c=A.sampleValues;return a[0]=r,a[1]=r+n,c[0]=e/o,c[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const a=(e-r)*n;if(a<0||n===0)return;this._startTime=null,t=n*a}t*=this._updateTimeScale(e);const o=this._updateTime(t),A=this._updateWeight(e);if(A>0){const a=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case MA:for(let l=0,h=a.length;l!==h;++l)a[l].evaluate(o),c[l].accumulateAdditive(A);break;case Z1:default:for(let l=0,h=a.length;l!==h;++l)a[l].evaluate(o),c[l].accumulate(i,A)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;n!==null&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const o=n===m3;if(e===0)return r===-1?i:o&&(r&1)===1?t-i:i;if(n===p3){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const A=Math.floor(i/t);i-=t*A,r+=Math.abs(A);const a=this.repetitions-r;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(a===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:A})}}else this.time=i;if(o&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Cn,i.endingEnd=Cn):(e?i.endingStart=this.zeroSlopeAtStart?Cn:xn:i.endingStart=gr,t?i.endingEnd=this.zeroSlopeAtEnd?Cn:xn:i.endingEnd=gr)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const A=o.parameterPositions,a=o.sampleValues;return A[0]=r,a[0]=t,A[1]=r+e,a[1]=n,this}}class _4 extends Z2{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,o=e._propertyBindings,A=e._interpolants,a=n.uuid,c=this._bindingsByRootAndName;let l=c[a];l===void 0&&(l={},c[a]=l);for(let h=0;h!==r;++h){const u=i[h],f=u.name;let g=l[f];if(g!==void 0)++g.referenceCount,o[h]=g;else{if(g=o[h],g!==void 0){g._cacheIndex===null&&(++g.referenceCount,this._addInactiveBinding(g,a,f));continue}const p=t&&t._propertyBindings[h].binding.parsedPath;g=new g4(Ke.create(n,f,p),u.ValueTypeName,u.getValueSize()),++g.referenceCount,this._addInactiveBinding(g,a,f),o[h]=g}A[h].resultBuffer=g.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let o=r[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=o;else{const A=o.knownActions;e._byClipCacheIndex=A.length,A.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,o=this._actionsByClip,A=o[r],a=A.knownActions,c=a[a.length-1],l=e._byClipCacheIndex;c._byClipCacheIndex=l,a[l]=c,a.pop(),e._byClipCacheIndex=null;const h=A.actionByRoot,u=(e._localRoot||this._root).uuid;delete h[u],a.length===0&&delete o[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,o=this._bindingsByRootAndName,A=o[i],a=t[t.length-1],c=e._cacheIndex;a._cacheIndex=c,t[c]=a,t.pop(),delete A[r],Object.keys(A).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new ia(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let o=typeof e=="string"?Xo.findByName(i,e):e;const A=o!==null?o.uuid:e,a=this._actionsByClip[A];let c=null;if(n===void 0&&(o!==null?n=o.blendMode:n=Z1),a!==void 0){const h=a.actionByRoot[r];if(h!==void 0&&h.blendMode===n)return h;c=a.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const l=new Q4(this,o,t,n);return this._bindAction(l,c),this._addInactiveAction(l,A,r),l}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?Xo.findByName(n,e):e,o=r?r.uuid:e,A=this._actionsByClip[o];return A!==void 0&&A.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),o=this._accuIndex^=1;for(let c=0;c!==n;++c)t[c]._update(i,e,r,o);const A=this._bindings,a=this._nActiveBindings;for(let c=0;c!==a;++c)A[c].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const o=r.knownActions;for(let A=0,a=o.length;A!==a;++A){const c=o[A];this._deactivateAction(c);const l=c._cacheIndex,h=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=l,t[l]=h,t.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const A=n[o].actionByRoot,a=A[t];a!==void 0&&(this._deactivateAction(a),this._removeInactiveAction(a))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const o in r){const A=r[o];A.restoreOriginalState(),this._removeInactiveBinding(A)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}_4.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class I4 extends Ei{constructor(e,t,n=1){super(e,t),this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}I4.prototype.isInstancedInterleavedBuffer=!0;const I2=new w,rr=new we,_1=new we;class b4 extends ss{constructor(e){const t=la(e),n=new Xe,i=[],r=[],o=new ie(0,0,1),A=new ie(0,1,0);for(let c=0;c<t.length;c++){const l=t[c];l.parent&&l.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(o.r,o.g,o.b),r.push(A.r,A.g,A.b))}n.setAttribute("position",new $e(i,3)),n.setAttribute("color",new $e(r,3));const a=new Kn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,a),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");_1.copy(this.root.matrixWorld).invert();for(let r=0,o=0;r<t.length;r++){const A=t[r];A.parent&&A.parent.isBone&&(rr.multiplyMatrices(_1,A.matrixWorld),I2.setFromMatrixPosition(rr),i.setXYZ(o,I2.x,I2.y,I2.z),rr.multiplyMatrices(_1,A.parent.matrixWorld),I2.setFromMatrixPosition(rr),i.setXYZ(o+1,I2.x,I2.y,I2.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function la(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push.apply(e,la(s.children[t]));return e}class F4 extends ss{constructor(e=10,t=10,n=4473924,i=8947848){n=new ie(n),i=new ie(i);const r=t/2,o=e/t,A=e/2,a=[],c=[];for(let u=0,f=0,g=-A;u<=t;u++,g+=o){a.push(-A,0,g,A,0,g),a.push(g,0,-A,g,0,A);const p=u===r?n:i;p.toArray(c,f),f+=3,p.toArray(c,f),f+=3,p.toArray(c,f),f+=3,p.toArray(c,f),f+=3}const l=new Xe;l.setAttribute("position",new $e(a,3)),l.setAttribute("color",new $e(c,3));const h=new Kn({vertexColors:!0,toneMapped:!1});super(l,h),this.type="GridHelper"}}const i2=new Uint32Array(512),r2=new Uint32Array(512);for(let s=0;s<256;++s){const e=s-127;e<-27?(i2[s]=0,i2[s|256]=32768,r2[s]=24,r2[s|256]=24):e<-14?(i2[s]=1024>>-e-14,i2[s|256]=1024>>-e-14|32768,r2[s]=-e-1,r2[s|256]=-e-1):e<=15?(i2[s]=e+15<<10,i2[s|256]=e+15<<10|32768,r2[s]=13,r2[s|256]=13):e<128?(i2[s]=31744,i2[s|256]=64512,r2[s]=24,r2[s|256]=24):(i2[s]=31744,i2[s|256]=64512,r2[s]=13,r2[s|256]=13)}const ha=new Uint32Array(2048),Ci=new Uint32Array(64),T4=new Uint32Array(64);for(let s=1;s<1024;++s){let e=s<<13,t=0;for(;(e&8388608)===0;)e<<=1,t-=8388608;e&=-8388609,t+=947912704,ha[s]=e|t}for(let s=1024;s<2048;++s)ha[s]=939524096+(s-1024<<13);for(let s=1;s<31;++s)Ci[s]=s<<23;Ci[31]=1199570944;Ci[32]=2147483648;for(let s=33;s<63;++s)Ci[s]=2147483648+(s-32<<23);Ci[63]=3347054592;for(let s=1;s<64;++s)s!==32&&(T4[s]=1024);kt.create=function(s,e){return console.log("THREE.Curve.create() has been deprecated"),s.prototype=Object.create(kt.prototype),s.prototype.constructor=s,s.prototype.getPoint=e,s};K1.prototype.fromPoints=function(s){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(s)};F4.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};b4.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};R2.prototype.extractUrlBase=function(s){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),a4.extractUrlBase(s)};R2.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};qt.prototype.center=function(s){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(s)};qt.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()};qt.prototype.isIntersectionBox=function(s){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(s)};qt.prototype.isIntersectionSphere=function(s){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(s)};qt.prototype.size=function(s){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(s)};q2.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")};Yn.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()};Qr.prototype.setFromMatrix=function(s){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(s)};yt.prototype.flattenToArrayOffset=function(s,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(s,e)};yt.prototype.multiplyVector3=function(s){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),s.applyMatrix3(this)};yt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};yt.prototype.applyToBufferAttribute=function(s){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),s.applyMatrix3(this)};yt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};yt.prototype.getInverse=function(s){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(s).invert()};we.prototype.extractPosition=function(s){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(s)};we.prototype.flattenToArrayOffset=function(s,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(s,e)};we.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new w().setFromMatrixColumn(this,3)};we.prototype.setRotationFromQuaternion=function(s){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(s)};we.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};we.prototype.multiplyVector3=function(s){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),s.applyMatrix4(this)};we.prototype.multiplyVector4=function(s){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),s.applyMatrix4(this)};we.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};we.prototype.rotateAxis=function(s){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),s.transformDirection(this)};we.prototype.crossVector=function(s){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),s.applyMatrix4(this)};we.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};we.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};we.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};we.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};we.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};we.prototype.applyToBufferAttribute=function(s){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),s.applyMatrix4(this)};we.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};we.prototype.makeFrustum=function(s,e,t,n,i,r){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(s,e,n,t,i,r)};we.prototype.getInverse=function(s){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(s).invert()};m2.prototype.isIntersectionLine=function(s){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(s)};Ut.prototype.multiplyVector3=function(s){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),s.applyQuaternion(this)};Ut.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()};Hn.prototype.isIntersectionBox=function(s){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(s)};Hn.prototype.isIntersectionPlane=function(s){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(s)};Hn.prototype.isIntersectionSphere=function(s){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(s)};ht.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()};ht.prototype.barycoordFromPoint=function(s,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(s,e)};ht.prototype.midpoint=function(s){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(s)};ht.prototypenormal=function(s){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(s)};ht.prototype.plane=function(s){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(s)};ht.barycoordFromPoint=function(s,e,t,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),ht.getBarycoord(s,e,t,n,i)};ht.normal=function(s,e,t,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),ht.getNormal(s,e,t,n)};yi.prototype.extractAllPoints=function(s){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(s)};yi.prototype.extrude=function(s){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Wn(this,s)};yi.prototype.makeGeometry=function(s){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new hs(this,s)};V.prototype.fromAttribute=function(s,e,t){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(s,e,t)};V.prototype.distanceToManhattan=function(s){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(s)};V.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};w.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};w.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};w.prototype.getPositionFromMatrix=function(s){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(s)};w.prototype.getScaleFromMatrix=function(s){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(s)};w.prototype.getColumnFromMatrix=function(s,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,s)};w.prototype.applyProjection=function(s){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(s)};w.prototype.fromAttribute=function(s,e,t){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(s,e,t)};w.prototype.distanceToManhattan=function(s){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(s)};w.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};Je.prototype.fromAttribute=function(s,e,t){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(s,e,t)};Je.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};Ne.prototype.getChildByName=function(s){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(s)};Ne.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};Ne.prototype.translate=function(s,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,s)};Ne.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};Ne.prototype.applyMatrix=function(s){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(s)};Object.defineProperties(Ne.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(s){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=s}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});ge.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(ge.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),w3},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});PA.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};mt.prototype.setLens=function(s,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(s)};Object.defineProperties(a2.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(s){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=s}},shadowCameraLeft:{set:function(s){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=s}},shadowCameraRight:{set:function(s){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=s}},shadowCameraTop:{set:function(s){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=s}},shadowCameraBottom:{set:function(s){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=s}},shadowCameraNear:{set:function(s){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=s}},shadowCameraFar:{set:function(s){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=s}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(s){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=s}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(s){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=s}},shadowMapHeight:{set:function(s){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=s}}});Object.defineProperties(ot.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===mr},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(mr)}}});ot.prototype.setDynamic=function(s){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(s===!0?mr:pi),this};ot.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},ot.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Xe.prototype.addIndex=function(s){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(s)};Xe.prototype.addAttribute=function(s,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(s,new ot(arguments[1],arguments[2]))):s==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(s,e)};Xe.prototype.addDrawCall=function(s,e,t){t!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(s,e)};Xe.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()};Xe.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};Xe.prototype.removeAttribute=function(s){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(s)};Xe.prototype.applyMatrix=function(s){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(s)};Object.defineProperties(Xe.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Ei.prototype.setDynamic=function(s){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(s===!0?mr:pi),this};Ei.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Wn.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};Wn.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};Wn.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};It.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};Object.defineProperties(dt.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new ie}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(s){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=s===fA}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(s){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=s}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}});Object.defineProperties(Ze.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(s){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=s}}});We.prototype.clearTarget=function(s,e,t,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(s),this.clear(e,t,n)};We.prototype.animate=function(s){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(s)};We.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()};We.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()};We.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision};We.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()};We.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")};We.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")};We.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")};We.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")};We.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")};We.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")};We.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures};We.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")};We.prototype.enableScissorTest=function(s){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(s)};We.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};We.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};We.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};We.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};We.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};We.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};We.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};We.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};We.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};We.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()};Object.defineProperties(We.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(s){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=s}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(s){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=s}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(s){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=s===!0?Ve:B2}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});Object.defineProperties(RA.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(je.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(s){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=s}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(s){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=s}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(s){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=s}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(s){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=s}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(s){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=s}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(s){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=s}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(s){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=s}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(s){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=s}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(s){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=s}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(s){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=s}}});p4.prototype.load=function(s){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new u4().load(s,function(n){e.setBuffer(n)}),this};$1.prototype.updateCubeMap=function(s,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(s,e)};$1.prototype.clear=function(s,e,t,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(s,e,t,n)};X2.crossOrigin=void 0;X2.loadTexture=function(s,e,t,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new Dr;i.setCrossOrigin(this.crossOrigin);const r=i.load(s,t,void 0,n);return e&&(r.mapping=e),r};X2.loadTextureCube=function(s,e,t,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new s4;i.setCrossOrigin(this.crossOrigin);const r=i.load(s,t,void 0,n);return e&&(r.mapping=e),r};X2.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};X2.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:J1}}));typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=J1);const Dt={transparent:"transparent",black:"#000",white:"#fff",slate:{_50:"#f8fafc",_100:"#f1f5f9",_200:"#e2e8f0",_300:"#cbd5e1",_400:"#94a3b8",_500:"#64748b",_600:"#475569",_700:"#334155",_800:"#1e293b",_900:"#0f172a"},gray:{_50:"#f9fafb",_100:"#f3f4f6",_200:"#e5e7eb",_300:"#d1d5db",_400:"#9ca3af",_500:"#6b7280",_600:"#4b5563",_700:"#374151",_800:"#1f2937",_900:"#111827"},zinc:{_50:"#fafafa",_100:"#f4f4f5",_200:"#e4e4e7",_300:"#d4d4d8",_400:"#a1a1aa",_500:"#71717a",_600:"#52525b",_700:"#3f3f46",_800:"#27272a",_900:"#18181b"},neutral:{_50:"#fafafa",_100:"#f5f5f5",_200:"#e5e5e5",_300:"#d4d4d4",_400:"#a3a3a3",_500:"#737373",_600:"#525252",_700:"#404040",_800:"#262626",_900:"#171717"},stone:{_50:"#fafaf9",_100:"#f5f5f4",_200:"#e7e5e4",_300:"#d6d3d1",_400:"#a8a29e",_500:"#78716c",_600:"#57534e",_700:"#44403c",_800:"#292524",_900:"#1c1917"},red:{_50:"#fef2f2",_100:"#fee2e2",_200:"#fecaca",_300:"#fca5a5",_400:"#f87171",_500:"#ef4444",_600:"#dc2626",_700:"#b91c1c",_800:"#991b1b",_900:"#7f1d1d"},orange:{_50:"#fff7ed",_100:"#ffedd5",_200:"#fed7aa",_300:"#fdba74",_400:"#fb923c",_500:"#f97316",_600:"#ea580c",_700:"#c2410c",_800:"#9a3412",_900:"#7c2d12"},amber:{_50:"#fffbeb",_100:"#fef3c7",_200:"#fde68a",_300:"#fcd34d",_400:"#fbbf24",_500:"#f59e0b",_600:"#d97706",_700:"#b45309",_800:"#92400e",_900:"#78350f"},yellow:{_50:"#fefce8",_100:"#fef9c3",_200:"#fef08a",_300:"#fde047",_400:"#facc15",_500:"#eab308",_600:"#ca8a04",_700:"#a16207",_800:"#854d0e",_900:"#713f12"},lime:{_50:"#f7fee7",_100:"#ecfccb",_200:"#d9f99d",_300:"#bef264",_400:"#a3e635",_500:"#84cc16",_600:"#65a30d",_700:"#4d7c0f",_800:"#3f6212",_900:"#365314"},green:{_50:"#f0fdf4",_100:"#dcfce7",_200:"#bbf7d0",_300:"#86efac",_400:"#4ade80",_500:"#22c55e",_600:"#16a34a",_700:"#15803d",_800:"#166534",_900:"#14532d"},emerald:{_50:"#ecfdf5",_100:"#d1fae5",_200:"#a7f3d0",_300:"#6ee7b7",_400:"#34d399",_500:"#10b981",_600:"#059669",_700:"#047857",_800:"#065f46",_900:"#064e3b"},teal:{_50:"#f0fdfa",_100:"#ccfbf1",_200:"#99f6e4",_300:"#5eead4",_400:"#2dd4bf",_500:"#14b8a6",_600:"#0d9488",_700:"#0f766e",_800:"#115e59",_900:"#134e4a"},cyan:{_50:"#ecfeff",_100:"#cffafe",_200:"#a5f3fc",_300:"#67e8f9",_400:"#22d3ee",_500:"#06b6d4",_600:"#0891b2",_700:"#0e7490",_800:"#155e75",_900:"#164e63"},sky:{_50:"#f0f9ff",_100:"#e0f2fe",_200:"#bae6fd",_300:"#7dd3fc",_400:"#38bdf8",_500:"#0ea5e9",_600:"#0284c7",_700:"#0369a1",_800:"#075985",_900:"#0c4a6e"},blue:{_50:"#eff6ff",_100:"#dbeafe",_200:"#bfdbfe",_300:"#93c5fd",_400:"#60a5fa",_500:"#3b82f6",_600:"#2563eb",_700:"#1d4ed8",_800:"#1e40af",_900:"#1e3a8a"},indigo:{_50:"#eef2ff",_100:"#e0e7ff",_200:"#c7d2fe",_300:"#a5b4fc",_400:"#818cf8",_500:"#6366f1",_600:"#4f46e5",_700:"#4338ca",_800:"#3730a3",_900:"#312e81"},violet:{_50:"#f5f3ff",_100:"#ede9fe",_200:"#ddd6fe",_300:"#c4b5fd",_400:"#a78bfa",_500:"#8b5cf6",_600:"#7c3aed",_700:"#6d28d9",_800:"#5b21b6",_900:"#4c1d95"},purple:{_50:"#faf5ff",_100:"#f3e8ff",_200:"#e9d5ff",_300:"#d8b4fe",_400:"#c084fc",_500:"#a855f7",_600:"#9333ea",_700:"#7e22ce",_800:"#6b21a8",_900:"#581c87"},fuchsia:{_50:"#fdf4ff",_100:"#fae8ff",_200:"#f5d0fe",_300:"#f0abfc",_400:"#e879f9",_500:"#d946ef",_600:"#c026d3",_700:"#a21caf",_800:"#86198f",_900:"#701a75"},pink:{_50:"#fdf2f8",_100:"#fce7f3",_200:"#fbcfe8",_300:"#f9a8d4",_400:"#f472b6",_500:"#ec4899",_600:"#db2777",_700:"#be185d",_800:"#9d174d",_900:"#831843"},rose:{_50:"#fff1f2",_100:"#ffe4e6",_200:"#fecdd3",_300:"#fda4af",_400:"#fb7185",_500:"#f43f5e",_600:"#e11d48",_700:"#be123c",_800:"#9f1239",_900:"#881337"}};var S4=`varying vec2 vUv;
uniform float width;
uniform float height;
uniform float shadowSize;
uniform float shadowOpacity;

// based off of https://madebyevan.com/shaders/fast-rounded-rectangle-shadows/

// This approximates the error function, needed for the gaussian integral
vec4 erf(vec4 x) {
  vec4 s = sign(x), a = abs(x);
  x = 1.0 + (0.278393 + (0.230389 + 0.078108 * (a * a)) * a) * a;
  x *= x;
  return s - s / (x * x);
}

// Return the mask for the shadow of a box from lower to upper
float boxShadow(vec2 lower, vec2 upper, vec2 point, float sigma) {
  vec4 query = vec4(point - lower, point - upper);
  vec4 integral = 0.5 + 0.5 * erf(query * (sqrt(0.5) / sigma));
  return (integral.z - integral.x) * (integral.w - integral.y);
}

void main() {
    vec2 uv = (vUv - 0.5) * 2.;
    float aspect = width / height;
    uv.x *= aspect;
    float padding = shadowSize / height;
    float sigma = padding / 3.;
    float t = boxShadow(vec2(-aspect,-1.) + padding, vec2(aspect, 1.) - padding,  uv, sigma);
    gl_FragColor = vec4(0., 0., 0, shadowOpacity * pow(t, .5));
}
`;const I1={};function ua(s,e,t,n,i){const r=`${s}:${e}:${t}:${n}:{smoothness}`;if(r in I1)return I1[r];const o=s/2-t,A=e/2-n,a=t/s,c=(s-t)/s,l=n/e,h=(e-n)/e;let u=[o,A,0,-o,A,0,-o,-A,0,o,-A,0],f=[c,h,a,h,a,l,c,l],g=[3*(i+1)+3,3*(i+1)+4,i+4,i+5,2*(i+1)+4,2,1,2*(i+1)+3,3,4*(i+1)+3,4,0],p=[g[0],g[1],g[2],g[0],g[2],g[3],g[4],g[5],g[6],g[4],g[6],g[7],g[8],g[9],g[10],g[8],g[10],g[11]],d,m,v,y,Q,M,I,T;for(let X=0;X<4;X++){y=X<1||X>2?o:-o,Q=X<2?A:-A,M=X<1||X>2?c:a,I=X<2?h:l;for(let z=0;z<=i;z++)d=Math.PI/2*(X+z/i),m=Math.cos(d),v=Math.sin(d),u.push(y+t*m,Q+n*v,0),f.push(M+a*m,I+l*v),z<i&&(T=(i+1)*X+z+4,p.push(X,T,T+1))}const U=new Xe;return U.setIndex(new ot(new Uint32Array(p),1)),U.setAttribute("position",new ot(new Float32Array(u),3)),U.setAttribute("uv",new ot(new Float32Array(f),2)),I1[r]=U,U}const nA=new it;class ui{constructor(e){x(this,"object3d",new Ne);x(this,"mesh");x(this,"shadow");x(this,"options");var t,n,i;this.options={shadowSize:(t=e.shadowSize)!=null?t:16,shadowOpacity:(n=e.shadowOpacity)!=null?n:.25,customMaterial:(i=e.customMaterial)!=null?i:new Qt({})},this.mesh=new ge(nA,this.options.customMaterial),this.object3d.add(this.mesh),this.shadow=new ge(nA,new Ze({fragmentShader:S4,vertexShader:Et,uniforms:{width:{value:0},height:{value:0},shadowSize:{value:0},shadowOpacity:{value:0}},transparent:!0})),this.object3d.add(this.shadow)}getMaterial(){return this.mesh.material}setTexture(e,t=!1){this.mesh.material.map=e,this.mesh.material.needsUpdate=t}setSize(e,t){this.mesh.geometry=ua(1,1,4/e,4/t,4),this.mesh.position.z=1,this.object3d.scale.x=e,this.object3d.scale.y=t;const i=this.options.shadowSize;this.shadow.scale.x=1+i/e,this.shadow.scale.y=1+i/t,this.shadow.position.y=-i/t/8,this.shadow.position.z=-.5,this.shadow.material.uniforms.width.value=e,this.shadow.material.uniforms.height.value=t,this.shadow.material.uniforms.shadowSize.value=i,this.shadow.material.uniforms.shadowOpacity.value=this.options.shadowOpacity}}const Wt=()=>window.innerWidth,s2=()=>window.innerHeight;function da(s){const e={};return new Proxy(s,{set:(t,n,i)=>(e[n]=i,!0),get:(t,n)=>(e[n]||(e[n]=new s[n]),e[n])})}const Rr=document.createElement("canvas");Rr.width=256;Rr.height=1;const sr=Rr.getContext("2d");if(sr){const s=sr.createLinearGradient(0,0,256,0);s.addColorStop(0,"rgba(255, 255, 255, 1)"),s.addColorStop(1,"rgba(255, 255, 255, 0)"),sr.fillStyle=s,sr.fillRect(0,0,256,1)}var D4=`varying vec2 vUv;
uniform float width;
uniform float height;
uniform float shadowSize;
uniform float shadowOpacity;
uniform float[600] beatBins;
uniform float beatOffset;
uniform float bpm;
uniform float beats;


void main() {
    float offsettedBeats = beats + beatOffset;
    int beat = int(vUv.x * beats);

    float pixel = 1. / width;

    vec3 slate_400 = vec3(float(0x94) / 255., float(0xa3) / 255., float(0xb8) / 255.);
    vec3 slate_500 = vec3(float(0x64) / 255., float(0x74) / 255., float(0x8b) / 255.);
    vec3 slate_600 = vec3(float(0x47) / 255., float(0x55) / 255., float(0x69) / 255.);
    vec3 slate_700 = vec3(float(0x33) / 255., float(0x41) / 255., float(0x55) / 255.);
    vec3 slate_800 = vec3(float(0x1e) / 255., float(0x29) / 255., float(0x3b) / 255.);
    vec3 color = slate_800;
    float barGroups = beats / 16.;
    float isStrongBeat = step(1., mod(vUv.x * width, width / beats * 4.));
    vec3 beatColor = mix(slate_400, slate_500, isStrongBeat);
    color = mix(color, slate_700, float(0xcc) / 255. * step(1., mod(-beatOffset / 16. + vUv.x * barGroups, 2.)));
    color = mix(color, slate_600, float(0xcc) / 255. * (1. - step(beatBins[beat], abs(vUv.y - 0.5))));
    color = mix(color, beatColor, float(0x88) / 255. * (1. - step(.5 + (1. - isStrongBeat), mod(vUv.x * width, width / beats))));
    gl_FragColor = vec4(color, 1.);
}
`;function _n(s,e,t){return t=Pn(0,t,1),e*t+s*(1-t)}function Pn(s,e,t){return Math.min(t,Math.max(e,s))}function w2(s,e,t){t=Pn(0,t,1);var n=t*t*t*(t*(t*6-15)+10);return e*n+s*(1-n)}function U4(s,e,t){return t=--t*t*t+1,_n(s,e,t)}const Pt=48,b2=40,or=8,b1=12,Ar=new it,F1={},G4=s=>{if(s in F1)return F1[s];const e=new ui({shadowSize:8,shadowOpacity:.06});return F1[s]=e,e.setTexture(N4(s)),e},R4=new at,T1={},N4=s=>{if(s in T1)return T1[s];{const e=document.createElement("canvas");e.width=1024*window.devicePixelRatio,e.height=b2*window.devicePixelRatio;const t=e.getContext("2d");if(!t)return R4;t.fillStyle=Dt.slate._500,t.fillRect(0,0,e.width,e.height),t.scale(window.devicePixelRatio,window.devicePixelRatio),t.fillStyle=Dt.slate._300,t.textBaseline="middle",t.textAlign="left",t.font="16px Barlow",t.fillText(s,16,b2/2);const n=new jn(e);return T1[s]=n,n}};class z4{constructor(e){x(this,"music",null);x(this,"width",1);x(this,"nodeContainer",new Ne);x(this,"cuePoints");x(this,"renin");x(this,"audioBar");x(this,"zoomStartFrame",0);x(this,"zoomEndFrame",0);x(this,"zoomAmount",1);x(this,"audioTrack");x(this,"obj",new Ne);this.renin=e,this.audioBar=new ui({shadowSize:8,shadowOpacity:.16,customMaterial:new Ze({fragmentShader:D4,vertexShader:Et,uniforms:{width:{value:0},height:{value:0},shadowSize:{value:0},shadowOpacity:{value:0},beatBins:{value:[]},bpm:{value:0},beats:{value:0},beatOffset:{value:0}},transparent:!0})}),this.audioBar.setSize(1,Pt),this.obj.add(this.audioBar.object3d),this.audioTrack=new ge(Ar,new Qt({map:new jn(Rr),color:Dt.green._500})),this.audioTrack.material.map&&(this.audioTrack.material.map.needsUpdate=!0,this.audioTrack.material.needsUpdate=!0,this.audioTrack.material.transparent=!0,this.audioTrack.material.opacity=.5,this.audioTrack.material.map.repeat.set(-1,1),this.audioTrack.material.map.wrapS=dr);const t=new ge(Ar,new Qt({color:Dt.green._500}));t.position.x=.5,t.scale.x=2/b1,this.audioTrack.add(t),this.cuePoints=[new ge(Ar,new Qt({color:Dt.orange._500})),new ge(Ar,new Qt({color:Dt.orange._300}))],this.audioTrack.scale.set(b1,Pt,1),this.cuePoints[0].scale.set(2,Pt,1),this.cuePoints[1].scale.set(2,Pt,1),this.obj.add(this.audioTrack),this.obj.add(this.cuePoints[0]),this.obj.add(this.cuePoints[1])}getClickedFrame(e){return this.music?_n(this.zoomStartFrame,this.zoomEndFrame,e):0}zoom(e){if(!this.music)return;this.zoomAmount=Math.max(1,this.zoomAmount*e);const t=this.music.getDuration()*60|0;if(this.zoomAmount===1){this.zoomStartFrame=0,this.zoomEndFrame=t;return}const n=this.renin.frame,i=(n-this.zoomStartFrame)/(this.zoomEndFrame-this.zoomStartFrame),r=t/this.zoomAmount;this.zoomStartFrame=n-i*r,this.zoomEndFrame=n+(1-i)*r}pan(e){this.zoomStartFrame+=e*this.zoomAmount*100,this.zoomEndFrame+=e*this.zoomAmount*100}render(e,t){if(!this.music)return;const n=this.music.getDuration()*60|0,i=(this.zoomEndFrame-this.zoomStartFrame)/n;this.obj.scale.x=1/i,this.audioTrack.scale.x=i*16,this.cuePoints[0].scale.x=i*2,this.cuePoints[1].scale.x=i*2,this.audioBar.getMaterial().uniforms.width.value=this.width/i;const r=(-.5+(this.zoomEndFrame+this.zoomStartFrame)/n/2)*(this.width-32);this.obj.position.x=-r/i,this.audioTrack.material.opacity=this.music.paused?0:.3,this.audioTrack.material.needsUpdate=!0;for(const[l,h]of this.cuePoints.entries()){h.visible=t[l]!==void 0;const u=t[l]/60/this.music.getDuration();h.position.z=1.5,h.position.x=16+u*(this.width-32)-this.width/2}const o=this.music.getCurrentTime()/this.music.getDuration();this.audioTrack.position.z=10,this.audioTrack.position.x=16+o*(this.width-32)-this.width/2-b1/2*i;for(const l of this.nodeContainer.children)this.nodeContainer.remove(l);this.obj.add(this.nodeContainer);let A=0;const a=(l,h=0,u,f)=>{const g=Math.max(l.startFrame,u),p=Math.min(l.endFrame===-1?f:l.endFrame,f);if(A=Math.max(h,A),"children"in l&&l.children){let y=0;for(const Q of Object.values(l.children))a(Q,h+ ++y,g,p)}const d=G4(l.constructor.name),m=(p-g)/60/e.music.getDuration();d.setSize(m*(this.width-32),b2),d.object3d.position.x=g/60/e.music.getDuration()*(this.width-32)-(this.width-32)/2+d.object3d.scale.x/2,d.object3d.position.z=2,d.object3d.position.y=(b2+or)*h;const v=(this.width-32)/1024*this.zoomAmount;if(d.getMaterial().map.repeat.set(v*m,1),this.nodeContainer.add(d.object3d),l.renderTarget||l.screen){const y=l.renderTarget||this.renin.screenRenderTarget,Q=b2/9*16/this.zoomAmount,M=b2,I=new ge(ua(1,1,4/Q,4/M,32),new Qt({map:y.texture}));I.position.z=5,I.position.x=d.object3d.position.x+d.object3d.scale.x/2-Q/2,I.position.y=d.object3d.position.y,I.scale.x=Q,I.scale.y=M,this.nodeContainer.add(I)}};a(e.root,0,e.root.startFrame,e.root.endFrame===-1?e.music.getDuration()*60:e.root.endFrame);const c=Pt+(A+1)*(b2+or)+or;this.audioTrack.scale.y=c,this.audioTrack.position.y=-s2()/2+c/2+16,this.cuePoints[0].scale.y=c,this.cuePoints[1].scale.y=c,this.cuePoints[0].position.y=this.audioTrack.position.y,this.cuePoints[1].position.y=this.audioTrack.position.y}resize(e,t){this.width=e,this.audioBar.setSize(e-32,Pt),this.audioBar.getMaterial().uniforms.width.value=e,this.audioBar.getMaterial().uniforms.height.value=Pt,this.audioBar.object3d.position.y=-t/2+Pt/2+16,this.audioTrack.position.y=-t/2+Pt/2+16,this.cuePoints[0].position.y=-t/2+Pt/2+16,this.cuePoints[1].position.y=-t/2+Pt/2+16,this.nodeContainer.position.y=-t/2+Pt+b2+or,this.zoom(1)}setMusic(e,t,n){this.music=e;const i=t.getChannelData(0),r=n.bpm/60*i.length/e.audioContext.sampleRate,o=r,A=i.length/o,a=[];for(let l=0;l<o;l++){const h=[];for(let f=0;f<A;f++){const g=i[l*A+f|0];h.push(Math.abs(g))}const u=h.reduce((f,g)=>f+g,0)/h.length*2;a.push(u)}const c=this.audioBar.getMaterial();c.uniforms.beatBins.value=a,c.uniforms.bpm.value=n.bpm,c.uniforms.beats.value=r,c.uniforms.beatOffset.value=n.beatOffset,this.zoom(1)}}class L4{constructor(e){x(this,"step",0);x(this,"beat",!1);x(this,"framesPerSubdivision");x(this,"music");const n=e.bpm*e.subdivision/60,i=60;this.framesPerSubdivision=i/n,this.music=e}flash(e,t,n=0){const r=((this.stepForFrame(e)-n)/t|0)*t,o=this.frameForStep(r),A=this.frameForStep(r+t);return(e-o)/(A-o)}stepForFrame(e){return(e+1.5)/this.framesPerSubdivision|0}frameForStep(e){return e*this.framesPerSubdivision-.5|0}update(e){this.beat=!1;const t=(e+1.5)/this.framesPerSubdivision|0,n=(e+.5)/this.framesPerSubdivision|0;t>n&&(this.beat=!0),this.step=(e+1.5)/this.framesPerSubdivision|0}}var P4=`uniform sampler2D tDiffuse;

varying vec2 vUv;

void main() {
    vUv = uv;
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`;const k4=()=>{const s=e=>{const t=customElements.get("vite-error-overlay");if(!t)return;console.log(e);const n=new t(e);document.body.appendChild(n)};window.addEventListener("error",({error:e})=>s(e)),window.addEventListener("unhandledrejection",({reason:e})=>s(e))};class Y4{constructor(){x(this,"audioContext",new AudioContext);x(this,"volumeNode");x(this,"currentLocalTime",0);x(this,"globalTimeOffset",0);x(this,"playbackRate",1);x(this,"paused",!0);x(this,"buffer",null);x(this,"loaded",!1);x(this,"bufferSource",null);this.volumeNode=this.audioContext.createGain(),this.volumeNode.gain.value=1,this.volumeNode.connect(this.audioContext.destination)}setBuffer(e){this.buffer=e,this.loaded=!0}setCurrentTime(e){this.currentLocalTime=e,this.paused||this.play()}setPlaybackRate(e){const t=!this.paused;this.pause(),this.playbackRate=e,t&&this.play()}getCurrentTime(){const e=this.audioContext;if(e===null)return 0;let t=this.currentLocalTime;return this.paused||(t=this.currentLocalTime+(e.currentTime-this.globalTimeOffset)*this.playbackRate),t=Math.min(t,this.getDuration()),t}setVolume(e){this.volumeNode&&(this.volumeNode.gain.value=e)}getVolume(){var e,t;return(t=(e=this.volumeNode)==null?void 0:e.gain.value)!=null?t:0}play(){var e,t;!this.loaded||!this.audioContext||!this.volumeNode||(this.globalTimeOffset=this.audioContext.currentTime,this.paused||((e=this.bufferSource)==null||e.stop(0),(t=this.bufferSource)==null||t.disconnect(this.volumeNode)),this.paused=!1,this.bufferSource=this.audioContext.createBufferSource(),this.bufferSource.buffer=this.buffer,this.bufferSource.connect(this.volumeNode),this.bufferSource.playbackRate.value=this.playbackRate,this.bufferSource.start(0,this.currentLocalTime))}getDuration(){var e,t;return(t=(e=this.buffer)==null?void 0:e.duration)!=null?t:0}pause(){var e,t;this.setCurrentTime(this.getCurrentTime()),this.paused=!0,(e=this.bufferSource)==null||e.stop(0),this.volumeNode&&((t=this.bufferSource)==null||t.disconnect(this.volumeNode))}}class H4{constructor(){x(this,"startTime",0);x(this,"endTime",0);x(this,"startValue",0);x(this,"endValue",0);x(this,"value",0)}transition(e,t,n){this.startTime=n,this.endTime=n+t,this.startValue=this.value,this.endValue=e}update(e){const t=this.value,n=Pn(0,(e-this.startTime)/(this.endTime-this.startTime),1);return this.value=U4(this.startValue,this.endValue,n),t!==this.value}}var V4=`varying vec2 vUv;
uniform sampler2D screen;
uniform sampler2D thirdsOverlay;
uniform float thirdsOverlayOpacity;

void main() {
    vec3 color = texture2D(screen, vUv.xy).rgb;
    float a = texture2D(thirdsOverlay, vUv.xy).a;
    vec3 inverted = 1. - color;
    color = mix(color, inverted, a * thirdsOverlayOpacity);
    gl_FragColor = vec4(color, 1.);
}
`,K4=`#define RT_LENGTH 128

varying vec2 vUv;
uniform float[RT_LENGTH] renderTimesGPU;
uniform int renderTimesGPUIndex;
uniform float[RT_LENGTH] renderTimesCPU;
uniform int renderTimesCPUIndex;
uniform float[RT_LENGTH] updateTimes;
uniform int updateTimesIndex;
uniform float[RT_LENGTH] uiUpdateTimes;
uniform int uiUpdateTimesIndex;
uniform float[RT_LENGTH] memoryPercentages;
uniform int memoryPercentagesIndex;
uniform float totalJSHeapSize;
uniform float jsHeapSizeLimit;
uniform sampler2D overlay;

float modI(float a,float b) {
    float m=a-floor((a+0.5)/b)*b;
    return floor(m+0.5);
}


void main() {

    float height = 4000. / 60.;

    float time = 1.;
    int indexGPU = int(modI((vUv.x) * float(RT_LENGTH) + float(RT_LENGTH) + float(renderTimesGPUIndex), float(RT_LENGTH)));
    int indexCPU = int(modI((vUv.x) * float(RT_LENGTH) + float(RT_LENGTH) + float(renderTimesCPUIndex), float(RT_LENGTH)));
    int indexUpdate = int(modI((vUv.x) * float(RT_LENGTH) + float(RT_LENGTH) + float(updateTimesIndex), float(RT_LENGTH)));
    int indexUIUpdate = int(modI((vUv.x) * float(RT_LENGTH) + float(RT_LENGTH) + float(uiUpdateTimesIndex), float(RT_LENGTH)));
    int indexMemoryPercentages = int(modI((vUv.x) * float(RT_LENGTH) + float(RT_LENGTH) + float(memoryPercentagesIndex), float(RT_LENGTH)));
    float valueGPU = renderTimesGPU[indexGPU];
    float valueCPU = renderTimesCPU[indexCPU];
    float valueUpdate = updateTimes[indexUpdate];
    float valueUIUpdate = uiUpdateTimes[indexUIUpdate];
    float valueMemory = memoryPercentages[indexMemoryPercentages] / totalJSHeapSize;
    float valueMemoryFull = memoryPercentages[indexMemoryPercentages] / jsHeapSizeLimit;
    vec3 slate_400 = vec3(float(0x94) / 255., float(0xa3) / 255., float(0xb8) / 255.);
    vec3 slate_500 = vec3(float(0x64) / 255., float(0x74) / 255., float(0x8b) / 255.);
    vec3 slate_600 = vec3(float(0x47) / 255., float(0x55) / 255., float(0x69) / 255.);
    vec3 slate_700 = vec3(float(0x33) / 255., float(0x41) / 255., float(0x55) / 255.);
    vec3 slate_800 = vec3(float(0x1e) / 255., float(0x29) / 255., float(0x3b) / 255.);
    vec3 fuschia_50 = vec3(float(0xfd) / 255., float(0xf4) / 255., float(0xff) / 255.);
    vec3 fuschia_100 = vec3(float(0xfa) / 255., float(0xe8) / 255., float(0xff) / 255.);
    vec3 fuschia_200 = vec3(float(0xf5) / 255., float(0xd0) / 255., float(0xfe) / 255.);
    vec3 fuschia_300 = vec3(float(0xf0) / 255., float(0xab) / 255., float(0xfc) / 255.);
    vec3 fuschia_400 = vec3(float(0xe8) / 255., float(0x79) / 255., float(0xf9) / 255.);
    vec3 fuschia_500 = vec3(float(0xd9) / 255., float(0x46) / 255., float(0xef) / 255.);
    vec3 fuschia_600 = vec3(float(0xc0) / 255., float(0x26) / 255., float(0xd3) / 255.);
    vec3 fuschia_700 = vec3(float(0xa2) / 255., float(0x1c) / 255., float(0xaf) / 255.);
    vec3 fuschia_800 = vec3(float(0x86) / 255., float(0x19) / 255., float(0x8f) / 255.);
    vec3 fuschia_900 = vec3(float(0x70) / 255., float(0x1a) / 255., float(0x75) / 255.);
    vec3 rose_50 = vec3(float(0xfd) / 255., float(0xf2) / 255., float(0xf8) / 255.);
    vec3 rose_100 = vec3(float(0xfc) / 255., float(0xe7) / 255., float(0xf3) / 255.);
    vec3 rose_200 = vec3(float(0xfb) / 255., float(0xcf) / 255., float(0xe8) / 255.);
    vec3 rose_300 = vec3(float(0xf9) / 255., float(0xa8) / 255., float(0xd4) / 255.);
    vec3 rose_400 = vec3(float(0xf4) / 255., float(0x72) / 255., float(0xb6) / 255.);
    vec3 rose_500 = vec3(float(0xec) / 255., float(0x48) / 255., float(0x99) / 255.);
    vec3 rose_600 = vec3(float(0xdb) / 255., float(0x27) / 255., float(0x77) / 255.);
    vec3 rose_700 = vec3(float(0xbe) / 255., float(0x18) / 255., float(0x5d) / 255.);
    vec3 rose_800 = vec3(float(0x9d) / 255., float(0x17) / 255., float(0x4d) / 255.);
    vec3 rose_900 = vec3(float(0x83) / 255., float(0x18) / 255., float(0x43) / 255.);
    vec3 sky_50 = vec3(float(0xf0) / 255., float(0xf9) / 255., float(0xff) / 255.);
    vec3 sky_100 = vec3(float(0xe0) / 255., float(0xf2) / 255., float(0xfe) / 255.);
    vec3 sky_200 = vec3(float(0xba) / 255., float(0xe6) / 255., float(0xfd) / 255.);
    vec3 sky_300 = vec3(float(0x7d) / 255., float(0xd3) / 255., float(0xfc) / 255.);
    vec3 sky_400 = vec3(float(0x38) / 255., float(0xbd) / 255., float(0xf8) / 255.);
    vec3 sky_500 = vec3(float(0x0e) / 255., float(0xa5) / 255., float(0xe9) / 255.);
    vec3 sky_600 = vec3(float(0x02) / 255., float(0x84) / 255., float(0xc7) / 255.);
    vec3 sky_700 = vec3(float(0x03) / 255., float(0x69) / 255., float(0xa1) / 255.);
    vec3 sky_800 = vec3(float(0x07) / 255., float(0x59) / 255., float(0x85) / 255.);
    vec3 sky_900 = vec3(float(0x0c) / 255., float(0x4a) / 255., float(0x6e) / 255.);
    vec3 emerald_50 = vec3(float(0xec) / 255., float(0xfd) / 255., float(0xf5) / 255.);
    vec3 emerald_100 = vec3(float(0xd1) / 255., float(0xfa) / 255., float(0xe5) / 255.);
    vec3 emerald_200 = vec3(float(0xa7) / 255., float(0xf3) / 255., float(0xd0) / 255.);
    vec3 emerald_300 = vec3(float(0x6e) / 255., float(0xe7) / 255., float(0xb7) / 255.);
    vec3 emerald_400 = vec3(float(0x34) / 255., float(0xd3) / 255., float(0x99) / 255.);
    vec3 emerald_500 = vec3(float(0x10) / 255., float(0xb9) / 255., float(0x81) / 255.);
    vec3 emerald_600 = vec3(float(0x05) / 255., float(0x96) / 255., float(0x69) / 255.);
    vec3 emerald_700 = vec3(float(0x04) / 255., float(0x78) / 255., float(0x57) / 255.);
    vec3 emerald_800 = vec3(float(0x06) / 255., float(0x5f) / 255., float(0x46) / 255.);
    vec3 emerald_900 = vec3(float(0x06) / 255., float(0x4e) / 255., float(0x3b) / 255.);
    vec3 color = slate_800;
    float isBarGPU = 1. - step(valueGPU, (1. - vUv.y) * height);
    float isBarCPU = 1. - step(valueCPU + valueUpdate + valueUIUpdate, vUv.y * height);
    float isBarUpdate = 1. - step(valueUpdate + valueUIUpdate, vUv.y * height);
    float isBarUIUpdate = 1. - step(valueUIUpdate, vUv.y * height);
    float isBarMemory = (1. - step(valueMemory, vUv.y * 4. - 1.5)) * step(1.5, vUv.y * 4.);
    float isBarMemoryFull = (1. - step(valueMemoryFull, vUv.y * 4. - 1.5)) * step(1.5, vUv.y * 4.);
    float isAboveLimitBottom = step(height / 4., vUv.y * height);
    float isAboveLimitTop = step(height / 4., (1. - vUv.y) * height);
    float isInCenterLimit = (1. - step(height / 4. * 2.5, (vUv.y) * height)) * (1. - step(height / 4. * 2.5, (1.  -vUv.y) * height));
    color = mix(color, slate_700, 1. - (0.75 + 0.25 * isAboveLimitTop));
    color = mix(color, slate_700, 1. - (0.75 + 0.25 * isAboveLimitBottom));
    color = mix(color, slate_700, 1. - (0.75 + 0.25 * (1. - isInCenterLimit)));
    color = mix(color, slate_600, isBarGPU);
    color = mix(color, rose_700, isBarGPU * isAboveLimitTop);

    color = mix(color, slate_400, isBarCPU);
    color = mix(color, sky_500, isBarUpdate);
    color = mix(color, emerald_500, isBarUIUpdate);
    color = mix(color, rose_500, isBarCPU * isAboveLimitBottom);
    color = mix(color, mix(fuschia_500, color, 0.4), isBarMemory);
    color = mix(color, fuschia_900, isBarMemoryFull);

    vec4 overlayColor = texture2D(overlay, vUv);
    color = mix(color, overlayColor.rgb, overlayColor.a);

    gl_FragColor = vec4(color, 1.);
}
`,j4=`#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}

@font-face {
  font-family: 'Barlow';
  src: url(data:font/truetype;charset=utf-8;base64,)
    format('truetype');
}
`;let iA=!1;function fa(){if(iA)return;iA=!0;const s=document.createElement("style");s.innerHTML=j4,document.body.appendChild(s)}fa();const vi=document.createElement("canvas"),rA=vi.getContext("2d");vi.width=1920;vi.height=1080;if(rA){const s=vi,e=rA,t=s.width,n=s.height;e.beginPath(),e.strokeStyle="#888",e.fillStyle="#888",e.lineWidth=3,e.arc(1920/2,1080/2,1080/2,0,Math.PI*2),e.moveTo(t/3,0),e.lineTo(t/3,n),e.moveTo(2*t/3,0),e.lineTo(2*t/3,n),e.moveTo(0,n/3),e.lineTo(t,n/3),e.moveTo(0,2*n/3),e.lineTo(t,2*n/3),e.moveTo(t/2-8,n/2),e.lineTo(t/2+8,n/2),e.moveTo(t/2,n/2-8),e.lineTo(t/2,n/2+8),e.stroke(),e.beginPath(),e.lineWidth=2,e.strokeStyle="#88888844",e.moveTo(0,n/2),e.lineTo(t,n/2),e.moveTo(t/2,0),e.lineTo(t/2,n),e.stroke(),e.lineWidth=2,e.strokeStyle="#888",e.beginPath(),e.setLineDash([16,16]);const i=1.61803398875;e.moveTo(t/i,0),e.lineTo(t/i,n),e.moveTo(t-t/i,0),e.lineTo(t-t/i,n),e.moveTo(0,n/i),e.lineTo(t,n/i),e.moveTo(0,n-n/i),e.lineTo(t,n-n/i),e.stroke(),e.beginPath(),e.lineWidth=.5,e.setLineDash([2,6]),e.strokeStyle="#88888811";const r=48;for(let o=1;o<r;o++)for(let A=1;A<r/16*9;A++)e.moveTo(o/r*t,0),e.lineTo(o/r*t,n),e.moveTo(0,A/(r/16*9)*n),e.lineTo(t,A/(r/16*9)*n);e.stroke(),e.font="24px Barlow",e.textAlign="left",e.fillText("Golden ratio",16,656),e.fillText("Thirds",16,710)}const pa=new jn(vi);pa.needsUpdate=!0;fa();const Mr=document.createElement("canvas"),pt=Mr.getContext("2d");if(pt){Mr.width=360*window.devicePixelRatio,Mr.height=360*window.devicePixelRatio,pt.scale(window.devicePixelRatio,window.devicePixelRatio),pt.strokeStyle="#232f40",pt.font="16px Barlow",pt.textAlign="left",pt.textBaseline="top",pt.fillStyle=Dt.slate._400,pt.shadowColor="#232f4088",pt.shadowBlur=2,pt.shadowOffsetX=0,pt.shadowOffsetY=1,pt.fillText("GPU",8,8),pt.fillStyle=Dt.fuchsia._500,pt.fillText("Memory",8,144);const s=276,e=18;pt.fillStyle=Dt.slate._400,pt.fillText("render",8,s),pt.fillStyle=Dt.sky._500,pt.fillText("update",8,s+e)}const W4=new jn(Mr);class zt{constructor(){x(this,"startFrame",0);x(this,"endFrame",-1);x(this,"isActive",!1);x(this,"children");x(this,"id");this.id=this.constructor.name+"-"+(1e6*Math.random()|0),console.log("new",this.id)}update(e){}render(e,t,n){}resize(e,t){}_update(e){if(this.isActive=!(e<this.startFrame||e>=this.endFrame&&this.endFrame!==-1),!!this.isActive){if("children"in this)for(const t of Object.values(this.children||{}))t._update(e);this.update(e)}}_render(e,t,n){if(e<this.startFrame||e>=this.endFrame&&this.endFrame!==-1)return;if("children"in this)for(const r of Object.values(this.children||{}))r._render(e,t,n);const i=t.getRenderTarget();this.render(e,t,n),t.setRenderTarget(i)}_resize(e,t){if("children"in this)for(const n of Object.values(this.children||{}))n._resize(e,t);this.resize(e,t)}}const Et=P4,S1=128+32,D1=24*6;k4();const ws=class{constructor(e){x(this,"width",1);x(this,"height",1);x(this,"audioBar");x(this,"music",new Y4);x(this,"sync");x(this,"frame",0);x(this,"oldTime",0);x(this,"time",0);x(this,"dt",0);x(this,"cuePoints",[]);x(this,"uiNeedsRender",!0);x(this,"renderTimesCPU",[...new Array(128)].map(()=>0));x(this,"renderTimesCPUIndex",0);x(this,"renderTimesGPU",[...new Array(128)].map(()=>0));x(this,"renderTimesGPUIndex",0);x(this,"renderer");x(this,"demoRenderTarget",new je(640,360));x(this,"screen",new ui({shadowSize:16,customMaterial:new Ze({fragmentShader:V4,vertexShader:Et,uniforms:{screen:{value:null},thirdsOverlay:{value:null},thirdsOverlayOpacity:{value:0}}})}));x(this,"framePanel",new ui({shadowSize:16}));x(this,"performancePanel",new ui({shadowSize:16,customMaterial:new Ze({fragmentShader:K4,vertexShader:Et,uniforms:{renderTimesGPU:{value:[]},renderTimesGPUIndex:{value:0},renderTimesCPU:{value:[]},renderTimesCPUIndex:{value:0},updateTimes:{value:[]},updateTimesIndex:{value:0},uiUpdateTimes:{value:[]},uiUpdateTimesIndex:{value:0},memoryPercentages:{value:[]},memoryPercentagesIndex:{value:0},totalJSHeapSize:{value:0},jsHeapSizeLimit:{value:0},overlay:{value:null}}})}));x(this,"scene",new It);x(this,"camera",new Gt(-1,1,1,-1));x(this,"root");x(this,"screenRenderTarget",new je(640,360));x(this,"isFullscreen",!1);x(this,"fullscreenAnimation",new H4);x(this,"uiOldTime",Date.now()/1e3);x(this,"uiTime",Date.now()/1e3);x(this,"uiDt",0);x(this,"framePanelCanvas");x(this,"framePanelTexture");x(this,"query",null);x(this,"updateTimes",[...new Array(128)].map(()=>0));x(this,"updateTimesIndex",0);x(this,"uiUpdateTimes",[...new Array(128)].map(()=>0));x(this,"uiUpdateTimesIndex",0);x(this,"memoryPercentages",[...new Array(128)].map(()=>0));x(this,"memoryPercentagesIndex",0);x(this,"queryIsActive",!1);x(this,"options");x(this,"loop",()=>{requestAnimationFrame(this.loop),this.oldTime=this.time,this.time=this.music.getCurrentTime(),this.dt+=this.time-this.oldTime,this.uiOldTime=this.uiTime,this.uiTime=Date.now()/1e3,this.uiDt+=this.uiTime-this.uiOldTime;let e=!1;const t=1/60;for(this.dt>=4*t&&(this.jumpToFrame(this.time*60|0),this.dt=0),this.uiDt>=4*t&&(this.uiDt%=t);this.dt>=t;)this.dt-=t,this.update(this.frame),this.frame++,e=!0,this.cuePoints.length===2&&this.frame>=this.cuePoints[1]&&this.jumpToFrame(this.cuePoints[0]);for(;this.uiDt>=t;)this.uiDt-=t,this.uiNeedsRender||(this.uiNeedsRender=this.uiUpdate());e&&this.render(),this.uiNeedsRender||(this.uiNeedsRender=e),this.uiNeedsRender&&(this.uiRender(),this.uiNeedsRender=!1)});ws.instance=this,this.options=e,this.root=e.root,this.renderer=new We(e.rendererOptions),this.renderer.physicallyCorrectLights=!0,this.audioBar=new z4(this),document.getElementsByTagName("body")[0].appendChild(this.renderer.domElement),this.renderer.domElement.style.position="fixed",this.renderer.domElement.style.top="0px",this.renderer.domElement.style.left="0px",this.renderer.domElement.style.right="0px",this.renderer.domElement.style.bottom="0px",this.sync=new L4(e.music),this.renderer.domElement.addEventListener("wheel",n=>{if(n.preventDefault(),Math.abs(n.deltaY)>Math.abs(n.deltaX)){const i=Math.max(0,1-n.deltaY/1e3);this.audioBar.zoom(i)}else{const i=n.deltaX/1e3;this.audioBar.pan(i),this.audioBar.zoom(1)}this.uiNeedsRender=!0}),this.renderer.domElement.addEventListener("click",n=>{this.music.audioContext.resume();const i=s2(),r=16,o=64,a=Wt()-r*2,c=(n.clientX-r)/a;if(n.clientY>i-o-r&&c>=0&&c<=1){const l=this.audioBar.getClickedFrame(c),h=this.sync.music.subdivision*(this.music.paused?1:4);let f=((this.sync.stepForFrame(l)+this.sync.music.subdivision)/h|0)*h;this.jumpToFrame(this.sync.frameForStep(f))}}),this.scene.add(this.screen.object3d),this.scene.add(this.framePanel.object3d),this.scene.add(this.performancePanel.object3d),this.scene.add(this.camera),this.screen.object3d.scale.x=640,this.screen.object3d.scale.y=360,this.framePanelCanvas=document.createElement("canvas"),this.framePanelTexture=new jn(this.framePanelCanvas),this.framePanel.setTexture(this.framePanelTexture,!0),this.scene.add(this.audioBar.obj),(async()=>{const i=await(await fetch(e.music.src)).arrayBuffer(),r=await this.music.audioContext.decodeAudioData(i);this.music.setBuffer(r),this.audioBar.setMusic(this.music,r,e.music),this.resize(Wt(),s2())})(),this.camera.position.z=100,this.resize(Wt(),s2()),window.addEventListener("resize",()=>{this.uiNeedsRender=!0,this.music.audioContext.resume(),this.resize(Wt(),s2())}),document.addEventListener("keydown",n=>{this.uiNeedsRender=!0,this.music.audioContext.resume();const i=this.music.paused?0:20;if(console.log(n.key),n.key==="m"&&this.music.setVolume(this.music.getVolume()===1?0:1),n.key==="o"&&(this.screen.getMaterial().uniforms.thirdsOverlayOpacity.value=this.screen.getMaterial().uniforms.thirdsOverlayOpacity.value===1?0:1),n.key==="Enter"&&(this.isFullscreen=!this.isFullscreen,this.resize(Wt(),s2())),n.key===" "&&(this.music.paused?this.music.play():this.music.pause()),n.key==="v"){if(this.cuePoints.length>=2){this.cuePoints=[];return}const o=this.sync.stepForFrame(this.frame),A=o-o%this.sync.music.subdivision;this.cuePoints=[this.sync.frameForStep(A),this.sync.frameForStep(A+this.sync.music.subdivision)]}if(n.key==="b"){if(this.cuePoints.length>=2){this.cuePoints=[];return}const o=this.sync.stepForFrame(this.frame),A=o-o%(this.sync.music.subdivision*4);this.cuePoints=[this.sync.frameForStep(A),this.sync.frameForStep(A+this.sync.music.subdivision*4)]}if(n.key==="n"){if(this.cuePoints.length>=2){this.cuePoints=[];return}const o=this.options.music.beatOffset*this.sync.music.subdivision,A=this.sync.stepForFrame(this.frame)-o,a=A-A%(this.sync.music.subdivision*4*4)+o;this.cuePoints=[this.sync.frameForStep(a),this.sync.frameForStep(a+this.sync.music.subdivision*4*4)]}if(n.key==="g"){const o=this.sync.stepForFrame(this.frame),A=o-o%this.sync.music.subdivision;this.cuePoints.length<2?this.cuePoints.push(this.sync.frameForStep(A)):this.cuePoints=[]}if(n.key==="J"&&this.jumpToFrame(this.frame-1),n.key==="K"&&this.jumpToFrame(this.frame+1),n.key==="h"){const o=this.sync.music.subdivision*4,A=this.sync.stepForFrame(this.frame-i);let a=(A/o|0)*o;a===A&&(a-=o),this.jumpToFrame(this.sync.frameForStep(a))}if(n.key==="l"){const o=this.sync.music.subdivision*4,A=this.sync.stepForFrame(this.frame);let a=(A/o|0)*o;a+=o,a===A&&(a+=o),this.jumpToFrame(this.sync.frameForStep(a))}if(n.key==="j"){const o=this.sync.music.subdivision*1,A=this.sync.stepForFrame(this.frame-i);let a=(A/o|0)*o;a===A&&(a-=o),this.jumpToFrame(this.sync.frameForStep(a))}if(n.key==="k"){const o=this.sync.music.subdivision*1,A=this.sync.stepForFrame(this.frame);let a=(A/o|0)*o;a+=o,a===A&&(a+=o),this.jumpToFrame(this.sync.frameForStep(a))}n.key==="H"&&this.jumpToFrame(0);const r={"6":.25,"7":.5,"8":2,"9":4,"0":1};n.key in r&&this.music.setPlaybackRate(r[n.key])})}resize(e,t){this.width=e,this.height=t,this.renderer.setSize(e,t),this.renderer.setPixelRatio(window.devicePixelRatio),this.camera.left=-e/2,this.camera.right=e/2,this.camera.top=t/2,this.camera.bottom=-t/2,this.camera.updateProjectionMatrix(),this.audioBar.resize(e,t);let n=e,i=n/16*9;i>t&&(i=t,n=i/9*16),this.isFullscreen||(n=640,i=360),this.screenRenderTarget.setSize(n,i),this.fullscreenAnimation.transition(this.isFullscreen?1:0,.15,this.uiTime),this.root._resize(n,i),this.render(),this.uiUpdate(),this.uiRender()}register(e){function t(i){if("children"in i&&i.children)for(const[r,o]of Object.entries(i.children)){const A=t(o);A&&(i.children[r]=A)}return e.constructor.name===i.constructor.name?(e.children=i.children,e):null}const n=t(this.root);n&&(this.root=n),e.resize(this.screenRenderTarget.width,this.screenRenderTarget.height)}jumpToFrame(e){this.frame=e,this.music.setCurrentTime(e/60),this.time=e/60,this.oldTime=this.time,this.dt=0,this.update(e),this.uiUpdate(),this.render(),this.uiRender()}update(e){const t=performance.now();this.sync.update(e),this.root._update(e);const n=performance.now()-t;this.music.paused||(this.updateTimes[this.updateTimesIndex]=n,this.updateTimesIndex=(this.updateTimesIndex+1)%this.updateTimes.length)}uiUpdate(){if(this.options.productionMode)return!1;let e=!1;const t=performance.now();if(e||(e=this.fullscreenAnimation.update(this.uiTime)),this.screen.setSize(_n(640,Wt(),this.fullscreenAnimation.value),_n(360,Wt()/16*9,this.fullscreenAnimation.value)),this.screen.object3d.position.x=_n(Wt()/2-this.screen.object3d.scale.x/2-16,Wt()/2-this.screen.object3d.scale.x/2,this.fullscreenAnimation.value),this.screen.object3d.position.y=_n(s2()/2-this.screen.object3d.scale.y/2-16,s2()/2-this.screen.object3d.scale.y/2,this.fullscreenAnimation.value),this.screen.object3d.position.z=90,this.fullscreenAnimation.value>.9999)return e;const n=performance.now()-t;return this.music.paused||(e=!0,this.uiUpdateTimes[this.uiUpdateTimesIndex]=n,this.uiUpdateTimesIndex=(this.uiUpdateTimesIndex+1)%this.uiUpdateTimes.length),e}uiRender(){if(this.options.productionMode)return;this.framePanel.setSize(S1,D1),this.framePanel.object3d.position.x=-Wt()/2+16+S1/2,this.framePanel.object3d.position.y=s2()/2-16-D1/2,this.framePanel.object3d.position.z=50,this.performancePanel.setSize(360,360),this.performancePanel.object3d.position.x=Wt()/2-16-640-16-360/2,this.performancePanel.object3d.position.y=s2()/2-16-360/2,this.performancePanel.object3d.position.z=50;const e=this.framePanelCanvas.getContext("2d");if(e){const t=e,n=this.framePanelCanvas;n.width=S1*window.devicePixelRatio,n.height=D1*window.devicePixelRatio,t.scale(window.devicePixelRatio,window.devicePixelRatio),t.fillStyle=Dt.slate._500,t.fillRect(0,0,n.width,n.height);const i=this.sync.stepForFrame(this.frame),r=this.music.getCurrentTime(),o=[["Bar",i/this.options.music.subdivision/4|0],["Beat",i/this.options.music.subdivision|0],["Step",i],["Frame",this.frame],["Time",`${r/60|0}m${(r%60|0).toString().padStart(2,"0")}s`]];t.font="16px Barlow",t.translate(0,n.height/4),t.textBaseline="middle";for(let[A,[a,c]]of o.entries()){const l=""+c,h=(A-(o.length-1)/2)*24;t.textAlign="center",t.fillStyle=Dt.slate._100;let u=0;for(let f=0;f<l.length;f++){const g=l[l.length-f-1],p=g==="m"?16:9;t.fillText(g,n.width/2-16-u-p/2,h),u+=p}t.textAlign="left",t.fillStyle=Dt.slate._300,t.fillText(a,16,h)}}this.framePanelTexture.needsUpdate=!0,this.screen.getMaterial().uniforms.screen.value=this.screenRenderTarget.texture,this.screen.getMaterial().uniforms.thirdsOverlay.value=pa,this.screen.getMaterial().uniformsNeedUpdate=!0,this.scene.background=new ie(Dt.gray._700),this.fullscreenAnimation.value<.9999&&this.audioBar.render(this,this.cuePoints),this.renderer.setRenderTarget(null),this.performancePanel.getMaterial().uniforms.renderTimesCPU.value=this.renderTimesCPU,this.performancePanel.getMaterial().uniforms.renderTimesCPUIndex.value=this.renderTimesCPUIndex,this.performancePanel.getMaterial().uniforms.updateTimes.value=this.updateTimes,this.performancePanel.getMaterial().uniforms.updateTimesIndex.value=this.updateTimesIndex,this.performancePanel.getMaterial().uniforms.uiUpdateTimes.value=this.uiUpdateTimes,this.performancePanel.getMaterial().uniforms.uiUpdateTimesIndex.value=this.uiUpdateTimesIndex,this.performancePanel.getMaterial().uniforms.memoryPercentages.value=this.memoryPercentages,this.performancePanel.getMaterial().uniforms.memoryPercentagesIndex.value=this.memoryPercentagesIndex,this.performancePanel.getMaterial().uniforms.totalJSHeapSize.value=performance.memory.totalJSHeapSize,this.performancePanel.getMaterial().uniforms.jsHeapSizeLimit.value=performance.memory.jsHeapSizeLimit,this.performancePanel.getMaterial().uniforms.overlay.value=W4,this.performancePanel.getMaterial().uniformsNeedUpdate=!0,this.renderer.render(this.scene,this.camera)}render(){if(this.options.productionMode){this.renderer.setRenderTarget(null),this.renderer.toneMapping=this.options.toneMapping,this.root._render(this.frame,this.renderer,this),this.renderer.toneMapping=Xt;return}const e=performance.now();this.performancePanel.getMaterial().uniforms.renderTimesGPU.value=this.renderTimesGPU,this.performancePanel.getMaterial().uniforms.renderTimesGPUIndex.value=this.renderTimesGPUIndex,this.performancePanel.getMaterial().needsUpdate=!0;const t=this.renderer.getContext(),n=t.getExtension("EXT_disjoint_timer_query_webgl2");if(this.query){if(t.getQueryParameter(this.query,t.QUERY_RESULT_AVAILABLE)){const o=t.getQueryParameter(this.query,t.QUERY_RESULT);this.renderTimesGPU[this.renderTimesGPUIndex]=o/1e6,this.renderTimesGPUIndex=(this.renderTimesGPUIndex+1)%this.renderTimesGPU.length,this.query=t.createQuery(),this.query&&(t.beginQuery(n.TIME_ELAPSED_EXT,this.query),this.queryIsActive=!0)}}else this.query=t.createQuery(),this.query&&(t.beginQuery(n.TIME_ELAPSED_EXT,this.query),this.queryIsActive=!0);this.renderer.setRenderTarget(this.screenRenderTarget),this.renderer.toneMapping=this.options.toneMapping,this.root._render(this.frame,this.renderer,this),this.renderer.toneMapping=Xt;const i=performance.now()-e;this.music.paused||(this.renderTimesCPU[this.renderTimesCPUIndex]=i,this.renderTimesCPUIndex=(this.renderTimesCPUIndex+1)%this.renderTimesCPU.length);try{this.memoryPercentages[this.memoryPercentagesIndex]=performance.memory.usedJSHeapSize,this.memoryPercentagesIndex=(this.memoryPercentagesIndex+1)%this.memoryPercentages.length}catch{}this.query&&this.queryIsActive&&(t.endQuery(n.TIME_ELAPSED_EXT),this.queryIsActive=!1)}};let lr=ws;x(lr,"instance");class O4 extends zt{constructor(){super();x(this,"startFrame",0);x(this,"endFrame",2582);x(this,"scene",new It);x(this,"camera",new mt);x(this,"cubeCount",11);x(this,"cubeSize",0);x(this,"offset",0);x(this,"current_offset",0);x(this,"cubes",new Array(this.cubeCount));x(this,"cube_container",new Ne);x(this,"heart_shape",new Array);x(this,"light",new Ur);x(this,"renderTarget2",new je(512,512,{format:BA}));x(this,"mirrorcamera",new mt(45,1,1,1e3));x(this,"pointLight",new Sn);x(this,"cameraLight",new Sn);x(this,"fadeInBlock",new ge);x(this,"background",new ge);x(this,"renderTarget",new je(640,360));this.heart_shape=[[[0,0,1,1,0,0],[0,1,1,1,1,0],[1,1,1,1,1,1],[1,1,1,1,1,1],[1,1,1,1,1,1],[0,1,1,1,1,1],[0,0,1,1,1,1],[0,0,0,1,1,1],[0,0,0,0,1,1],[0,0,0,0,0,1],[0,0,0,0,0,0]],[[0,0,0,0,0,0],[0,0,1,1,0,0],[0,1,1,1,1,0],[0,1,1,1,1,1],[0,1,1,1,1,1],[0,0,1,1,1,1],[0,0,0,1,1,1],[0,0,0,0,1,1],[0,0,0,0,0,1],[0,0,0,0,0,0],[0,0,0,0,0,0]],[[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,1,1,0,0],[0,0,1,1,1,0],[0,0,1,1,1,1],[0,0,0,1,1,1],[0,0,0,0,1,1],[0,0,0,0,0,1],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0]]],this.cube_container=new Ne,this.scene.add(this.cube_container);var t=new it(4,4,4);this.cubes=new Array(this.cubeCount);var n=5,i=(n*this.cubeCount-1)/2;this.offset=i,this.current_offset=i,this.cubeSize=n;for(var r=0;r<this.cubeCount;r++){this.cubes[r]=new Array(this.cubeCount);for(var o=0;o<this.cubeCount;o++){this.cubes[r][o]=new Array(this.cubeCount);for(var A=0;A<this.cubeCount;A++){const f=new Sr;this.cubes[r][o][A]=new ge(t,f),this.cubes[r][o][A].position.set(-i+r*n,-i+o*n,-i+A*n),this.cube_container.add(this.cubes[r][o][A])}}}this.light.position.set(50,50,50),this.scene.add(this.light),this.camera.position.x=-2,this.camera.position.y=-2,this.camera.position.z=100,this.camera.aspect=16/9,this.camera.updateProjectionMatrix();var a=new it(500,600,200),c=new ge(a,new Qt);c.material.map=this.renderTarget2.texture,c.position.set(0,0,-500);var l=new it(2e3,600,200);this.background=new ge(l,new Qt),this.background.material.color=new ie(1381653),this.background.position.set(0,0,-500),this.scene.add(this.background);var h=new it(200,600,200),u=new ge(h,new Qt);u.material.color=new ie(0),u.position.set(0,0,-1),u.material.transparent=!0,this.fadeInBlock=u,this.scene.add(u),this.pointLight=new Sn(65280,50),this.pointLight.position.set(0,0,0),this.scene.add(this.pointLight)}resize(t,n){this.renderTarget.setSize(t,n)}render(t,n,i){var r=this.fadeInBlock.material.opacity;console.log(this.fadeInBlock),r>0&&(this.fadeInBlock.material.opacity=r-.004);var o=i.sync.step,A=0;o>=34&&(A=1),o>=36&&(A=2),o>=38&&(A=3),o>=40&&(A=4),o>=42&&(A=5),o>=44&&(A=6),o>=46&&(A=7),o>=50&&(A=8),o>=52&&(A=9),o>=54&&(A=10),o>=56&&(A=11),o>=58&&(A=12),o>=60&&(A=13),o>=62&&(A=14),o>=68&&(A=16),o>=70&&(A=17),o>=72&&(A=18),o>=74&&(A=19),o>=76&&(A=20),o>=78&&(A=21),o>=82&&(A=23),o>=84&&(A=24),o>=86&&(A=25),o>=88&&(A=26),o>=90&&(A=27),o>=92&&(A=28),o>=94&&(A=29),o>=98&&(A=30),o>=100&&(A=31),o>=102&&(A=32),o>=104&&(A=33),o>=106&&(A=35),o>=108&&(A=36),o>=110&&(A=37),o>=114&&(A=38),o>=116&&(A=39),o>=118&&(A=40),o>=120&&(A=41),o>=122&&(A=42),o>=124&&(A=43),o>=126&&(A=44),o>=130&&(A=45),o>=132&&(A=46),o>=134&&(A=47),o>=136&&(A=48),o>=138&&(A=49),o>=140&&(A=50),o>=142&&(A=51);for(var a=(this.cubeCount-1)/2,c=0;c<this.cubeCount;c++)for(var l=0;l<this.cubeCount;l++)for(var h=0;h<this.cubeCount;h++){this.cubes[c][l][h].visible=!0;var u=Math.abs(c-a)+Math.abs(l-a)+Math.abs(h-a);u>A+1&&(this.cubes[c][l][h].visible=!1),u>A-10||(this.cubes[c][l][h].visible=!1),u<A-21&&(this.cubes[c][l][h].visible=!0),-u>A-47||(this.cubes[c][l][h].visible=!1,h>2&&h<8&&this.heart_shape[Math.abs(5-h)][10-l][5-Math.abs(c-5)]&&(this.cubes[c][l][h].visible=!0))}const f=128,g=144,p=160;81>o&&o>0&&(this.pointLight.intensity=50,this.pointLight.color.setHex(65280)),f>o&&o>81&&(this.pointLight.intensity=30,this.pointLight.color.setHex(255)),g+1>o&&o>f&&(this.pointLight.intensity=40,this.pointLight.color.setHex(16711680)),160>o&&o>g&&(this.pointLight.intensity=80,this.pointLight.color.setHex(16711680));function d(y,Q){for(var M=0;M<y.cubeCount;M++)for(var I=0;I<y.cubeCount;I++)for(var T=0;T<y.cubeCount;T++)o>p&&I<Q?y.cubes[M][I][T].material.color=new ie(16742263):y.cubes[M][I][T].material.color=new ie(15658734)}if(o>0&&d(this,-10),o>160&&d(this,2),o>160&&d(this,3),o>168&&d(this,4),o>170&&d(this,5),o>184&&d(this,6),o>186&&d(this,7),o>200&&d(this,8),o>202&&d(this,9),o>216&&d(this,10),o>218&&d(this,11),o>=160)if(o%8==0)v(this,1.2,"left"),this.current_offset=1.2;else{const y=this.current_offset-(this.current_offset-1)*.15;y>=1&&(v(this,y,"all"),this.current_offset=y)}o>=164&&(o%8==0+2&&(this.pointLight.intensity=20),o%8==2+2&&(this.pointLight.intensity=80)),384>=o&&o>=208+16&&(o%16==2+10&&(this.pointLight.color.setColorName("blue"),this.pointLight.intensity=80),o%16==3+10&&(this.pointLight.color.setColorName("green"),this.pointLight.intensity=80),o%16==4+10&&(this.pointLight.color.setColorName("red"),this.pointLight.intensity=80));function m(y,Q,M,I){return y.cubes[Q][M][I].material.color.getHexString()!="eeeeee"}function v(y,Q,M){for(var I=0;I<y.cubeCount;I++)for(var T=0;T<y.cubeCount;T++)for(var U=0;U<y.cubeCount;U++)M=="left"?6>I&&m(y,I,T,U)&&y.cubes[I][T][U].position.set((-y.offset+I*y.cubeSize)*Q,(-y.offset+T*y.cubeSize)*Q,(-y.offset+U*y.cubeSize)*Q):M=="right"?I>6&&m(y,I,T,U)&&y.cubes[I][T][U].position.set((-y.offset+I*y.cubeSize)*Q,(-y.offset+T*y.cubeSize)*Q,(-y.offset+U*y.cubeSize)*Q):m(y,I,T,U)&&y.cubes[I][T][U].position.set((-y.offset+I*y.cubeSize)*Q,(-y.offset+T*y.cubeSize)*Q,(-y.offset+U*y.cubeSize)*Q)}if(o==160?(this.light.color.setHex(16711680),this.light.intensity=1.6):(this.light.color.setHex(16777215),this.light.intensity=1),this.mirrorcamera.position.z=100*Math.sin(t/70+A),this.mirrorcamera.position.x=100*Math.cos(t/70+A),this.mirrorcamera.lookAt(0,0,0),n.setRenderTarget(this.renderTarget2),n.render(this.scene,this.mirrorcamera),o>=384&&(o%4==0+0&&(this.pointLight.color.setColorName("red"),this.pointLight.intensity=0),o%4==1+0&&(this.pointLight.color.setColorName("blue"),this.pointLight.intensity=80),o%4==2+0&&(this.pointLight.color.setColorName("green"),this.pointLight.intensity=80),o%4==3+0&&(this.pointLight.color.setColorName("red"),this.pointLight.intensity=80)),412>o&&o>=384)if(o%2==0)v(this,1.1,"left"),this.current_offset=1.1;else{const y=this.current_offset-(this.current_offset-1)*.15;y>=1&&(v(this,y,"all"),this.current_offset=y)}if(o>=414){const y=this.current_offset+.4;v(this,y,"all"),this.current_offset=y}o>=200&&(this.camera.position.z=this.camera.position.z-.03),n.setRenderTarget(this.renderTarget),n.render(this.scene,this.camera)}}var k2=`varying vec2 vUv;\r
uniform float time;\r
uniform vec3 color;\r
uniform float random_seed;\r
uniform float visibility;\r
uniform float progression;\r
\r
#define STARS_X 8.\r
#define STARS_Y 5.\r
\r
#define LINES 30\r
\r
vec2 rotate(vec2 v, float a) {\r
    return vec2(v.x * cos(a) + v.y * sin(a), -v.x * sin(a) + v.y * cos(a));\r
}\r
\r
float rand(vec2 co){\r
    return fract(sin(dot(co, vec2(12.9898, 78.233+random_seed))) * 43758.5453);\r
}\r
\r
vec2 star_position(float x, float y)\r
{\r
    vec2 sp = vec2(x + .5 * mod(y, 2.),\r
                    y);\r
    sp += .1 * vec2(\r
        sin(time* 1.2 + 400.*x + 230.*y) + sin(time*0.2 + 4200.*x + 1230.*y),\r
        cos(time + 500.*x + 420.*y)\r
    );\r
\r
    return sp;\r
}\r
\r
void main() {\r
    vec2 uv = vUv;\r
    \r
    float a = 0.;\r
    float b = 0.;\r
    float c = 0.;\r
\r
    for (float x = 0.; x < STARS_X; x+=1.)\r
    {\r
        for (float y = 0.; y < STARS_Y; y+=1.)\r
        {   \r
            vec2 sp = star_position(x,y);\r
            \r
            float dist_x =  sp.x - uv.x * STARS_X;\r
            float dist_y =  sp.y - uv.y * STARS_Y;\r
            float star_size = .7 + sin(time + 200.*x + 300.*y) * 0.1 - rand(vec2(x,y))*0.1;\r
\r
            a += clamp(star_size -pow(pow(dist_x, 2.) + pow(dist_y, 2.), .14), 0., 1.) / star_size;\r
        }\r
    }\r
\r
    float x = 2.;\r
    float y = 2.;\r
\r
\r
    vec4 lines[LINES]; \r
    \r
    lines[0].x = 0.;\r
    lines[0].y = 0.;\r
    lines[0].z = 0.;\r
    lines[0].w = 1.;\r
\r
    lines[1].x = 0.;\r
    lines[1].y = 1.;\r
    lines[1].z = 1.;\r
    lines[1].w = 1.;\r
\r
    lines[2].x = 0.;\r
    lines[2].y = 1.;\r
    lines[2].z = 0.;\r
    lines[2].w = 2.;\r
\r
    lines[3].x = 0.;\r
    lines[3].y = 3.;\r
    lines[3].z = 1.;\r
    lines[3].w = 0.;\r
\r
    lines[4].x = 1.;\r
    lines[4].y = 2.;\r
    lines[4].z = 0.;\r
    lines[4].w = 1.;\r
\r
    lines[5].x = 2.;\r
    lines[5].y = 3.;\r
    lines[5].z = 0.;\r
    lines[5].w = 1.;\r
\r
    lines[6].x = 3.;\r
    lines[6].y = 0.;\r
    lines[6].z = 0.;\r
    lines[6].w = 1.;\r
\r
    lines[7].x = 3.;\r
    lines[7].y = 1.;\r
    lines[7].z = 1.;\r
    lines[7].w = 1.;\r
\r
    lines[8].x = 3.;\r
    lines[8].y = 1.;\r
    lines[8].z = 0.;\r
    lines[8].w = 2.;\r
\r
    lines[9].x = 2.;\r
    lines[9].y = 3.;\r
    lines[9].z = 1.;\r
    lines[9].w = 0.;\r
\r
    lines[10].x = 4.;\r
    lines[10].y = 2.;\r
    lines[10].z = 0.;\r
    lines[10].w = 1.;\r
\r
    lines[11].x = 7.;\r
    lines[11].y = 3.;\r
    lines[11].z = -2.;\r
    lines[11].w = 1.;\r
\r
    lines[12].x = 7.;\r
    lines[12].y = 0.;\r
    lines[12].z = 0.;\r
    lines[12].w = 1.;\r
\r
    lines[13].x = 7.;\r
    lines[13].y = 1.;\r
    lines[13].z = -1.;\r
    lines[13].w = 1.;\r
\r
    lines[14].x = 7.;\r
    lines[14].y = 1.;\r
    lines[14].z = 0.;\r
    lines[14].w = 2.;\r
\r
    lines[15].x = 7.;\r
    lines[15].y = 3.;\r
    lines[15].z = -1.;\r
    lines[15].w = 0.;\r
\r
    lines[16].x = 7.;\r
    lines[16].y = 2.;\r
    lines[16].z = 0.;\r
    lines[16].w = -1.;\r
    \r
    for (int i = 17; i < LINES; i++)\r
    {\r
        lines[i].x = floor(rand(vec2(32., 22. + float(i))) * (STARS_X + 1.));\r
        lines[i].y = floor(rand(vec2(35., 12. + float(i))) * (STARS_X + 1.));\r
\r
        lines[i].z = -1. + floor(rand(vec2(52., 22. + float(i))) * 2.);\r
        lines[i].w = -1. + floor(rand(vec2(31., 24. + float(i))) * 2.);\r
    }\r
\r
    for (int i = 0; i < LINES; i+=1)\r
    {\r
        float x_0 = uv.x * STARS_X;\r
        float x_1 = lines[i].x;\r
        float x_2 = x_1 + lines[i].z;\r
        float y_0 = uv.y * STARS_Y;\r
        float y_1 = lines[i].y;\r
        float y_2 = y_1 + lines[i].w;\r
\r
\r
        vec2 lsp_1 = star_position(x_1, y_1);\r
        vec2 lsp_2 = star_position(x_2, y_2);\r
        x_1 = lsp_1.x;\r
        y_1 = lsp_1.y;\r
        x_2 = lsp_2.x;\r
        y_2 = lsp_2.y;\r
    \r
        float dist_1_2 = pow(pow(x_1 - x_2, 2.) + pow(y_1 - y_2, 2.), 0.5);\r
        float dist_1_0 = pow(pow(x_1 - x_0, 2.) + pow(y_1 - y_0, 2.), 0.5);\r
        float dist_2_0 = pow(pow(x_2 - x_0, 2.) + pow(y_2 - y_0, 2.), 0.5);\r
\r
        float line_intensity = 1.;\r
        if (dist_1_0 > dist_1_2)\r
        {\r
            line_intensity = dist_1_0;\r
        }\r
        else if (dist_2_0 > dist_1_2)\r
        {\r
            line_intensity = dist_2_0;\r
        }\r
        else\r
        {\r
            // https://mathworld.wolfram.com/Point-LineDistance2-Dimensional.html\r
                line_intensity = abs(\r
                (x_2-x_1)*(y_1-y_0) - (x_1-x_0)*(y_2-y_1)\r
                ) /\r
                pow( pow(x_2-x_1,2.) + pow(y_2-y_1,2.) , 0.5);\r
\r
        }\r
        b = max(b, .1 - clamp(line_intensity, 0., .1));\r
    }\r
    b *= 4.4;\r
\r
    vec3 color = vec3(max(b,a),a,max(a,b/1.3));\r
\r
    if (progression > 0.985) {\r
        vec3 greyInNextScene = vec3(0.584,0.604,0.604);\r
        float stp = smoothstep(0.985, 1.0, progression);\r
        color = mix(color, greyInNextScene, stp);\r
        gl_FragColor = vec4(color, 0.2);\r
    } else {\r
        gl_FragColor = vec4(color, 0.2 + max(a,b) * visibility);\r
    }\r
}\r
`;class J4 extends zt{constructor(){super();x(this,"startFrame",2580);x(this,"endFrame",4178);x(this,"scene",new It);x(this,"camera",new mt);x(this,"quads");x(this,"shader",k2);x(this,"progression",0);x(this,"renderTarget",new je(3840,2160));this.quads=[new ge(new Mt(6,6),new Ze({uniforms:{time:{value:0},color:{value:new ie(0)},random_seed:{value:0},visibility:{value:0},progression:{value:0}},fragmentShader:k2,vertexShader:Et,side:At,transparent:!0}).clone()),new ge(new Mt(6,6),new Ze({uniforms:{time:{value:0},color:{value:new ie(0)},random_seed:{value:1},visibility:{value:0},progression:{value:0}},fragmentShader:k2,vertexShader:Et,side:At,transparent:!0}).clone()),new ge(new Mt(6,6),new Ze({uniforms:{time:{value:0},color:{value:new ie(0)},random_seed:{value:1},visibility:{value:0},progression:{value:0}},fragmentShader:k2,vertexShader:Et,side:At,transparent:!0}).clone()),new ge(new Mt(6,6),new Ze({uniforms:{time:{value:0},color:{value:new ie(0)},random_seed:{value:1},visibility:{value:0},progression:{value:0}},fragmentShader:k2,vertexShader:Et,side:At,transparent:!0}).clone()),new ge(new Mt(6,6),new Ze({uniforms:{time:{value:0},color:{value:new ie(0)},random_seed:{value:1},visibility:{value:0},progression:{value:0}},fragmentShader:k2,vertexShader:Et,side:At,transparent:!0}).clone()),new ge(new Mt(6,6),new Ze({uniforms:{time:{value:0},color:{value:new ie(0)},random_seed:{value:2},visibility:{value:0},progression:{value:0}},fragmentShader:k2,vertexShader:Et,side:At,transparent:!0}).clone())];for(var t=0;t<6;t++)this.quads[t].rotation.z=t/10,this.scene.add(this.quads[t]),this.quads[t].material.uniforms.color.value=new ie(14527112);this.camera.position.z=6}resize(t,n){this.renderTarget.setSize(t,n)}update(t){this.progression=(t-this.startFrame)/(this.endFrame-this.startFrame)}render(t,n,i){for(var r=0;r<5;r++)this.quads[r].material.uniforms.time.value=t/60+Math.sin(r)*1e3,this.quads[r].position.z=(r+t/60)%6,this.quads[r].material.uniforms.progression.value=this.progression,this.quads[r].material.uniforms.visibility.value=Math.min(1,Math.min(5-this.quads[r].position.z,this.quads[r].position.z));n.setRenderTarget(this.renderTarget),n.render(this.scene,this.camera)}}var sA=`varying vec2 vUv;\r
uniform float time;\r
uniform float progression;\r
uniform vec3 color;\r
\r
//-----------------------------------------------------------------------------\r
// Simple test/port of Mercury's SDF GLSL library: http://mercury.sexy/hg_sdf/\r
// by Tom '2015\r
// Disclaimer:\r
//   The library is done by Mercury team for OpenGL 4+ (look below),\r
//   not me, and this is just an unofficial port.\r
//-----------------------------------------------------------------------------\r
\r
////////////////////////////////////////////////////////////////\r
//\r
//                           HG_SDF\r
//\r
//     GLSL LIBRARY FOR BUILDING SIGNED DISTANCE BOUNDS\r
//\r
//     version 2015-12-15 (initial release)\r
//\r
//     Check http://mercury.sexy/hg_sdf for updates\r
//     and usage examples. Send feedback to spheretracing@mercury.sexy.\r
//\r
//     Brought to you by MERCURY http://mercury.sexy\r
//\r
//\r
//\r
// Released as Creative Commons Attribution-NonCommercial (CC BY-NC)\r
//\r
////////////////////////////////////////////////////////////////\r
\r
\r
////////////////////////////////////////////////////////////////\r
//\r
//             HELPER FUNCTIONS/MACROS\r
//\r
////////////////////////////////////////////////////////////////\r
\r
#define PI 3.14159265\r
#define TAU (2*PI)\r
#define PHI (1.618033988749895)\r
     // PHI (sqrt(5)*0.5 + 0.5)\r
\r
// Clamp to [0,1] - this operation is free under certain circumstances.\r
// For further information see\r
// http://www.humus.name/Articles/Persson_LowLevelThinking.pdf and\r
// http://www.humus.name/Articles/Persson_LowlevelShaderOptimization.pdf\r
\r
// Sign function that doesn't return 0\r
float sgn(float x) {\r
	return (x<0.)?-1.:1.;\r
}\r
\r
float square (float x) {\r
	return x*x;\r
}\r
\r
vec2 square (vec2 x) {\r
	return x*x;\r
}\r
\r
vec3 square (vec3 x) {\r
	return x*x;\r
}\r
\r
float lengthSqr(vec3 x) {\r
	return dot(x, x);\r
}\r
\r
\r
// Maximum/minumum elements of a vector\r
float vmax(vec2 v) {\r
	return max(v.x, v.y);\r
}\r
\r
float vmax(vec3 v) {\r
	return max(max(v.x, v.y), v.z);\r
}\r
\r
float vmax(vec4 v) {\r
	return max(max(v.x, v.y), max(v.z, v.w));\r
}\r
\r
float vmin(vec2 v) {\r
	return min(v.x, v.y);\r
}\r
\r
float vmin(vec3 v) {\r
	return min(min(v.x, v.y), v.z);\r
}\r
\r
float vmin(vec4 v) {\r
	return min(min(v.x, v.y), min(v.z, v.w));\r
}\r
\r
\r
\r
\r
////////////////////////////////////////////////////////////////\r
//\r
//             PRIMITIVE DISTANCE FUNCTIONS\r
//\r
////////////////////////////////////////////////////////////////\r
//\r
// Conventions:\r
//\r
// Everything that is a distance function is called fSomething.\r
// The first argument is always a point in 2 or 3-space called <p>.\r
// Unless otherwise noted, (if the object has an intrinsic "up"\r
// side or direction) the y axis is "up" and the object is\r
// centered at the origin.\r
//\r
////////////////////////////////////////////////////////////////\r
\r
float fSphere(vec3 p, float r) {\r
	return length(p) - r;\r
}\r
\r
// Plane with normal n (n is normalized) at some distance from the origin\r
float fPlane(vec3 p, vec3 n, float distanceFromOrigin) {\r
	return dot(p, n) + distanceFromOrigin;\r
}\r
\r
// Cheap Box: distance to corners is overestimated\r
float fBoxCheap(vec3 p, vec3 b) { //cheap box\r
	return vmax(abs(p) - b);\r
}\r
\r
// Box: correct distance to corners\r
float fBox(vec3 p, vec3 b) {\r
	vec3 d = abs(p) - b;\r
	return length(max(d, vec3(0))) + vmax(min(d, vec3(0)));\r
}\r
\r
// Same as above, but in two dimensions (an endless box)\r
float fBox2Cheap(vec2 p, vec2 b) {\r
	return vmax(abs(p)-b);\r
}\r
\r
float fBox2(vec2 p, vec2 b) {\r
	vec2 d = abs(p) - b;\r
	return length(max(d, vec2(0))) + vmax(min(d, vec2(0)));\r
}\r
\r
\r
// Endless "corner"\r
float fCorner (vec2 p) {\r
	return length(max(p, vec2(0))) + vmax(min(p, vec2(0)));\r
}\r
\r
// Blobby ball object. You've probably seen it somewhere. This is not a correct distance bound, beware.\r
float fBlob(vec3 p) {\r
	p = abs(p);\r
	if (p.x < max(p.y, p.z)) p = p.yzx;\r
	if (p.x < max(p.y, p.z)) p = p.yzx;\r
	float b = max(max(max(\r
		dot(p, normalize(vec3(1, 1, 1))),\r
		dot(p.xz, normalize(vec2(PHI+1., 1)))),\r
		dot(p.yx, normalize(vec2(1, PHI)))),\r
		dot(p.xz, normalize(vec2(1, PHI))));\r
	float l = length(p);\r
	return l - 1.5 - 0.2 * (1.5 / 2.)* cos(min(sqrt(1.01 - b / l)*(PI / 0.25), PI));\r
}\r
\r
// Cylinder standing upright on the xz plane\r
float fCylinder(vec3 p, float r, float height) {\r
	float d = length(p.xz) - r;\r
	d = max(d, abs(p.y) - height);\r
	return d;\r
}\r
\r
// Capsule: A Cylinder with round caps on both sides\r
float fCapsule(vec3 p, float r, float c) {\r
	return mix(length(p.xz) - r, length(vec3(p.x, abs(p.y) - c, p.z)) - r, step(c, abs(p.y)));\r
}\r
\r
// Distance to line segment between <a> and <b>, used for fCapsule() version 2below\r
float fLineSegment(vec3 p, vec3 a, vec3 b) {\r
	vec3 ab = b - a;\r
	float t = saturate(dot(p - a, ab) / dot(ab, ab));\r
	return length((ab*t + a) - p);\r
}\r
\r
// Capsule version 2: between two end points <a> and <b> with radius r \r
float fCapsule(vec3 p, vec3 a, vec3 b, float r) {\r
	return fLineSegment(p, a, b) - r;\r
}\r
\r
// Torus in the XZ-plane\r
float fTorus(vec3 p, float smallRadius, float largeRadius) {\r
	return length(vec2(length(p.xz) - largeRadius, p.y)) - smallRadius;\r
}\r
\r
// A circle line. Can also be used to make a torus by subtracting the smaller radius of the torus.\r
float fCircle(vec3 p, float r) {\r
	float l = length(p.xz) - r;\r
	return length(vec2(p.y, l));\r
}\r
\r
// A circular disc with no thickness (i.e. a cylinder with no height).\r
// Subtract some value to make a flat disc with rounded edge.\r
float fDisc(vec3 p, float r) {\r
 float l = length(p.xz) - r;\r
	return l < 0. ? abs(p.y) : length(vec2(p.y, l));\r
}\r
\r
// Hexagonal prism, circumcircle variant\r
float fHexagonCircumcircle(vec3 p, vec2 h) {\r
	vec3 q = abs(p);\r
	return max(q.y - h.y, max(q.x*sqrt(3.)*0.5 + q.z*0.5, q.z) - h.x);\r
	//this is mathematically equivalent to this line, but less efficient:\r
	//return max(q.y - h.y, max(dot(vec2(cos(PI/3), sin(PI/3)), q.zx), q.z) - h.x);\r
}\r
\r
// Hexagonal prism, incircle variant\r
float fHexagonIncircle(vec3 p, vec2 h) {\r
	return fHexagonCircumcircle(p, vec2(h.x*sqrt(3.)*0.5, h.y));\r
}\r
\r
// Cone with correct distances to tip and base circle. Y is up, 0 is in the middle of the base.\r
float fCone(vec3 p, float radius, float height) {\r
	vec2 q = vec2(length(p.xz), p.y);\r
	vec2 tip = q - vec2(0, height);\r
	vec2 mantleDir = normalize(vec2(height, radius));\r
	float mantle = dot(tip, mantleDir);\r
	float d = max(mantle, -q.y);\r
	float projected = dot(tip, vec2(mantleDir.y, -mantleDir.x));\r
	\r
	// distance to tip\r
	if ((q.y > height) && (projected < 0.)) {\r
		d = max(d, length(tip));\r
	}\r
	\r
	// distance to base ring\r
	if ((q.x > radius) && (projected > length(vec2(height, radius)))) {\r
		d = max(d, length(q - vec2(radius, 0)));\r
	}\r
	return d;\r
}\r
\r
//\r
// "Generalized Distance Functions" by Akleman and Chen.\r
// see the Paper at https://www.viz.tamu.edu/faculty/ergun/research/implicitmodeling/papers/sm99.pdf\r
//\r
// This set of constants is used to construct a large variety of geometric primitives.\r
// Indices are shifted by 1 compared to the paper because we start counting at Zero.\r
// Some of those are slow whenever a driver decides to not unroll the loop,\r
// which seems to happen for fIcosahedron und fTruncatedIcosahedron on nvidia 350.12 at least.\r
// Specialized implementations can well be faster in all cases.\r
//\r
\r
// Macro based version for GLSL 1.2 / ES 2.0 by Tom\r
\r
#define GDFVector0 vec3(1, 0, 0)\r
#define GDFVector1 vec3(0, 1, 0)\r
#define GDFVector2 vec3(0, 0, 1)\r
\r
#define GDFVector3 normalize(vec3(1, 1, 1 ))\r
#define GDFVector4 normalize(vec3(-1, 1, 1))\r
#define GDFVector5 normalize(vec3(1, -1, 1))\r
#define GDFVector6 normalize(vec3(1, 1, -1))\r
\r
#define GDFVector7 normalize(vec3(0, 1, PHI+1.))\r
#define GDFVector8 normalize(vec3(0, -1, PHI+1.))\r
#define GDFVector9 normalize(vec3(PHI+1., 0, 1))\r
#define GDFVector10 normalize(vec3(-PHI-1., 0, 1))\r
#define GDFVector11 normalize(vec3(1, PHI+1., 0))\r
#define GDFVector12 normalize(vec3(-1, PHI+1., 0))\r
\r
#define GDFVector13 normalize(vec3(0, PHI, 1))\r
#define GDFVector14 normalize(vec3(0, -PHI, 1))\r
#define GDFVector15 normalize(vec3(1, 0, PHI))\r
#define GDFVector16 normalize(vec3(-1, 0, PHI))\r
#define GDFVector17 normalize(vec3(PHI, 1, 0))\r
#define GDFVector18 normalize(vec3(-PHI, 1, 0))\r
\r
#define fGDFBegin float d = 0.;\r
\r
// Version with variable exponent.\r
// This is slow and does not produce correct distances, but allows for bulging of objects.\r
#define fGDFExp(v) d += pow(abs(dot(p, v)), e);\r
\r
// Version with without exponent, creates objects with sharp edges and flat faces\r
#define fGDF(v) d = max(d, abs(dot(p, v)));\r
\r
#define fGDFExpEnd return pow(d, 1./e) - r;\r
#define fGDFEnd return d - r;\r
\r
// Primitives follow:\r
\r
float fOctahedron(vec3 p, float r, float e) {\r
	fGDFBegin\r
    fGDFExp(GDFVector3) fGDFExp(GDFVector4) fGDFExp(GDFVector5) fGDFExp(GDFVector6)\r
    fGDFExpEnd\r
}\r
\r
float fDodecahedron(vec3 p, float r, float e) {\r
	fGDFBegin\r
    fGDFExp(GDFVector13) fGDFExp(GDFVector14) fGDFExp(GDFVector15) fGDFExp(GDFVector16)\r
    fGDFExp(GDFVector17) fGDFExp(GDFVector18)\r
    fGDFExpEnd\r
}\r
\r
float fIcosahedron(vec3 p, float r, float e) {\r
	fGDFBegin\r
    fGDFExp(GDFVector3) fGDFExp(GDFVector4) fGDFExp(GDFVector5) fGDFExp(GDFVector6)\r
    fGDFExp(GDFVector7) fGDFExp(GDFVector8) fGDFExp(GDFVector9) fGDFExp(GDFVector10)\r
    fGDFExp(GDFVector11) fGDFExp(GDFVector12)\r
    fGDFExpEnd\r
}\r
\r
float fTruncatedOctahedron(vec3 p, float r, float e) {\r
	fGDFBegin\r
    fGDFExp(GDFVector0) fGDFExp(GDFVector1) fGDFExp(GDFVector2) fGDFExp(GDFVector3)\r
    fGDFExp(GDFVector4) fGDFExp(GDFVector5) fGDFExp(GDFVector6)\r
    fGDFExpEnd\r
}\r
\r
float fTruncatedIcosahedron(vec3 p, float r, float e) {\r
	fGDFBegin\r
    fGDFExp(GDFVector3) fGDFExp(GDFVector4) fGDFExp(GDFVector5) fGDFExp(GDFVector6)\r
    fGDFExp(GDFVector7) fGDFExp(GDFVector8) fGDFExp(GDFVector9) fGDFExp(GDFVector10)\r
    fGDFExp(GDFVector11) fGDFExp(GDFVector12) fGDFExp(GDFVector13) fGDFExp(GDFVector14)\r
    fGDFExp(GDFVector15) fGDFExp(GDFVector16) fGDFExp(GDFVector17) fGDFExp(GDFVector18)\r
    fGDFExpEnd\r
}\r
\r
float fOctahedron(vec3 p, float r) {\r
	fGDFBegin\r
    fGDF(GDFVector3) fGDF(GDFVector4) fGDF(GDFVector5) fGDF(GDFVector6)\r
    fGDFEnd\r
}\r
\r
float fDodecahedron(vec3 p, float r) {\r
    fGDFBegin\r
    fGDF(GDFVector13) fGDF(GDFVector14) fGDF(GDFVector15) fGDF(GDFVector16)\r
    fGDF(GDFVector17) fGDF(GDFVector18)\r
    fGDFEnd\r
}\r
\r
float fIcosahedron(vec3 p, float r) {\r
	fGDFBegin\r
    fGDF(GDFVector3) fGDF(GDFVector4) fGDF(GDFVector5) fGDF(GDFVector6)\r
    fGDF(GDFVector7) fGDF(GDFVector8) fGDF(GDFVector9) fGDF(GDFVector10)\r
    fGDF(GDFVector11) fGDF(GDFVector12)\r
    fGDFEnd\r
}\r
\r
float fTruncatedOctahedron(vec3 p, float r) {\r
	fGDFBegin\r
    fGDF(GDFVector0) fGDF(GDFVector1) fGDF(GDFVector2) fGDF(GDFVector3)\r
    fGDF(GDFVector4) fGDF(GDFVector5) fGDF(GDFVector6)\r
    fGDFEnd\r
}\r
\r
float fTruncatedIcosahedron(vec3 p, float r) {\r
	fGDFBegin\r
    fGDF(GDFVector3) fGDF(GDFVector4) fGDF(GDFVector5) fGDF(GDFVector6)\r
    fGDF(GDFVector7) fGDF(GDFVector8) fGDF(GDFVector9) fGDF(GDFVector10)\r
    fGDF(GDFVector11) fGDF(GDFVector12) fGDF(GDFVector13) fGDF(GDFVector14)\r
    fGDF(GDFVector15) fGDF(GDFVector16) fGDF(GDFVector17) fGDF(GDFVector18)\r
    fGDFEnd\r
}\r
\r
\r
////////////////////////////////////////////////////////////////\r
//\r
//                DOMAIN MANIPULATION OPERATORS\r
//\r
////////////////////////////////////////////////////////////////\r
//\r
// Conventions:\r
//\r
// Everything that modifies the domain is named pSomething.\r
//\r
// Many operate only on a subset of the three dimensions. For those,\r
// you must choose the dimensions that you want manipulated\r
// by supplying e.g. <p.x> or <p.zx>\r
//\r
// <inout p> is always the first argument and modified in place.\r
//\r
// Many of the operators partition space into cells. An identifier\r
// or cell index is returned, if possible. This return value is\r
// intended to be optionally used e.g. as a random seed to change\r
// parameters of the distance functions inside the cells.\r
//\r
// Unless stated otherwise, for cell index 0, <p> is unchanged and cells\r
// are centered on the origin so objects don't have to be moved to fit.\r
//\r
//\r
////////////////////////////////////////////////////////////////\r
\r
\r
\r
// Rotate around a coordinate axis (i.e. in a plane perpendicular to that axis) by angle <a>.\r
// Read like this: R(p.xz, a) rotates "x towards z".\r
// This is fast if <a> is a compile-time constant and slower (but still practical) if not.\r
void pR(inout vec2 p, float a) {\r
	p = cos(a)*p + sin(a)*vec2(p.y, -p.x);\r
}\r
\r
// Shortcut for 45-degrees rotation\r
void pR45(inout vec2 p) {\r
	p = (p + vec2(p.y, -p.x))*sqrt(0.5);\r
}\r
\r
// Repeat space along one axis. Use like this to repeat along the x axis:\r
// <float cell = pMod1(p.x,5);> - using the return value is optional.\r
float pMod1(inout float p, float size) {\r
	float halfsize = size*0.5;\r
	float c = floor((p + halfsize)/size);\r
	p = mod(p + halfsize, size) - halfsize;\r
	return c;\r
}\r
\r
// Same, but mirror every second cell so they match at the boundaries\r
float pModMirror1(inout float p, float size) {\r
	float halfsize = size*0.5;\r
	float c = floor((p + halfsize)/size);\r
	p = mod(p + halfsize,size) - halfsize;\r
	p *= mod(c, 2.0)*2. - 1.;\r
	return c;\r
}\r
\r
// Repeat the domain only in positive direction. Everything in the negative half-space is unchanged.\r
float pModSingle1(inout float p, float size) {\r
	float halfsize = size*0.5;\r
	float c = floor((p + halfsize)/size);\r
	if (p >= 0.)\r
		p = mod(p + halfsize, size) - halfsize;\r
	return c;\r
}\r
\r
// Repeat only a few times: from indices <start> to <stop> (similar to above, but more flexible)\r
float pModInterval1(inout float p, float size, float start, float stop) {\r
	float halfsize = size*0.5;\r
	float c = floor((p + halfsize)/size);\r
	p = mod(p+halfsize, size) - halfsize;\r
	if (c > stop) { //yes, this might not be the best thing numerically.\r
		p += size*(c - stop);\r
		c = stop;\r
	}\r
	if (c <start) {\r
		p += size*(c - start);\r
		c = start;\r
	}\r
	return c;\r
}\r
\r
\r
// Repeat around the origin by a fixed angle.\r
// For easier use, num of repetitions is use to specify the angle.\r
float pModPolar(inout vec2 p, float repetitions) {\r
	float angle = 2.*PI/repetitions;\r
	float a = atan(p.y, p.x) + angle/2.;\r
	float r = length(p);\r
	float c = floor(a/angle);\r
	a = mod(a,angle) - angle/2.;\r
	p = vec2(cos(a), sin(a))*r;\r
	// For an odd number of repetitions, fix cell index of the cell in -x direction\r
	// (cell index would be e.g. -5 and 5 in the two halves of the cell):\r
	if (abs(c) >= (repetitions/2.)) c = abs(c);\r
	return c;\r
}\r
\r
// Repeat in two dimensions\r
vec2 pMod2(inout vec2 p, vec2 size) {\r
	vec2 c = floor((p + size*0.5)/size);\r
	p = mod(p + size*0.5,size) - size*0.5;\r
	return c;\r
}\r
\r
// Same, but mirror every second cell so all boundaries match\r
vec2 pModMirror2(inout vec2 p, vec2 size) {\r
	vec2 halfsize = size*0.5;\r
	vec2 c = floor((p + halfsize)/size);\r
	p = mod(p + halfsize, size) - halfsize;\r
	p *= mod(c,vec2(2))*2. - vec2(1);\r
	return c;\r
}\r
\r
// Same, but mirror every second cell at the diagonal as well\r
vec2 pModGrid2(inout vec2 p, vec2 size) {\r
	vec2 c = floor((p + size*0.5)/size);\r
	p = mod(p + size*0.5, size) - size*0.5;\r
	p *= mod(c,vec2(2))*2. - vec2(1);\r
	p -= size/2.;\r
	if (p.x > p.y) p.xy = p.yx;\r
	return floor(c/2.);\r
}\r
\r
// Repeat in three dimensions\r
vec3 pMod3(inout vec3 p, vec3 size) {\r
	vec3 c = floor((p + size*0.5)/size);\r
	p = mod(p + size*0.5, size) - size*0.5;\r
	return c;\r
}\r
\r
// Mirror at an axis-aligned plane which is at a specified distance <dist> from the origin.\r
float pMirror (inout float p, float dist) {\r
	float s = sign(p);\r
	p = abs(p)-dist;\r
	return s;\r
}\r
\r
// Mirror in both dimensions and at the diagonal, yielding one eighth of the space.\r
// translate by dist before mirroring.\r
vec2 pMirrorOctant (inout vec2 p, vec2 dist) {\r
	vec2 s = sign(p);\r
	pMirror(p.x, dist.x);\r
	pMirror(p.y, dist.y);\r
	if (p.y > p.x)\r
		p.xy = p.yx;\r
	return s;\r
}\r
\r
// Reflect space at a plane\r
float pReflect(inout vec3 p, vec3 planeNormal, float offset) {\r
	float t = dot(p, planeNormal)+offset;\r
	if (t < 0.) {\r
		p = p - (2.*t)*planeNormal;\r
	}\r
	return sign(t);\r
}\r
\r
\r
////////////////////////////////////////////////////////////////\r
//\r
//             OBJECT COMBINATION OPERATORS\r
//\r
////////////////////////////////////////////////////////////////\r
//\r
// We usually need the following boolean operators to combine two objects:\r
// Union: OR(a,b)\r
// Intersection: AND(a,b)\r
// Difference: AND(a,!b)\r
// (a and b being the distances to the objects).\r
//\r
// The trivial implementations are min(a,b) for union, max(a,b) for intersection\r
// and max(a,-b) for difference. To combine objects in more interesting ways to\r
// produce rounded edges, chamfers, stairs, etc. instead of plain sharp edges we\r
// can use combination operators. It is common to use some kind of "smooth minimum"\r
// instead of min(), but we don't like that because it does not preserve Lipschitz\r
// continuity in many cases.\r
//\r
// Naming convention: since they return a distance, they are called fOpSomething.\r
// The different flavours usually implement all the boolean operators above\r
// and are called fOpUnionRound, fOpIntersectionRound, etc.\r
//\r
// The basic idea: Assume the object surfaces intersect at a right angle. The two\r
// distances <a> and <b> constitute a new local two-dimensional coordinate system\r
// with the actual intersection as the origin. In this coordinate system, we can\r
// evaluate any 2D distance function we want in order to shape the edge.\r
//\r
// The operators below are just those that we found useful or interesting and should\r
// be seen as examples. There are infinitely more possible operators.\r
//\r
// They are designed to actually produce correct distances or distance bounds, unlike\r
// popular "smooth minimum" operators, on the condition that the gradients of the two\r
// SDFs are at right angles. When they are off by more than 30 degrees or so, the\r
// Lipschitz condition will no longer hold (i.e. you might get artifacts). The worst\r
// case is parallel surfaces that are close to each other.\r
//\r
// Most have a float argument <r> to specify the radius of the feature they represent.\r
// This should be much smaller than the object size.\r
//\r
// Some of them have checks like "if ((-a < r) && (-b < r))" that restrict\r
// their influence (and computation cost) to a certain area. You might\r
// want to lift that restriction or enforce it. We have left it as comments\r
// in some cases.\r
//\r
// usage example:\r
//\r
// float fTwoBoxes(vec3 p) {\r
//   float box0 = fBox(p, vec3(1));\r
//   float box1 = fBox(p-vec3(1), vec3(1));\r
//   return fOpUnionChamfer(box0, box1, 0.2);\r
// }\r
//\r
////////////////////////////////////////////////////////////////\r
\r
\r
// The "Chamfer" flavour makes a 45-degree chamfered edge (the diagonal of a square of size <r>):\r
float fOpUnionChamfer(float a, float b, float r) {\r
	float m = min(a, b);\r
	//if ((a < r) && (b < r)) {\r
		return min(m, (a - r + b)*sqrt(0.5));\r
	//} else {\r
		return m;\r
	//}\r
}\r
\r
// Intersection has to deal with what is normally the inside of the resulting object\r
// when using union, which we normally don't care about too much. Thus, intersection\r
// implementations sometimes differ from union implementations.\r
float fOpIntersectionChamfer(float a, float b, float r) {\r
	float m = max(a, b);\r
	if (r <= 0.) return m;\r
	if (((-a < r) && (-b < r)) || (m < 0.)) {\r
		return max(m, (a + r + b)*sqrt(0.5));\r
	} else {\r
		return m;\r
	}\r
}\r
\r
// Difference can be built from Intersection or Union:\r
float fOpDifferenceChamfer (float a, float b, float r) {\r
	return fOpIntersectionChamfer(a, -b, r);\r
}\r
\r
// The "Round" variant uses a quarter-circle to join the two objects smoothly:\r
float fOpUnionRound(float a, float b, float r) {\r
	float m = min(a, b);\r
	if ((a < r) && (b < r) ) {\r
		return min(m, r - sqrt((r-a)*(r-a) + (r-b)*(r-b)));\r
	} else {\r
	 return m;\r
	}\r
}\r
\r
float fOpIntersectionRound(float a, float b, float r) {\r
	float m = max(a, b);\r
	if ((-a < r) && (-b < r)) {\r
		return max(m, -(r - sqrt((r+a)*(r+a) + (r+b)*(r+b))));\r
	} else {\r
		return m;\r
	}\r
}\r
\r
float fOpDifferenceRound (float a, float b, float r) {\r
	return fOpIntersectionRound(a, -b, r);\r
}\r
\r
\r
// The "Columns" flavour makes n-1 circular columns at a 45 degree angle:\r
float fOpUnionColumns(float a, float b, float r, float n) {\r
	if ((a < r) && (b < r)) {\r
		vec2 p = vec2(a, b);\r
		float columnradius = r*sqrt(2.)/((n-1.)*2.+sqrt(2.));\r
		pR45(p);\r
		p.x -= sqrt(2.)/2.*r;\r
		p.x += columnradius*sqrt(2.);\r
		if (mod(n,2.) == 1.) {\r
			p.y += columnradius;\r
		}\r
		// At this point, we have turned 45 degrees and moved at a point on the\r
		// diagonal that we want to place the columns on.\r
		// Now, repeat the domain along this direction and place a circle.\r
		pMod1(p.y, columnradius*2.);\r
		float result = length(p) - columnradius;\r
		result = min(result, p.x);\r
		result = min(result, a);\r
		return min(result, b);\r
	} else {\r
		return min(a, b);\r
	}\r
}\r
\r
float fOpDifferenceColumns(float a, float b, float r, float n) {\r
	a = -a;\r
	float m = min(a, b);\r
	//avoid the expensive computation where not needed (produces discontinuity though)\r
	if ((a < r) && (b < r)) {\r
		vec2 p = vec2(a, b);\r
		float columnradius = r*sqrt(2.)/n/2.0;\r
		columnradius = r*sqrt(2.)/((n-1.)*2.+sqrt(2.));\r
\r
		pR45(p);\r
		p.y += columnradius;\r
		p.x -= sqrt(2.)/2.*r;\r
		p.x += -columnradius*sqrt(2.)/2.;\r
\r
		if (mod(n,2.) == 1.) {\r
			p.y += columnradius;\r
		}\r
		pMod1(p.y,columnradius*2.);\r
\r
		float result = -length(p) + columnradius;\r
		result = max(result, p.x);\r
		result = min(result, a);\r
		return -min(result, b);\r
	} else {\r
		return -m;\r
	}\r
}\r
\r
float fOpIntersectionColumns(float a, float b, float r, float n) {\r
	return fOpDifferenceColumns(a,-b,r, n);\r
}\r
\r
// The "Stairs" flavour produces n-1 steps of a staircase:\r
float fOpUnionStairs(float a, float b, float r, float n) {\r
	float d = min(a, b);\r
	vec2 p = vec2(a, b);\r
	pR45(p);\r
	p = p.yx - vec2((r-r/n)*0.5*sqrt(2.));\r
	p.x += 0.5*sqrt(2.)*r/n;\r
	float x = r*sqrt(2.)/n;\r
	pMod1(p.x, x);\r
	d = min(d, p.y);\r
	pR45(p);\r
	return min(d, vmax(p -vec2(0.5*r/n)));\r
}\r
\r
// We can just call Union since stairs are symmetric.\r
float fOpIntersectionStairs(float a, float b, float r, float n) {\r
	return -fOpUnionStairs(-a, -b, r, n);\r
}\r
\r
float fOpDifferenceStairs(float a, float b, float r, float n) {\r
	return -fOpUnionStairs(-a, b, r, n);\r
}\r
\r
// This produces a cylindical pipe that runs along the intersection.\r
// No objects remain, only the pipe. This is not a boolean operator.\r
float fOpPipe(float a, float b, float r) {\r
	return length(vec2(a, b)) - r;\r
}\r
\r
////////////////////////////////////////////////////////////////\r
// The end of HG_SDF library\r
////////////////////////////////////////////////////////////////\r
\r
\r
//------------------------------------------------------------------------\r
// Here rather hacky and very basic sphere tracer, feel free to replace.\r
//------------------------------------------------------------------------\r
\r
const int iterations = 2000;\r
const float dist_eps = .0001;\r
const float ray_max = 2000.0;\r
const float fog_density = .001;\r
\r
const float cam_dist = 19.;\r
\r
float fField(vec3 p);\r
\r
\r
vec3 dNormal(vec3 p)\r
{\r
   const vec2 e = vec2(.005,0);\r
   return normalize(vec3(\r
      fField(p + e.xyy) - fField(p - e.xyy),\r
      fField(p + e.yxy) - fField(p - e.yxy),\r
      fField(p + e.yyx) - fField(p - e.yyx) ));\r
}\r
\r
vec4 trace(vec3 ray_start, vec3 ray_dir)\r
{\r
   float ray_len = 0.0;\r
   vec3 p = ray_start;\r
   for(int i=0; i<iterations; ++i) {\r
   	  float dist = fField(p);\r
      if (dist < dist_eps) break;\r
      if (ray_len > ray_max) return vec4(0.0);\r
      p += dist*ray_dir / 2.;\r
      ray_len += dist;\r
   }\r
   return vec4(p, 1.0);\r
}\r
\r
float xnor(float x, in float y) { return abs(x+y-1.0); }\r
\r
vec4 checker_texture(vec3 pos, float sample_size)\r
{\r
   pos = pos*8.0 + .5;\r
   vec3 cell = step(1.0,mod(pos,2.0));\r
   float checker = xnor(xnor(cell.x,cell.y),cell.z);\r
   vec4 col = mix(vec4(.4),vec4(.5),checker);\r
   float fade = 1.-min(1.,sample_size*24.); // very fake "AA"\r
   col = mix(vec4(.95, .8, .2, .5),col,fade);\r
   pos = abs(fract(pos)-.5);\r
   float d = max(max(pos.x,pos.y),pos.z);\r
   d = smoothstep(.45,.5,d)*fade;\r
   return mix(col,vec4(0.0),d);\r
}\r
\r
vec3 sky_color(vec3 ray_dir, vec3 light_dir)\r
{\r
   // vec2 uv = vUv;\r
   float d = light_dir.y*.7+.3;\r
   vec3 base_col;\r
   base_col = mix(vec3(.3),vec3((ray_dir.y<0.)?0.:1.),abs(ray_dir.y));\r
	 base_col.yz *= 1.2-(progression*1.15);\r
	 float sBigx = vUv.x + 0.2 - sin(progression) * 0.6;\r
	 float sBigy = (vUv.y - 0.5) * (9. / 16.) + (progression*0.38 - 0.3);\r
	 float dist_to_center = pow(pow(sBigx, 2.) + pow(sBigy, 2.), 0.5);\r
	 if (dist_to_center < 0.1 && vUv.y > 0.5) {\r
		return vec3(0.992, 0.722, 0.0745);\r
	 }\r
	 float sSmallx = vUv.x + 0. - 0.5*(progression+0.1) * 0.8;\r
	 float sSmally = (vUv.y - 0.5) * (9. / 16.) + (progression*0.28 - 0.5);\r
	 float dist_to_center_small = pow(pow(sSmallx, 2.) + pow(sSmally, 2.), 0.5);\r
	 if (dist_to_center_small < 0.03 && vUv.y > 0.5) {\r
		return base_col+0.5*d;\r
	 }\r
   return base_col*d;\r
}\r
// neste scene beholder farge og solene, men legger p\xE5 en til og g\xE5r rund stola og hinter om atomer\r
\r
vec4 debug_plane(vec3 ray_start, vec3 ray_dir, float cut_plane, inout float ray_len)\r
{\r
    // Fancy lighty debug plane\r
    if (ray_start.y > cut_plane && ray_dir.y < 0.) {\r
       float d = (ray_start.y - cut_plane) / -ray_dir.y;\r
       if (d < ray_len) {\r
           vec3 hit = ray_start + ray_dir*d;\r
           float hit_dist = fField(hit);\r
           float iso = fract(hit_dist*5.0);\r
           vec3 dist_color = mix(vec3(.2,.4,.6),vec3(.2,.2,.4),iso);\r
           dist_color *= 1.0/(max(0.0,hit_dist)+.001);\r
           ray_len = d;\r
           return vec4(dist_color,.1);\r
      }\r
   }\r
   return vec4(0);\r
}\r
\r
vec3 shade(vec3 ray_start, vec3 ray_dir, vec3 light_dir, vec4 hit)\r
{\r
   vec3 fog_color = sky_color(ray_dir, light_dir);\r
   \r
   float ray_len;\r
   vec3 color;\r
   if (hit.w == 0.0) {\r
      ray_len = 1e16;\r
      color = fog_color;\r
   } else {\r
      vec3 dir = hit.xyz - ray_start;\r
      vec3 norm = dNormal(hit.xyz);\r
      float diffuse = max(0.0, dot(norm, light_dir));\r
      float spec = max(0.0,dot(reflect(light_dir,norm),normalize(dir)));\r
      spec = pow(spec, 16.0)*.5;\r
       \r
      ray_len = length(dir);\r
   \r
      vec3 base_color = vec3(0.4, 0.4, 0.4);\r
      color = mix(vec3(0.,.1,.3),vec3(1.,1.,.9),diffuse)*base_color +\r
         spec*vec3(1.,1.,.9);\r
\r
      float fog_dist = ray_len;\r
      float fog = 1.0 - 1.0/exp(fog_dist*fog_density);\r
      color = mix(color, fog_color, fog);\r
   }\r
   \r
   \r
    \r
   float cut_plane0 = sin(time)*.15 - .8;\r
   for(int k=0; k<4; ++k) {\r
      vec4 dpcol = debug_plane(ray_start, ray_dir, cut_plane0+float(k)*.75, ray_len);\r
      //if (dpcol.w == 0.) continue;\r
      float fog_dist = ray_len;\r
      dpcol.w *= 1.0/exp(fog_dist*.05);\r
      //color = mix(color,dpcol.xyz,dpcol.w);\r
   }\r
\r
   return color;\r
}\r
\r
\r
void main() {\r
    vec2 uv = vUv;\r
	uv.x -= 0.5;\r
	uv.y -= 0.5;\r
	uv.y *= -1.;\r
    vec3 light_dir = normalize(vec3(.5, 1.0, -.25));\r
   \r
   // Simple model-view matrix:\r
  \r
   float ang, si, co;\r
   ang = 0.;\r
   si = sin(ang); co = cos(ang);\r
   mat4 cam_mat = mat4(\r
      co, 0., si, 0.,\r
      0., 1., 0., 0.,\r
     -si, 0., co, 0.,\r
      0., 0., 0., 1.);\r
   ang = 0.;\r
   si = sin(ang);\r
   co = cos(ang);\r
   cam_mat = cam_mat * mat4(\r
      1., 0., 0., 0.,\r
      0., co, si, 0.,\r
      0.,-si, co, 0.,\r
      0., 0., 0., 1.);\r
\r
   vec3 pos = vec3(0., 0., 0.);\r
    /*\r
  */ \r
   vec3 dir = normalize(vec3(cam_mat*vec4(uv, 1., 0.)));\r
   vec3 color = shade(pos, dir, light_dir, trace(pos, dir));\r
   color = pow(color,vec3(.44));\r
\r
    gl_FragColor = vec4(color, 1.);\r
    //gl_FragColor = vec4(1.0, 0.1, 0.1, 1.);\r
}\r
\r
float fField(vec3 p) {\r
    p.z -= time * 4.;\r
    p.x += time * 4.;\r
    \r
    vec2 c = pMod2(p.xz, vec2(.1));\r
    \r
    float dist_to_center = pow(c.x*c.x+c.y*c.y,.5);\r
    \r
    p.y += sin(c.x / 10.) + sin(c.y / 10.) + 5. * cos((c.x + c.y) / 100.) - 10.;\r
    \r
    float ball = fSphere(p, .075);\r
    \r
    return ball;\r
}`;class Z4 extends zt{constructor(){super();x(this,"startFrame",4179);x(this,"endFrame",4970);x(this,"scene",new It);x(this,"camera",new Gt(-1,1,1,-1,0,100));x(this,"quad");x(this,"shader",sA);x(this,"renderTarget",new je(3840,2160));this.quad=new ge(new Mt(2,2),new Ze({uniforms:{time:{value:0},color:{value:new ie(0)},progression:{value:0}},fragmentShader:sA,vertexShader:Et,side:At}).clone()),this.scene.add(this.quad),this.quad.material.uniforms.color.value=new ie("#ddaa88")}resize(t,n){this.renderTarget.setSize(t,n)}render(t,n,i){this.quad.material.uniforms.time.value=t/60,this.quad.material.uniforms.progression.value=1-(this.endFrame-t)/(this.endFrame-this.startFrame),n.setRenderTarget(this.renderTarget),n.render(this.scene,this.camera)}}var oA=`varying vec2 vUv;\r
uniform float time;\r
uniform vec3 color;\r
\r
float scale01NormalizedValue(float normalizedValue, float scaledLowerBound, float scaledUpperBound)\r
{\r
    return scaledLowerBound + normalizedValue * (scaledUpperBound - scaledLowerBound);\r
}\r
\r
float normalize01(float rawValue, float lowerBound, float upperBound)\r
{\r
    float rangeSize = upperBound - lowerBound;\r
    float offsetFromLower = rawValue - lowerBound;\r
    return offsetFromLower / rangeSize;\r
}\r
\r
float asymptoticallyApproachFromBelow(float x, float targetMax) {\r
    // Based on https://en.wikipedia.org/wiki/Logistic_function\r
    // f(x) = approaced_max / (1 + e ^ (-steepness * (x - mid_point)))\r
    // Where the mid point is the inflection point, and I'm only interested in the values after the inflection point,\r
    // hence subtracting approaced_max to shift the curve down so the infection point is at y = 0,\r
    // and multiplying the value with 2 so that reaches the target again.\r
    return targetMax / (1.0 + exp(-0.015 * x)); // -0.025\r
    //return 2.0 * targetMax / (1.0 + exp(-0.012 * x)) - targetMax; // -0.025\r
}\r
\r
void main() {\r
    // vec3 insideColor = vec3(0.25, 0.5, 0.66);\r
    vec3 insideColor = vec3(abs(cos(time/120.0)), abs(sin(time/120.0)), asymptoticallyApproachFromBelow(time*20.0, 1.0));\r
\r
    // float initX = vUv.x;\r
    // float initY = 1.0 - vUv.y;\r
\r
    float xLowerBound = -2.0;\r
    float xUpperBound = 1.2;\r
    float yLowerBound = -1.8; // Inverted, lower value is canvas higher up\r
    float yUpperBound = 0.6; // Inverted, higher numer is further down\r
\r
    float xInitialRange = xUpperBound - xLowerBound; //1.2 - (-2.0) = 3.2\r
    float yInitialRange = yUpperBound - yLowerBound; //0.6 - (-1.8) = 2.4\r
    // float aspectRatio = xInitialRange / yInitialRange; // 3.2 : 2.4 (= 1.3333 (16:9 = 1.7777))\r
\r
    // float zoomTargetX = -1.36; // 20% to the left\r
    // float zoomTargetY = 1.0; // 1/3 of the way up\r
    float zoomTargetX = 0.11750217; // 0.082 // 0.09 // 0.1325 // 0.1175 // 0.010361\r
    float zoomTargetY = 0.74649645; // 0.745 // 0.748 // 0.7489 // 0.7465 // 0.75\r
\r
    xLowerBound = xLowerBound + asymptoticallyApproachFromBelow(time, xInitialRange * zoomTargetX);\r
    xUpperBound = xUpperBound - asymptoticallyApproachFromBelow(time, xInitialRange * (1.0 - zoomTargetX));\r
    yLowerBound = yLowerBound + asymptoticallyApproachFromBelow(time, yInitialRange * zoomTargetY);\r
    yUpperBound = yUpperBound - asymptoticallyApproachFromBelow(time, yInitialRange * (1.0 - zoomTargetY));\r
\r
    float x = scale01NormalizedValue(vUv.x, xLowerBound, xUpperBound);\r
    float y = scale01NormalizedValue(1.0 - vUv.y, yLowerBound, yUpperBound);\r
\r
    // float zx = vUv.x;\r
    // float zy = vUv.y;\r
\r
    // float x = scale01NormalizedValue(vUv.x, -1.0, 0.4);\r
    // float y = scale01NormalizedValue(vUv.y, -1.25, -0.15);\r
\r
    // float x = vUv.x;\r
    // float y = vYv.y;\r
\r
    float zx = x;\r
    float zy = y;\r
\r
    float iteration = 0.0;\r
    float max_iteration = 105.0; // This determines the resolution\r
    float xtemp = 1.0;\r
    while(zx*zx + zy*zy < 4.0 && iteration < max_iteration) {\r
        xtemp = zx*zx - zy*zy + x;\r
        zy = abs(2.0*zx*zy) + y;\r
        zx = xtemp;\r
        iteration = iteration + 1.0;\r
    }\r
    if(iteration == max_iteration)\r
    {\r
        gl_FragColor = vec4(insideColor, 1.0);\r
        return;\r
    }\r
    vec3 newColor = normalize01(max_iteration / iteration, 0.0, max_iteration) * insideColor;\r
    gl_FragColor = vec4(newColor, 1.0);\r
    return;\r
}\r
`;class X4 extends zt{constructor(){super();x(this,"startFrame",15992);x(this,"endFrame",17571);x(this,"scene",new It);x(this,"camera",new Gt(-1,1,1,-1,0,100));x(this,"quad");x(this,"shader",oA);x(this,"renderTarget",new je(3840,2160));this.quad=new ge(new Mt(2,2),new Ze({uniforms:{time:{value:0},color:{value:new ie(0)}},fragmentShader:oA,vertexShader:Et,side:At}).clone()),this.scene.add(this.quad),this.quad.material.uniforms.color.value=new ie("#ddaa88")}resize(t,n){this.renderTarget.setSize(t,n)}render(t,n,i){this.quad.material.uniforms.time.value=Math.min(953,t-this.startFrame),n.setRenderTarget(this.renderTarget),n.render(this.scene,this.camera)}}var O1=`varying vec2 vUv;\r
uniform float time;\r
uniform vec3 color;\r
\r
#define PI 3.14159265\r
\r
const int iterations = 200;\r
const float dist_eps = .001;\r
const float ray_max = 50.0;\r
const float fog_density = .08;\r
\r
const float cam_dist = 0.;\r
\r
float fField(vec3 p);\r
\r
vec3 dNormal(vec3 p)\r
{\r
   const vec2 e = vec2(.005,0);\r
   return normalize(vec3(\r
      fField(p + e.xyy) - fField(p - e.xyy),\r
      fField(p + e.yxy) - fField(p - e.yxy),\r
      fField(p + e.yyx) - fField(p - e.yyx) ));\r
}\r
\r
vec4 trace(vec3 ray_start, vec3 ray_dir)\r
{\r
   float ray_len = 0.0;\r
   vec3 p = ray_start;\r
   for(int i=0; i<iterations; ++i) {\r
   	  float dist = fField(p);\r
      if (dist < dist_eps) break;\r
      if (ray_len > ray_max) return vec4(0.0);\r
      p += dist*ray_dir;\r
      ray_len += dist;\r
   }\r
   return vec4(p, 1.0);\r
}\r
\r
// abs(0+0-1)=1\r
// abs(1+0-1)=0\r
// abs(0+1-1)=0\r
// abs(1+1-1)=1\r
float xnor(float x, in float y) { return abs(x+y-1.0); }\r
\r
vec4 checker_texture(vec3 pos, float sample_size)\r
{\r
\r
   \r
   vec4 path_line_color = vec4(0., 0., 1.0, 1.0); \r
   vec4 sep_line_color = vec4(0., 0., 1.0, 1.0);\r
   vec4 ground_color = vec4(.1, .1, .1, 1.0);\r
    \r
   float tile_size = 0.3;\r
   float line_width = 0.01;\r
   float tpx = mod(pos.x - line_width / 2., tile_size);\r
   float tpz = mod(pos.z - line_width / 2., tile_size);\r
   return vec4(1.0);\r
}\r
\r
vec3 sky_color(vec3 ray_dir, vec3 light_dir)\r
{\r
   float d = max(0.,dot(ray_dir,light_dir));\r
   float d2 = light_dir.y*.7+.3;\r
   vec3 base_col;\r
   base_col = mix(vec3(.4, 0.3, 0.02),vec3((ray_dir.y<0.)?0.:1.),abs(ray_dir.y));\r
   return base_col*d2;\r
}\r
\r
vec4 debug_plane(vec3 ray_start, vec3 ray_dir, float cut_plane, inout float ray_len)\r
{\r
    // Fancy lighty debug plane\r
    if (ray_start.y > cut_plane && ray_dir.y < 0.) {\r
       float d = (ray_start.y - cut_plane) / -ray_dir.y;\r
       if (d < ray_len) {\r
           vec3 hit = ray_start + ray_dir*d;\r
           float hit_dist = fField(hit);\r
           float iso = fract(hit_dist*5.0);\r
           vec3 dist_color = mix(vec3(.2,.4,.6),vec3(.2,.2,.4),iso);\r
           dist_color *= 1.0/(max(0.0,hit_dist)+.001);\r
           ray_len = d;\r
           return vec4(dist_color,.1);\r
      }\r
   }\r
   return vec4(0);\r
}\r
\r
\r
float sdHexPrism( vec3 p, vec2 h )\r
{\r
    vec3 q = abs(p);\r
\r
    const vec3 k = vec3(-0.8660254, 0.5, 0.57735);\r
    p = abs(p);\r
    p.xy -= 2.0*min(dot(k.xy, p.xy), 0.0)*k.xy;\r
    vec2 d = vec2(\r
       length(p.xy - vec2(clamp(p.x, -k.z*h.x, k.z*h.x), h.x))*sign(p.y - h.x),\r
       p.z-h.y );\r
    return min(max(d.x,d.y),0.0) + length(max(d,0.0));\r
}\r
\r
vec3 shade(vec3 ray_start, vec3 ray_dir, vec3 light_dir, vec4 hit)\r
{\r
   vec3 fog_color = sky_color(ray_dir, light_dir);\r
   \r
   float ray_len;\r
   vec3 color;\r
   if (hit.w == 0.0) {\r
      ray_len = 1e16;\r
      color = fog_color;\r
   } else if (sdHexPrism(hit.xyz + vec3(cos(time * PI / 5.), 0., 0.), vec2(1.2, 10000.)) < 0.) {\r
\r
       \r
   	        vec3 dir = hit.xyz - ray_start;\r
      vec3 norm = dNormal(hit.xyz);\r
      float diffuse = max(0.0, dot(norm, light_dir));\r
      float spec = max(0.0,dot(reflect(light_dir,norm),normalize(dir)));\r
      spec = pow(spec, 16.0)*.5;\r
       \r
      ray_len = length(dir);\r
   \r
      vec3 base_color = checker_texture(hit.xyz,2160.).xyz;\r
      color = mix(vec3(1.,.1,.1),vec3(.4,.66,.66),diffuse)*base_color +\r
         spec*vec3(1.,1.,.9);\r
\r
      float fog_dist = ray_len;\r
      float fog = 1.0 - 1.0/exp(fog_dist*fog_density);\r
      color = mix(color, fog_color, fog);\r
   } else {\r
      vec3 dir = hit.xyz - ray_start;\r
      vec3 norm = dNormal(hit.xyz);\r
      float diffuse = max(0.0, dot(norm, light_dir));\r
      float spec = max(0.0,dot(reflect(light_dir,norm),normalize(dir)));\r
      spec = pow(spec, 16.0)*.5;\r
       \r
      ray_len = length(dir);\r
   \r
      vec3 base_color = checker_texture(hit.xyz,2160.).xyz;\r
      color = mix(vec3(.4,.1,.1),vec3(.66,.8,.66),diffuse)*base_color +\r
         spec*vec3(1.,1.,.9);\r
\r
      float fog_dist = ray_len;\r
      float fog = 1.0 - 1.0/exp(fog_dist*fog_density);\r
      color = mix(color, fog_color, fog);\r
   }\r
   \r
   \r
    \r
   float cut_plane0 = sin(time)*.15 - .8;\r
   for(int k=0; k<4; ++k) {\r
      vec4 dpcol = debug_plane(ray_start, ray_dir, cut_plane0+float(k)*.75, ray_len);\r
      float fog_dist = ray_len;\r
      dpcol.w *= 1.0/exp(fog_dist*.05);\r
   }\r
\r
   return color;\r
}\r
\r
void main() {\r
    vec2 uv = vUv;\r
    uv.x -= 0.5;\r
	uv.y -= 0.5;\r
    //uv = rotate(uv, time * 0.1);\r
\r
\r
    vec3 light_dir = normalize(vec3(.5, 1.0, -.25));\r
   \r
   // Simple model-view matrix:\r
   float ang, si, co;\r
   ang = 0.;//iTime*.25;\r
   si = sin(ang); co = cos(ang);\r
   mat4 cam_mat = mat4(\r
      co, 0., si, 0.,\r
      0., 1., 0., 0.,\r
     -si, 0., co, 0.,\r
      0., 0., 0., 1.);\r
   ang = 0.;//iTime*.2;\r
   si = sin(ang); co = cos(ang);\r
   cam_mat = cam_mat * mat4(\r
      1., 0., 0., 0.,\r
      0., co, si, 0.,\r
      0.,-si, co, 0.,\r
      0., 0., 0., 1.);\r
\r
   vec3 pos = vec3(cam_mat*vec4(0., 0., -cam_dist, 1.0));\r
   vec3 dir = normalize(vec3(cam_mat*vec4(uv, 1., 0.)));\r
   \r
   vec3 color = shade(pos, dir, light_dir, trace(pos, dir));\r
   color = pow(color,vec3(.44));\r
\r
    gl_FragColor = vec4(color, 1.);\r
}\r
\r
\r
float rand(vec2 n) { \r
	return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r
}\r
\r
\r
float noise(vec2 p, float unit){\r
	vec2 ij = floor(p/unit);\r
	vec2 xy = mod(p,unit)/unit;\r
	//xy = 3.*xy*xy-2.*xy*xy*xy;\r
	xy = .5*(1.-cos(PI*xy));\r
	float a = rand((ij+vec2(0.,0.)));\r
	float b = rand((ij+vec2(1.,0.)));\r
	float c = rand((ij+vec2(0.,1.)));\r
	float d = rand((ij+vec2(1.,1.)));\r
	float x1 = mix(a, b, xy.x);\r
	float x2 = mix(c, d, xy.x);\r
	return mix(x1, x2, xy.y);\r
}\r
\r
float bumpy_terrain(vec3 p) {\r
 	float large_scale_noise = noise(vec2(p.x, p.z), 1.) - noise(vec2(0., p.z), 1.);\r
    float small_scale_noise = noise(vec2(p.x, p.z), .2) - noise(vec2(0., p.z), .2);\r
    return p.y + 1.0 * cos(p.x) - 0.3 * small_scale_noise - 1.0 * large_scale_noise;   \r
}\r
\r
float terrain(vec3 p)\r
{   \r
    //pMod3(p, vec3(1.));\r
    float tile_size = 0.3;\r
    // Snap point x and y. Snapped to the tile below.\r
    float tpx = mod(p.x, tile_size);\r
    float tpz = mod(p.z, tile_size);\r
    float spx = p.x - tpx;\r
    float spz = p.z - tpz;\r
    \r
    float t00 = bumpy_terrain(vec3(spx, p.y, spz));\r
    float d00t01 = bumpy_terrain(vec3(spx, p.y, spz - tile_size)) - t00;\r
    float d00t10 = bumpy_terrain(vec3(spx - tile_size, p.y, spz)) - t00;\r
    float t11 = bumpy_terrain(vec3(spx - tile_size, p.y, spz - tile_size));\r
    float d11t01 = bumpy_terrain(vec3(spx, p.y, spz - tile_size)) - t11;\r
    float d11t10 = bumpy_terrain(vec3(spx - tile_size, p.y, spz)) - t11;\r
    \r
    if (tpx + tpz > tile_size) {\r
        return t00 + d00t10 * (1. - tpx / tile_size) + d00t01 * (1. - tpz / tile_size);\r
    } else {\r
        return t11 + d11t01 * tpx / tile_size + d11t10 * tpz / tile_size;// + d11t01 * (1. - tpz / tile_size);\r
    } \r
    return mod(p.x, tile_size) * bumpy_terrain(vec3(spx, p.y, spz)) + (tile_size - mod(p.x, tile_size)) * bumpy_terrain(vec3(spx - tile_size, p.y, spz));\r
}\r
\r
void pR(inout vec2 p, float a) {\r
	p = cos(a)*p + sin(a)*vec2(p.y, -p.x);\r
}\r
\r
\r
float sdBox( vec3 p, vec3 b )\r
{\r
    vec3 d = abs(p) - b;\r
    return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\r
}\r
\r
float pMod1(inout float p, float size) {\r
	float halfsize = size*0.5;\r
	float c = floor((p + halfsize)/size);\r
	p = mod(p + halfsize, size) - halfsize;\r
	return c;\r
}\r
\r
float vmax(vec3 v) {\r
	return max(max(v.x, v.y), v.z);\r
}\r
\r
// Box: correct distance to corners\r
float fBox(vec3 p, vec3 b) {\r
	vec3 d = abs(p) - b;\r
	return length(max(d, vec3(0))) + vmax(min(d, vec3(0)));\r
}\r
    \r
float sdOctahedron( vec3 p, float s)\r
{\r
  p = abs(p);\r
  return (p.x+p.y+p.z-s)*0.57735027;\r
}\r
\r
// Cool star thing 1\r
float star_thing1(vec3 p)\r
{ \r
    pR(p.xy, time);\r
    \r
    vec3 po = p;\r
    \r
    pR(p.xy, PI / 4.);\r
    float octa1 = sdOctahedron(p, 1.);\r
    \r
    p = po;\r
\r
    float octa2 = sdOctahedron(p, 1.);\r
    \r
    return min(octa1, octa2);\r
}\r
\r
float star_thing2(vec3 p)\r
{ \r
    pR(p.xy, -time);\r
    \r
    vec3 po = p;\r
    \r
    pR(p.xy, PI / 4.);\r
    float octa1 = sdOctahedron(p, 1.);\r
    \r
    p = po;\r
\r
    float octa2 = sdOctahedron(p, .9);\r
    \r
    return min(octa1, octa2);\r
}\r
\r
\r
float star_thing3(vec3 p, float c)\r
{ \r
    pR(p.xz, time * (mod(c, 2.) - .5) * 3.);\r
    \r
    vec3 po = p;\r
    \r
    pR(p.xy, PI / 2.);\r
    pR(p.yz, PI / 4.);\r
    float octa1 = sdOctahedron(p, 1.);\r
    \r
    p = po;\r
\r
    pR(p.yz, PI / 4.);\r
    \r
    float octa2 = sdOctahedron(p, 1.);\r
    \r
        p = po;\r
\r
    pR(p.xy, PI / 4.);\r
    pR(p.yz, PI / 2.);\r
    \r
    float octa3 = sdOctahedron(p, 1.);\r
    \r
    return min(min(octa1, octa2), octa3);\r
}\r
\r
\r
\r
#define a (1.73205) //\u221A3\r
#define hs 1.5 // spread of the hexes\r
#define hh 1.35 // Hex hole\r
#define wt 0.15 // Wall thickness\r
#define ht 0.3 // Hex thickness\r
\r
float fField(vec3 p)\r
{ \r
float rf = 10.; // Repeat frequency\r
    float pr = time * 2.; // Progression of animation\r
    \r
    // camera control\r
    p.z -= pr;\r
    p.x += 1. * cos(pr * PI / rf);\r
    \r
    // duplicator\r
    float c = pMod1(p.z, rf);\r
    \r
    \r
    vec3 tp = p;\r
    float hex00 = max(sdHexPrism(p, vec2(hs + wt, ht)),\r
                        -sdHexPrism(p, vec2(hh, 10000.)));\r
    \r
\r
    tp.xy -= vec2(0., 2. * hs);\r
    float hex10 = max(sdHexPrism(tp, vec2(hs + wt, ht)),\r
                        -sdHexPrism(tp, vec2(hh, 10000.)));\r
    tp = p;\r
    tp.xy -= vec2(a * hs, hs);\r
    float hex11 = max(sdHexPrism(tp, vec2(hs + wt, ht)),\r
                        -sdHexPrism(tp, vec2(hh, 10000.)));\r
    tp = p;\r
    tp.xy -= vec2(a * hs, -hs);\r
    float hex12 = max(sdHexPrism(tp, vec2(hs + wt, ht)),\r
                        -sdHexPrism(tp, vec2(hh, 10000.)));\r
    tp = p;\r
    tp.xy -= vec2(0., -2. * hs);\r
    float hex13 = max(sdHexPrism(tp, vec2(hs + wt, ht)),\r
                        -sdHexPrism(tp, vec2(hh, 10000.)));\r
    tp = p;\r
    tp.xy -= vec2(-a * hs, -hs);\r
    float hex14 = max(sdHexPrism(tp, vec2(hs + wt, ht)),\r
                        -sdHexPrism(tp, vec2(hh, 10000.)));\r
    tp = p;\r
    tp.xy -= vec2(-a * hs, hs);\r
    float hex15 = max(sdHexPrism(tp, vec2(hs + wt, ht)),\r
                        -sdHexPrism(tp, vec2(hh, 10000.)));\r
    tp = p;\r
\r
    tp.xy -= vec2(2. * a * hs, 2. * hs);\r
    float hex20 = max(sdHexPrism(tp, vec2(hs + wt, ht)),\r
                        -sdHexPrism(tp, vec2(hh, 10000.)));\r
    tp = p;\r
    tp.xy -= vec2(2. * a * hs, 0.);\r
    float hex21 = max(sdHexPrism(tp, vec2(hs + wt, ht)),\r
                        -sdHexPrism(tp, vec2(hh, 10000.)));\r
    tp = p;\r
    tp.xy -= vec2(2. * a * hs, -2. * hs);\r
    float hex22 = max(sdHexPrism(tp, vec2(hs + wt, ht)),\r
                        -sdHexPrism(tp, vec2(hh, 10000.)));\r
    tp = p;\r
    tp.xy -= vec2(-2. * a * hs, -2. * hs);\r
    float hex23 = max(sdHexPrism(tp, vec2(hs + wt, ht)),\r
                        -sdHexPrism(tp, vec2(hh, 10000.)));\r
    tp = p;\r
    tp.xy -= vec2(-2. * a * hs, 0.);\r
    float hex24 = max(sdHexPrism(tp, vec2(hs + wt, ht)),\r
                        -sdHexPrism(tp, vec2(hh, 10000.)));\r
    tp = p;\r
    tp.xy -= vec2(-2. * a * hs, 2. * hs);\r
    float hex25 = max(sdHexPrism(tp, vec2(hs + wt, ht)),\r
                        -sdHexPrism(tp, vec2(hh, 10000.)));\r
    tp = p;\r
    \r
    float honey_comb = min(min(min(min(min(min( min(min(min(min(min(min(hex00, hex10), hex11), hex12), hex13), hex14), hex15) , hex20), hex21), hex22), hex23), hex24), hex25);\r
    \r
    float stared = min(honey_comb, star_thing3(p, c));\r
    \r
    tp.xy -= vec2(2. * a * hs, 2. * hs);\r
    stared = min(stared, star_thing2(tp));\r
    tp = p;\r
    tp.xy -= vec2(-2. * a * hs, -2. * hs);\r
    stared = min(stared, star_thing2(tp));\r
    tp = p;\r
    \r
    tp.xy -= vec2(2. * a * hs, -2. * hs);\r
    stared = min(stared, star_thing1(tp));\r
    tp = p;\r
    tp.xy -= vec2(-2. * a * hs, 2. * hs);\r
    stared = min(stared, star_thing1(tp));\r
    tp = p;\r
    \r
    return stared;\r
}`;class q4 extends zt{constructor(){super();x(this,"startFrame",2e4);x(this,"endFrame",2e4);x(this,"scene",new It);x(this,"camera",new Gt(-1,1,1,-1,0,100));x(this,"quad");x(this,"shader",O1);x(this,"renderTarget",new je(3840,2160));this.quad=new ge(new Mt(2,2),new Ze({uniforms:{time:{value:0},color:{value:new ie(0)}},fragmentShader:O1,vertexShader:Et,side:At}).clone()),this.scene.add(this.quad),this.quad.material.uniforms.color.value=new ie("#ddaa88")}resize(t,n){this.renderTarget.setSize(t,n)}render(t,n,i){this.quad.material.uniforms.time.value=t/60,n.setRenderTarget(this.renderTarget),n.render(this.scene,this.camera)}}var AA=`varying vec2 vUv;\r
uniform float time;\r
uniform float fadeprogression;\r
uniform float blackness;\r
uniform vec3 color;\r
\r
vec2 random2( vec2 p ) {\r
    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\r
}\r
\r
// Commutative smooth minimum function. Provided by Tomkh, and taken \r
// from Alex Evans's (aka Statix) talk:\r
float smin(float a, float b, float k){\r
\r
   float f = max(0., 1. - abs(b - a)/k);\r
   return min(a, b) - k*.25*f*f;\r
}\r
\r
void main() {\r
    vec2 uv = vUv;\r
    uv.x -= 0.5;\r
	uv.y -= 0.5;\r
\r
    vec3 color;\r
\r
    vec2 st = uv;\r
    \r
	st *=10.;\r
    \r
    // Tile\r
    vec2 i_st = floor(st);\r
    vec2 f_st = fract(st);\r
    \r
    float m_dist = 1.; // min distance\r
    \r
    float color_scrambler = 0.;\r
    \r
    for(int j=-5; j<=5; j++) {\r
        for(int i=-5; i<=5; i++) {\r
\r
            // Neighbor place in the grid\r
            vec2 neighbor = vec2(float(i), float(j));\r
            \r
            // Random position from current + neighbor place in the grid\r
            vec2 offset = random2(i_st + neighbor);\r
            \r
            // Animate the offset\r
            offset = 0.5 + 0.5 * sin(time + 6.2831 * offset );\r
            \r
            // Position of the cell\r
            vec2 pos = neighbor + offset - f_st;\r
            \r
            // Cell distance\r
            float dist = length(pos);\r
            \r
            // Metaball\r
            m_dist = smin(m_dist, dist, 1.688);\r
        }\r
    }\r
    \r
    float voids = max(0., (m_dist + 0.1 + 0.1 * sin(time)) * 500.);\r
    float cells = sin(m_dist * 40.)/2. + .5;\r
    float quarks = (4. - pow(m_dist - 1., 2.) * blackness) * fadeprogression;\r
    \r
    vec3 voids_color_vector = vec3(0.9, 0.5, 1.0) * voids * 0.5;\r
    vec3 cells_color_vector = vec3(0.2, 0.2, 0.2) * cells;\r
\r
    vec3 quark_color_vector = vec3(0.3, 0.3, 1.) * quarks * 2.;\r
\r
    vec3 halo_color = vec3(voids);\r
    vec3 large_blobs_color = vec3(quarks);\r
\r
    vec3 kote_color = vec3(cells,cells,cells) * 4.;\r
    vec3 mixed_color = voids_color_vector+cells_color_vector+quark_color_vector;\r
\r
    color = mixed_color;\r
    /*vec3 quark_color_vector = vec3(0.3, 0.3, 1.) * quarks * 2.;\r
    if(st.y < 0.) {\r
        if(st.x <0.) {\r
            // Bottom left\r
            color = vec3(cells,cells,cells) * 4.;\r
        }\r
        \r
        else\r
        {\r
            // Bottom right\r
            //color = vec3(cells,quarks,cells+quarks) + color_vector;\r
            color = voids_color_vector+cells_color_vector+quark_color_vector;\r
        }    \r
    }\r
    else\r
    {\r
        if(st.x <0.) {\r
            // Top right\r
            color = vec3(quarks);\r
        }\r
        else\r
        {\r
            // Top left\r
            color = vec3(voids);\r
        }\r
    }*/\r
    if (time > 227.) {\r
      color = voids_color_vector+cells_color_vector+quark_color_vector;\r
    }\r
    color *= 	fwidth(quarks) * 3.640;\r
    color *= 1.5;\r
\r
    \r
\r
    gl_FragColor = vec4(color, 1.);\r
}\r
\r
`;const U1=[[116,119,117,119,120,116,117,117,116,117,116,117,117,117,116,117,117,116,116,117,119,118,119,118,116,119,118,120,118,121,119,120,119,120,121,121,120,120,119,120,119,119,119,122,123,122,125,123,121,122,123,118,118,119,122,120,118,119,119,119,123,122,120,122,120,122,121,120,119,120,120,122,123,118,122,123,122,121,121,121,120,121,120,120,122,125,121,122,122,125,123,122,122,123,119,120,122,120,118,121,125,120,126,124,122,121,120,121,122,122,122,122,124,121,121,120,120,123,121,127,120,122,124,124,123,130,121,122,127,122,128,124,125,122,123,121,122,124,124,120,125,127,123,122,123,127,124,126,121,134,125,121,123,123,121,122,123,121,125,124,125,127,125,122,120,120,119,122,121,123,127,122,124,125,129,123,121,120,126,127,126,126,122,122,128,120,127,125,125,127,123,122,126,122,123,122,128,126,130,124,124,124,125,120,121,124,122,124,121,125,124,129,137,154,160,150,159,138,156,151,153,139,153,145,151,151,159,152,153,159,152,156,139,163,154,152,144,156,151,163,150,151,154,150,175,145,159,138,150,149,156,151,164,142,166,159,149,159,150,155,147,158,145,157,151,153,155,162,153,162,154,154,153,145,158,152,153,159,153,148,170,153,158,147,153,143,156,148,165,154,147,158,149,154,141,162,149,158,138,157,139,140,133,133,140,124,124,124,132,131,125,138,159,155,149,144,157,153,153,151,149,154,141,144,149,159,143,147,156,147,144,170,142,151,143,146,156,150,144,157,154,151,155,150,145,138,163,150,144,145,174,150,140,154,149,152,147,169,142,154,137,157,145,145,146,153,156,155,162,148,148,143,146,146,143,154,161,141,160,148,153,141,161,157,148,141,157,161,149,139,152,158,149,167,145,150,156,151,155,151,140,148,133,128,135,130,134,127,124,122,125,123,122,130,126,127,126,125,124,129,125,128,126,133,151,151,144,153,141,162,155,140,141,161,141,146,146,167,159,147,163,151,162,143,170,148,158,141,158,151,163,153,155,148,155,161,141,151,137,149,146,151,150,161,143,164,160,151,147,159,158,134,146,149,152,158,151,155,150,147,161,151,149,141,142,154,161,147,158,157,145,163,142,155,138,161,148,144,145,149,135,133,131,135,128,131,131,127,127,125,141,161,162,144,151,140,157,160,143,145,143,143,142,164,157,154,144,166,149,148,152,157,152,146,143,153,157,149,153,155,158,143,169,142,157,143,149,152,160,154,160,148,157,159,144,150,146,157,138,150,145,160,143,155,165,148,150,156,149,146,148,137,157,153,153,148,159,150,161,157,155,146,157,147,147,156,160,159,142,162,151,149,142,167,154,151,142,156,143,137,139,135,133,125,135,127,125,125,127,134,163,159,152,142,157,160,139,149,150,158,139,149,153,163,143,157,153,156,141,161,150,151,152,142,156,154,154,152,156,141,162,154,145,146,155,137,150,149,164,148,151,166,145,150,140,163,146,152,134,163,146,158,147,154,153,153,160,147,150,140,152,143,158,153,161,145,158,148,154,146,153,155,144,148,153,156,146,148,156,158,140,161,146,147,149,144,146,143,141,131,134,125,131,123,126,123,123,121,129,146,154,149,149,156,144,154,146,148,144,146,139,159,147,152,157,161,143,161,160,150,146,148,140,141,151,158,154,144,161,144,145,142,152,162,146,143,151,150,155,142,153,159,144,159,147,148,139,138,145,157,145,160,145,153,154,149,157,143,151,131,146,147,154,151,152,159,148,144,155,148,151,146,140,156,154,158,146,149,143,158,153,146,140,157,132,155,168,155,160,152,148,157,156,148,148,161,161,152,174,178,156,176,173,150,164,151,143,151,142,139,149,160,161,157,154,156,159,147,154,137,152,143,132,174,149,158,173,162,143,163,162,156,176,155,166,150,170,176,149,163,156,159,151,163,157,162,160,147,182,166,177,155,162,148,152,178,147,172,166,174,161,158,174,159,162,154,144,147,153,155,148,164,150,173,179,185,171,171,168,174,175,154,163,161,160,154,163,165,156,152,162,162,155,147,156,158,147,156,143,148,157,159,163,159,161,160,165,164,161,162,187,197,202,190,201,187,181,182,162,165,149,144,154,170,152,154,153,148,142,144,157,153,151,160,247,227,254,223,197,240,247,179,175,214,178,220,182,174,193,179,155,160,166,165,234,183,204,202,159,163,163,189,211,189,202,205,186,200,185,187,182,182,193,204,267,193,207,192,185,164,181,174,189,216,654,210,589,642,573,534,448,442,333,267,208,178,217,218,222,206,206,224,210,217,187,215,217,222,208,384,520,674,279,429,234,193,184,277,176,203,158,225,343,405,255,216,238,322,313,203,206,162,187,359,527,235,692,660,564,461,469,375,301,246,181,166,453,525,719,227,318,235,214,238,198,197,178,155,261,391,263,237,219,305,259,264,277,195,169,172,227,680,202,627,707,554,519,462,420,295,265,202,155,659,306,457,725,635,583,467,450,326,272,205,200,232,301,229,257,334,336,212,205,309,217,216,176,215,550,529,664,279,321,266,284,289,234,175,154,175,174,359,299,200,222,311,282,206,197,229,153,141,200,690,205,569,687,571,539,434,429,302,260,190,154,314,519,587,501,218,284,299,258,253,178,180,172,186,338,241,257,280,306,188,260,220,254,152,165,159,715,275,481,715,623,545,474,455,308,266,203,164,150,182,214,196,214,213,204,193,196,202,192,162,212,205,197,197,197,199,170,204,206,233,171,199,216,440,460,517,642,219,259,336,279,222,213,201,197,159,232,241,286,301,289,194,195,258,231,152,141,151,676,288,444,725,616,568,458,452,322,266,206,174,203,415,455,628,202,341,273,261,284,190,169,157,155,217,250,314,311,216,209,228,310,255,159,159,143,498,415,300,707,644,554,445,452,338,262,229,175,217,685,216,594,671,545,511,437,410,305,242,181,154,232,351,338,221,209,328,326,210,174,202,206,218,193,368,500,661,244,421,255,189,194,267,149,176,177,227,320,394,279,224,198,298,305,229,202,136,142,423,464,264,685,638,559,462,454,350,269,231,184,168,453,527,736,209,308,203,236,253,197,206,169,153,226,323,293,217,199,272,269,297,243,204,133,148,232,623,221,681,686,556,505,439,389,304,243,190,158,706,273,462,703,594,572,471,434,304,263,199,171,184,225,196,183,229,199,211,161,213,216,229,178,207,535,566,626,219,327,256,222,265,237,181,164,186,196,360,331,199,205,294,326,261,196,226,144,134,208,657,206,620,699,571,517,433,417,304,249,188,159,377,517,605,451,213,266,243,239,226,166,192,170,215,339,242,259,257,320,220,250,244,198,148,168,160,719,240,529,712,567,564,439,443,304,255,191,163,462,436,278,704,655,563,467,446,345,284,224,178,153,209,228,327,339,218,191,313,314,224,176,194,219,445,400,614,558,178,239,316,251,222,229,187,182,192,269,257,251,307,340,197,188,271,212,141,150,159,707,250,515,712,602,572,450,444,307,264,197,176,217,446,436,623,194,350,277,237,286,193,188,178,146,233,248,290,307,263,204,214,259,238,164,151,147,562,358,356,722,624,576,446,444,343,271,221,175,157,152,149,147,133,131,130,137,127,132,130,125,126,182,213,201,200,168,213,211,215,166,189,204,231,231,433,466,684,265,389,268,199,221,291,166,195,153,236,286,371,282,258,205,271,303,224,174,157,168,489,402,321,687,641,560,457,444,351,276,229,178,168,433,541,754,203,364,199,237,237,181,191,153,163,199,296,295,212,211,280,235,283,224,191,150,143,270,572,194,662,680,538,486,439,386,294,233,177,159,176,158,138,147,132,128,149,129,128,133,130,132,200,367,246,208,239,332,286,197,172,133,128,128,152,507,560,666,241,386,263,236,226,270,175,162,174,180,363,345,201,207,302,335,273,178,229,129,149,230,618,204,636,671,530,503,427,402,307,243,175,152,407,517,662,385,241,259,279,248,197,162,177,160,233,372,223,242,225,335,232,245,258,219,142,140,156,687,217,554,691,547,538,441,436,297,247,188,158,537,367,325,696,648,589,462,454,340,273,217,175,156,179,194,152,170,189,142,178,147,170,191,161,160,491,411,641,464,210,244,354,284,238,219,154,156,182,299,232,233,298,320,198,185,229,207,153,140,164,720,235,531,710,595,546,447,440,296,264,189,162,222,509,486,569,215,332,312,250,274,230,188,149,170,261,234,295,308,279,204,249,232,257,179,150,139,611,321,418,700,601,563,446,448,336,275,216,164,265,600,228,656,690,547,498,441,388,301,235,185,145,184,348,354,302,216,283,343,313,190,197,206,199,243,387,445,615,239,399,319,183,159,260,154,181,155,230,253,361,269,261,207,257,286,256,156,150,155,572,372,362,720,629,569,461,458,356,273,225,171,179,410,516,761,214,393,202,238,213,185,174,161,143,228,294,321,227,207,229,242,295,243,168,178,169,328,532,220,665,666,538,472,452,372,301,238,181,176,148,139,143,142,127,127,130,132,124,127,135,127,178,192,223,175,198,217,217,190,186,221,231,208,211,543,623,649,231,393,291,197,201,267,171,184,156,231,320,359,212,214,244,332,276,217,228,141,155,266,577,197,642,688,541,507,447,389,302,247,185,160,431,503,679,317,281,238,255,221,189,163,172,173,236,365,230,235,216,320,259,239,275,203,147,153,174,688,205,578,711,556,530,434,435,310,264,192,163,169,146,146,158,125,135,150,138,130,123,128,129,167,282,212,217,316,313,193,195,231,138,136,130,123,505,456,665,389,242,243,324,284,277,211,152,182,193,335,246,221,261,336,263,200,188,210,145,135,160,709,227,569,704,556,549,446,452,306,259,188,165,240,505,516,545,210,322,301,236,257,208,162,154,169,289,239,308,285,300,202,261,242,254,181,148,152,660,310,445,716,606,559,444,445,324,258,208,172,155,197,219,198,185,195,194,192,183,203,187,164,215,193,203,203,209,189,193,206,215,219,169,209,221,351,456,438,655,225,355,308,268,204,263,175,184,177,246,229,317,303,288,220,227,256,263,170,155,179,614,334,410,718,632,564,462,471,331,276,208,177,197,385,490,722,215,379,213,262,227,198,176,173,159,219,282,307,265,207,230,238,312,231,157,179,150,395,490,256,700,649,553,457,461,361,292,229,177,188,724,207,558,683,574,542,447,423,299,254,185,163,236,353,278,211,271,343,305,199,187,217,207,214,212,427,564,655,257,446,231,180,196,254,176,190,186,208,358,368,244,213,248,302,272,195,220,151,147,316,527,226,679,670,546,472,462,373,287,235,186,154,454,507,721,255,290,226,227,221,177,175,171,155,227,378,235,211,213,309,262,244,276,187,151,155,198,672,201,618,688,553,507,446,420,298,254,188,152,200,183,200,207,199,204,205,179,170,209,203,185,208,218,169,195,214,152,181,216,156,201,219,157,182,604,689,388,422,343,247,264,216,161,160,144,186,233,324,231,333,333,198,245,356,191,183,156,149,177,696,202,579,697,565,525,424,443,306,269,195,168,264,647,380,513,434,233,257,265,205,252,165,161,179,251,268,325,245,181,258,245,180,177,154,144,136,699,287,491,712,603,583,458,441,312,262,197,166,352,487,232,693,677,552,478,445,355,299,233,187,144,195,323,348,209,203,329,342,183,170,176,207,153,299,510,424,574,315,319,199,216,180,215,145,154,187,214,224,396,295,171,217,358,184,221,156,161,160,656,298,449,732,639,563,454,437,318,263,216,185,205,475,510,712,308,278,187,333,231,251,165,157,183,205,285,319,191,234,277,396,231,222,167,144,146,445,435,286,719,658,540,445,470,359,288,243,191,189,699,237,587,680,577,534,459,422,322,268,217,162,204,167,180,183,202,172,182,201,202,209,206,221,176,177,171,238,206,181,160,216,184,179,160,184,213,178,179,178,222,203,208,175,222,189,201,165,208,174,191,215,213,196,174,171,194,212,169,209,176,192,175,198,175,218,189,199,197,217,200,190,188,216,204,195,226,171,196,198,211,170,210,182,171,206,193,197,188,187,189,195,199,215,165,176,204,215,187,181,187,190,187,218,211,178,197,200,233,202,195,206,229,225,201,200,222,154,196,184,191,191,171,178,191,218,209,204,182,195,225,179,193,191,191,203,176,196,183,194,187,189,199,163,211,208,199,182,186,201,198,178,199,193,198,168,192,195,209,208,187,199,179,216,212,195,186,207,187,202,218,177,168,186,205,176,209,171,206,176,205,194,190,187,197,174,189,192,203,182,184,204,194,217,184,173,184,221,200,188,169,221,189,182,201,187,163,176,186,204,195,184,187,191,191,184,196,198,197,185,186,194,190,175,185,201,214,187,177,179,187,188,192,169,180,190,172,170,174,169,176,164,185,194,182,172,184,163,157,179,176,173,165,175,182,183,189,176,175,191,197,195,163,183,181,179,180,171,189,175,157,164,165,174,158,163,168,177,163,162,172,157,182,167,164,167,168,173,180,178,168,173,174,167,185,186,147,190,173,188,158,174,185,172,162,170,156,161,162,155,176,179,177,161,172,166,199,190,159,163,186,166,183,161,146,160,166,173,161,164,160,180,171,175,146,174,165,174,162,165,149,153,159,167,175,169,169,147,152,166,174,149,144,154,169,156,154,144,143,136,147,145,146,154,151,159,159,159,143,154,146,152,152,154,153,147,141,158,156,158,155,140,145,160,152,136,137,150,153,135,136,151,132,130,135,152,140,136,153,140,139,137,141,137,134,138,141,148,144,138,135,133,147,137,134,135,147,142,138,135,133,137,137,126,134,139,137,129,134,138,131,130,143,134,134,135,134,131,134,132,135,129,136,136,133,134,135,130,133,133,137,134,130,127,131,136,133,139,137,137,136,126,138,130,129,131,128,138,133,129,135,140,130,139,133,130,140,143,125,136,125,136,132,135,131,129,137,129,131,130,134,137,127,133,132,128,149,137,138,136,130,132,130,137,134,136,129,134,129,131,133,141,133,132,139,134,131,135,134,134,135,138,134,132,143,132,133,139,139,133,129,131,133,133,145,133,134,142,129,130,137,135,141,137,133,133,135,138,131,134,134,135,134,130,145,141,137,136,133,131,137,129,136,136,129,132,130,136,130,133,135,134,136,132,130,133,132,127,133,135,131,130,132,137,132,140,131,145,129,131,139,131,130,133,143,127,130,131,134,127,132,127,132,135,136,132,139,132,127,129,132,133,135,138,127,131,140,129,138,126,137,136,130,135,131,134,133,127,133,131,127,134,132,132,126,132,127,129,132,129,133,132,137,133,130,130,125,129,127,125,128,125,129,127,130,126,124,129,126,124,127,127,129,136,132,125,125,129,129,129,134,126,136,135,133,133,128,128,132,133,130,128,140,130,130,139,127,123,135,128,135,128,127,131,130,142,127,137,139,125,143,134,128,143,130,126,131,134,134,127,130,125,130,130,130,128,129,132,129,133,138,126,132,143,125,129,136,128,136,134,126,131,135,130,131,131,132,127,129,143,129,135,144,135,129,127,132,133,126,126,136,138,126,135,131,132,129,131,141,129,127,142,133,123,133,133,131,127,123,125,127,130,135,127,132,130,132,128,128,134,131,130,127,135,134,128,131,127,130,131,126,139,129,132,128,132,136,130,128,133,128,125,133,132,126,126,124,131,128,127,130,132,128,131,127,128,132,131,131,129,126,126,132,131,124,134,132,133,137,135,128,131,134,128,134,139,132,137,139,133,133,130,127,128,134,135,135,140,136,134,133,131,132,133,128,134,140,129,135,129,128,127,135,135,132,129,137,136,131,127,127,140,137,140,142,141,141,136,146,134,142,139,139,143,133,141,139,137,135,136,142,134,131,144,134,134,143,134,134,136,135,133,136,134,135,135,141,135,128,131,129,127,131,134,131,134,130,134,133,133,134,135,134,133,140,135,135,137,138,130,139,131,133,145,133,132,135,135,130,136,137,134,129,139,139,128,131,131,126,124,131,132,134,133,138,139,132,131,134,136,130,131,128,129,133,133,128,136,129,125,138,134,136,137,132,133,134,131,129,128,127,131,139,128,137,132,128,128,131,132,136,138,130,127,126,128,135,134,131,134,132,138,129,128,130,128,130,125,130,135,127,127,127,130,128,127,127,137,125,125,129,133,125,126,126,131,133,135,136,125,127,127,128,129,129,132,129,128,134,127,130,128,128,129,129,129,127,128,126,129,126,128,125,130,135,128,129,132,126,133,132,129,130,130,127,131,127,132,129,128,128,127,128,126,126,123,127,128,126,131,128,130,127,135,128,123,128,133,130,135,127,133,131,127,137,129,133,129,130,134,133,129,126,136,131,131,127,126,128,127,128,133,126,125,132,130,125,125,133,124,126,126,135,131,129,131,129,127,130,125,132,130,129,126,130,128,130,127,129,128,128,133,126,126,129,132,127,127,129,124,126,127,126,130,130,133,128,129,128,132,127,130,125,129,129,126,124,132,128,124,129,125,130,127,131,123,129,129,129,129,131,129,126,125,130,133,128,128,128,127,135,132,126,133,128,124,123,128,123,128,129,129,131,126,125,128,124,128,130,131,132,127,127,130,128,128,128,128,126,131,124,124,126,127,130,126,138,134,131,130,129,131,137,135,133,138,133,134,132,135,129,131,131,137,131,139,137,135,145,132,135,135,136,135,133,131,136,131,131,134,134,131,142,138,134,141,139,138,132,136,140,134,138,132,135,143,134,135,139,136,138,138,135,129,128,136,139,133,130,134,136,136,140,136,136,136,131,136,136,135,137,137,135,140,142,140,140,144,138,142,137,142,140,140,133,135,140,134,137,146,134,136,141,134,137,132,132,133,134,135,130,136,133,133,136,134,138,134,141,129,137,135,130,131,131,129,134,129,133,128,127,141,133,130,135,134,131,129,134,135,137,138,134,134,131,127,126,129,127,128,134,132,134,135,130,137,133,133,129,129,126,136,129,134,130,131,131,133,138,125,133,133,127,129,127,129,131,136,133,127,135,130,135,135,128,134,129,129,130,131,128,131,139,137,135,138,133,132,130,133,135,130,133,137,135,135,134,126,133,134,138,135,135,144,133,144,139,133,135,129,136,134,136,133,135,137,133,135,133,132,128,129,133,132,131,131,134,135,142,135,142,142,139,147,131,138,140,134,137,140,133,128,133,135,131,147,140,133,141,141,140,134,140,133,132,131,138,132,133,133,128,139,143,132,140,142,130,144,140,131,130,134,139,132,136,133,131,132,139,139,130,140,137,135,141,134,129,143,143,142,135,140,134,130,132,128,130,140,135,137,140,137,139,138,140,138,137,137,135,136,141,138,136,139,134,135,143,132,143,145,135,135,136,129,134,138,142,139,139,138,139,135,135,131,131,129,131,132,135,136,138,133,140,136,134,133,130,137,132,145,140,136,161,219,306,423,583,781,702,642,253,573,648,569,531,454,412,326,260,212,167,139,148,147,156,143,144,145,136,134,146,141,137,145,140,152,135,140,153,139,157,148,148,144,140,140,138,148,146,151,148,148,147,143,134,145,140,146,150,142,145,145,148,146,142,144,143,136,138,135,137,149,141,138,149,142,140,148,146,151,142,138,142,145,139,149,139,144,140,140,147,143,135,142,141,138,139,132,142,143,134,142,142,139,145,148,141,145,150,156,151,147,152,141,159,140,145,142,139,146,151,140,142,138,136,139,133,137,144,137,140,142,138,138,140,142,138,141,139,140,136,141,133,133,135,141,132,137,140,137,138,134,135,132,134,141,137,146,134,139,137,137,140,136,137,141,143,140,135,131,130,133,135,132,136,138,137,134,135,137,140,132,135,133,139,135,136,141,138,137,135,133,129,134,139,136,144,140,139,139,130,134,137,131,135,140,138,135,134,133,137,138,138,134,134,135,138,138,132,135,133,136,139,135,134,141,129,137,135,136,138,141,134,135,135,137,136,135,134,134,135,141,132,134,135,133,131,138,136,142,136,136,138,136,140,134,134,136,144,140,137,138,143,136,137,136,138,142,138,140,139,145,142,151,138,139,135,133,139,134,133,137,138,135,140,143,137,144,143,140,143,139,136,140,136,148,144,136,148,139,135,132,130,136,138,137,140,138,140,140,143,132,136,137,136,139,141,134,136,136,136,139,146,135,139,132,132,136,132,135,137,143,138,145,135,138,146,144,141,133,138,140,137,134,141,129,136,142,131,131,136,128,135,146,138,136,138,139,132,135,132,142,146,136,135,138,139,141,140,130,138,144,139,141,135,138,131,137,133,136,135,135,132,131,136,134,133,133,133,142,137,134,129,135,134,141,133,136,138,138,139,133,140,137,141,136,141,137,133,143,133,136,133,133,136,130,131,135,132,134,135,134,133,138,132,135,137,134,134,136,137,137,136,130,132,133,139,135,136,136,143,145,135,133,136,134,136,140,138,138,135,145,134,136,134,138,133,141,141,138,146,145,138,140,137,137,140,140,139,144,150,150,145,153,138,145,134,139,148,142,130,134,139,143,152,147,152,140,143,144,139,145,142,145,144,140,142,137,134,137,138,138,139,131,136,148,139,142,142,134,140,141,149,144,142,137,138,131,141,143,140,143,139,145,150,142,142,131,137,136,143,143,135,151,136,139,150,134,145,152,146,140,144,150,137,141,138,142,139,149,140,137,143,147,136,137,143,138,136,142,141,134,142,142,134,137,138,142,136,138,141,139,137,137,131,136,130,132,136,131,133,145,135,133,132,137,134,133,139,136,138,135,134,131,130,131,135,133,131,130,139,137,142,140,132,145,135,136,145,138,138,130,138,138,135,136,133,135,137,139,132,138,135,139,140,132,134,133,132,138,143,138,135,134,136,136,142,139,141,140,141,141,130,131,137,134,137,138,137,133,140,135,144,141,138,137,149,142,137,137,141,134,140,151,136,145,134,138,156,139,142,150,145,143,145,140,136,134,137,146,143,143,145,146,146,141,145,150,130,141,146,134,142,136,144,140,130,137,131,130,135,136,135,145,141,138,139,140,135,141,145,133,142,145,135,140,150,152,138,138,140,136,138,135,144,136,136,145,131,137,138,136,142,136,136,141,137,131,138,134,138,148,135,144,145,135,145,134,133,134,135,136,133,138,138,142,137,138,132,138,138,127,134,135,131,137,136,133,136,138,131,131,137,130,135,134,145,136,138,138,140,132,132,144,136,140,138,135,142,136,133,142,138,140,130,141,149,208,241,358,467,759,789,537,324,363,691,627,590,487,450,332,289,227,193,164,152,179,164,171,179,145,183,184,149,158,157,158,154,168,170,177,175,180,177,171,146,178,176,153,181,154,184,171,164,167,155,170,176,160,173,166,161,158,181,159,164,166,169,184,151,162,150,158,160,156,158,188,162,170,172,156,146,163,181,156,155,150,163,177,156,169,172,162,175,167,155,169,148,171,160,163,176,166,149,180,168,162,153,178,173,151,163,145,158,148,148,136,141,141,148,151,143,140,148,144,177,163,150,157,172,167,153,163,162,167,146,159,163,190,161,170,171,161,157,162,174,157,154,156,154,173,160,157,158,152,172,159,159,158,166,158,156,155,175,162,164,180,153,174,150,170,167,152,161,159,162,167,166,158,152,161,166,145,159,154,153,151,164,157,168,154,168,170,148,160,160,174,144,159,162,175,161,171,160,165,158,163,164,153,169,150,154,138,149,147,141,135,134,129,134,142,138,131,136,141,137,134,138,136,134,135,133,138,137,138,134,140,168,175,166,151,149,176,168,143,159,149,164,156,179,166,179,168,183,174,163,159,169,167,158,167,165,177,164,170,175,166,154,175,164,158,154,162,157,171,160,174,168,162,177,158,157,154,184,155,168,158,176,164,163,175,152,164,154,164,146,157,149,158,169,162,151,161,151,178,160,145,151,158,155,160,154,141,151,147,147,143,137,153,165,135,139,142,159,181,185,164,157,165,161,185,153,148,147,163,160,172,158,168,162,168,159,149,160,151,167,147,151,153,188,149,157,173,151,149,183,172,151,156,155,154,174,155,160,165,160,183,160,148,149,172,161,157,172,176,172,167,185,169,164,153,181,162,157,150,162,165,169,160,162,160,167,177,153,156,143,151,156,164,154,164,152,169,167,166,158,161,162,149,163,152,148,150,139,136,134,136,136,136,129,135,136,135,160,154,189,166,147,192,152,161,165,146,167,142,164,160,184,176,168,163,143,173,153,166,149,145,172,160,171,161,167,153,195,164,159,181,141,168,160,154,156,175,183,161,166,158,172,150,159,161,152,185,167,170,154,171,158,175,170,143,184,149,159,166,158,166,169,161,151,191,152,178,161,161,191,157,160,168,163,154,171,171,151,168,153,172,159,152,164,138,151,140,144,138,139,139,139,144,145,138,134,149,157,167,150,171,155,152,171,159,162,154,145,192,164,168,156,157,159,175,165,157,171,155,164,151,164,162,175,170,158,176,144,180,157,146,168,140,168,162,164,148,166,159,164,167,144,187,163,149,170,155,181,167,156,144,187,142,164,153,136,169,152,162,150,159,159,167,161,154,178,149,174,148,144,182,161,163,166,160,153,185,159,147,174,148,165,153,138,153,134,149,138,142,134,133,133,137,140,137,133,143,133,137,136,134,138,129,133,137,144,136,145,165,172,151,168,167,162,165,166,158,168,162,159,147,158,187,152,145,174,156,152,164,166,162,138,151,193,175,159,177,173,167,156,179,161,153,168,149,159,152,180,162,148,145,166,149,147,161,168,146,159,177,172,155,143,176,149,155,157,146,155,155,148,176,158,168,170,154,153,173,147,157,159,151,150,145,168,157,171,155,141,171,164,161,146,169,150,161,189,169,160,152,180,151,148,146,163,160,157,144,168,162,163,176,158,166,158,171,151,153,160,151,171,166,181,165,167,163,178,148,144,179,156,155,150,194,176,150,169,164,156,151,171,146,149,142,145,167,165,195,164,159,146,162,159,149,166,156,159,152,186,169,167,159,179,150,150,153,163,169,149,167,158,172,162,172,161,160,244,301,417,591,804,686,625,217,592,678,549,533,440,410,318,261,199,168,162,170,165,137,172,173,162,150,159,170,172,149,155,160,162,173,162,159,167,159,177,153,172,150,157,159,177,170,170,166,173,172,157,178,151,167,150,152,157,179,159,161,175,171,155,168,187,159,176,154,148,179,162,161,162,155,165,155,150,161,157,155,178,167,187,180,167,167,162,168,155,187,156,160,164,170,181,173,168,158,170,164,163,161,158,155,176,166,189,167,154,150,154,157,147,153,143,143,155,157,156,175,169,174,153,155,157,173,165,173,161,157,165,167,160,165,168,157,181,162,165,166,149,155,161,151,186,154,167,164,168,174,147,183,156,164,151,150,168,169,159,169,163,161,160,144,147,158,161,152,169,163,174,165,182,172,159,157,169,172,147,172,164,172,167,171,161,160,151,169,157,174,158,163,157,163,151,163,168,157,172,150,153,154,167,151,152,153,158,141,149,145,139,133,134,133,136,138,138,140,132,137,138,144,134,141,136,139,149,146,132,136,155,164,141,162,186,159,156,151,180,167,150,156,156,165,172,156,168,167,165,170,155,172,147,173,163,176,161,171,164,172,174,148,152,159,181,148,158,153,181,163,161,157,161,156,166,175,152,171,158,155,165,159,155,167,171,180,175,157,168,155,163,157,153,174,165,169,171,159,162,152,171,158,155,156,151,152,151,153,143,147,143,146,144,141,151,141,163,184,168,162,172,175,176,158,154,168,173,146,169,163,178,165,159,162,157,160,173,165,158,154,159,155,166,152,161,169,156,171,160,160,150,168,161,157,159,187,168,172,179,157,159,163,182,155,166,154,171,167,175,161,164,158,167,168,141,161,156,170,168,175,170,162,158,170,163,159,155,182,172,154,165,165,178,176,159,167,168,160,180,161,170,154,167,154,155,150,144,152,145,142,147,135,132,134,140,145,146,173,164,151,169,159,151,166,147,166,148,142,165,153,176,162,161,152,186,159,159,179,145,175,147,157,154,168,161,170,156,148,182,151,166,153,143,191,163,187,168,182,165,190,159,152,185,149,161,171,162,161,181,170,170,189,158,184,156,167,178,159,180,175,165,156,172,154,169,182,148,189,147,153,176,159,185,157,161,147,186,152,158,171,141,168,143,148,152,140,145,145,141,141,143,134,132,135,143,153,169,162,177,161,153,192,164,149,177,155,164,164,153,151,165,166,162,173,149,174,163,153,159,145,177,160,163,153,161,157,178,176,152,180,149,148,169,157,168,164,162,152,184,155,167,161,147,168,148,166,156,160,153,170,159,151,168,144,176,149,151,176,153,174,163,158,145,185,164,154,172,141,160,150,151,148,161,171,167,166,148,182,146,164,153,143,178,139,142,145,134,138,128,133,133,136,133,135,138,131,134,136,137,140,141,139,135,134,131,131,137,157,166,183,155,154,180,160,151,155,149,160,154,157,190,169,163,165,170,158,155,162,161,161,165,155,152,158,187,179,158,167,176,147,146,165,149,145,153,188,184,166,156,171,163,149,177,144,149,173,150,169,160,172,166,163,152,183,146,151,175,149,150,153,164,193,164,139,183,165,153,161,161,153,166,169,191,169,160,157,182,161,169,163,158,152,145,171,179,181,162,154,166,168,157,167,169,155,161,146,172,188,174,159,152,174,179,163,144,161,163,165,160,166,176,157,174,156,169,159,184,151,158,165,157,161,157,180,160,162,158,168,156,148,169,164,152,152,176,176,171,174,169,144,158,167,166,162,143,166,166,182,175,165,165,155,161,157,152,147,157,149,157,185,177,173,157,183,200,243,366,477,775,810,552,315,385,698,639,572,473,453,339,279,222,189,148,140,136,127,133,136,129,137,141,136,134,128,136,135,174,168,161,163,168,153,154,172,158,149,145,158,169,178,176,153,168,149,170,154,163,147,158,143,152,179,163,156,162,174,163,154,153,165,152,158,148,167,166,151,166,176,149,153,184,156,163,154,220,644,233,624,692,548,511,451,423,327,250,223,180,160,203,161,148,179,190,192,247,346,419,666,726,453,495,234,649,663,543,468,436,410,310,238,242,298,205,232,223,233,212,212,273,221,242,180,219,217,325,395,513,614,187,359,342,275,210,269,208,182,189,243,226,343,326,287,225,241,278,243,205,176,169,634,334,425,701,633,566,449,467,341,285,215,192,192,400,476,690,224,353,231,249,252,219,200,200,180,189,261,301,271,200,210,230,305,265,166,161,156,394,446,265,678,649,557,466,464,356,283,244,193,197,709,231,586,671,573,557,447,439,317,266,205,177,249,359,302,223,254,350,333,218,192,226,211,231,212,395,545,666,255,426,254,181,202,295,172,199,176,223,344,390,247,218,238,308,329,215,217,161,156,348,507,233,681,654,561,467,463,367,289,251,192,167,467,523,711,226,299,221,239,236,188,189,175,157,244,370,267,221,205,291,275,253,258,195,158,161,203,647,205,611,682,554,533,431,436,309,257,195,159,224,194,199,205,201,214,212,199,186,224,198,185,215,227,196,187,208,216,215,174,208,223,243,193,223,612,622,619,324,254,305,259,302,257,215,220,219,212,341,314,252,228,318,317,251,190,219,142,170,193,689,215,601,670,582,544,449,454,315,264,196,179,313,528,538,503,218,284,277,230,281,175,218,200,217,334,270,276,276,325,211,258,213,241,164,182,152,706,264,499,707,592,567,454,459,315,270,198,177,386,489,261,686,658,577,499,461,374,298,241,187,161,210,266,332,323,219,216,325,325,231,182,217,230,405,414,574,561,198,310,340,276,231,240,186,196,175,244,236,281,345,343,208,202,263,234,172,163,163,672,284,474,705,627,569,467,455,321,271,206,193,213,422,453,646,197,359,263,271,292,201,210,170,198,215,255,298,307,229,210,222,313,249,171,148,157,484,416,317,676,636,546,456,465,348,290,227,188,210,681,222,608,693,544,531,460,419,314,249,191,165,220,198,172,194,211,187,187,171,221,231,181,188,196,543,483,671,370,225,245,215,178,312,249,182,233,204,367,234,249,288,205,292,225,243,179,174,174,423,455,273,702,643,572,464,465,362,315,237,199,171,419,643,559,418,257,230,279,219,238,180,174,169,265,296,256,295,190,236,299,194,238,190,165,160,234,625,222,630,683,569,514,450,418,317,251,206,163,716,266,487,713,598,575,479,439,319,277,204,185,229,193,254,345,204,316,233,212,234,159,195,234,187,484,635,498,465,248,215,258,215,196,184,199,156,241,339,254,331,191,316,328,186,209,248,197,157,206,672,211,622,693,550,536,440,425,310,264,203,162,286,605,425,635,240,231,273,254,231,166,166,154,245,226,254,265,217,334,219,222,211,184,163,148,161,717,242,529,691,601,563,453,466,307,279,203,184,192,188,207,204,223,220,216,187,196,209,221,183,217,182,183,213,197,171,204,213,183,206,213,160,195,526,604,425,600,341,270,264,328,165,194,210,203,196,246,240,395,286,207,267,294,208,192,148,165,145,707,258,530,706,611,584,457,470,317,273,201,179,224,596,458,460,437,194,279,309,191,258,190,176,190,207,265,331,207,256,302,227,246,212,154,150,144,564,378,361,728,650,563,454,473,351,282,226,181,238,651,231,649,689,552,540,450,397,318,252,198,149,238,358,306,215,277,341,253,191,218,242,187,174,210,472,436,689,357,272,277,253,194,240,181,172,203,204,306,415,203,185,254,338,191,249,187,170,165,481,429,306,711,664,577,465,468,343,275,232,184,170,450,539,640,395,335,236,314,224,269,153,185,169,207,329,287,191,273,302,307,239,207,223,192,183,286,589,207,652,679,558,492,462,394,303,254,201,174,740,261,506,691,619,585,461,465,326,276,210,177,199,208,205,164,240,228,196,180,209,234,232,196,214,520,600,621,243,380,260,256,282,245,168,176,184,201,364,373,204,200,273,322,258,190,249,159,157,238,608,206,640,697,551,520,441,402,300,260,193,172,415,501,632,393,248,253,266,264,199,177,189,161,231,371,235,236,247,331,246,233,277,199,164,176,193,705,229,565,661,554,544,431,451,309,281,191,175,519,384,327,698,636,573,475,461,343,276,229,198,184,209,221,315,340,258,203,281,321,227,190,201,247,496,428,643,471,205,249,317,265,244,201,196,165,197,320,262,231,270,332,215,188,212,199,163,140,178,708,236,537,712,593,559,444,451,310,271,201,175,211,487,509,574,210,339,287,258,309,215,208,154,173,262,260,298,313,254,198,250,253,255,162,155,145,606,339,400,713,607,573,450,447,326,275,224,179,154,145,149,150,141,137,137,132,145,139,139,132,133,184,213,203,214,170,213,220,228,197,192,225,244,287,455,406,683,258,375,307,246,231,302,187,176,188,212,248,340,309,264,208,258,303,255,163,136,178,544,373,359,738,642,573,466,465,343,284,230,195,174,405,526,741,229,369,211,249,249,210,189,178,174,187,308,314,239,216,259,251,315,230,168,162,147,332,536,224,690,670,551,478,455,381,299,238,179,165,168,155,151,151,153,157,163,145,145,144,145,141,193,370,295,209,233,325,318,209,180,144,147,135,175,475,569,661,250,420,267,215,227,281,199,175,187,190,358,376,211,208,280,342,274,203,255,160,149,270,579,215,656,703,539,489,447,396,310,254,189,169,447,512,683,320,270,241,253,229,174,165,172,163,224,370,237,207,232,330,271,236,292,199,149,142,181,688,212,599,689,558,538,448,433,303,267,191,165,591,332,377,723,613,578,486,447,341,276,217,184,166,173,194,212,172,179,179,205,199,159,199,210,172,476,684,441,549,244,231,282,267,173,189,164,206,214,236,251,371,196,313,275,180,226,221,185,148,167,711,212,563,700,566,527,452,460,310,277,205,178,215,628,345,668,288,271,244,240,225,168,191,196,187,270,340,297,208,315,212,188,293,168,168,149,190,681,305,445,732,606,575,473,453,351,281,211,184,295,551,219,671,680,547,492,466,374,306,231,189,143,213,337,213,287,306,202,316,178,185,224,180,199,257,640,310,653,277,256,305,202,184,252,224,214,175,202,338,288,221,328,211,234,219,232,179,154,216,634,327,412,699,652,582,469,462,343,290,219,186,181,505,622,659,346,241,197,250,204,199,201,165,182,203,331,253,257,262,213,208,216,204,171,198,178,381,481,261,696,654,547,452,468,371,302,236,197,154,219,186,228,180,225,185,225,181,195,191,227,202,209,216,196,205,199,201,191,214,236,177,204,242,168,516,547,469,404,308,325,272,191,207,199,177,194,189,399,335,193,357,275,279,341,192,163,167,166,331,523,239,666,678,537,481,473,389,313,239,203,167,423,690,444,451,342,333,247,219,216,182,170,181,254,367,291,239,364,216,248,362,202,191,142,176,187,679,208,618,675,549,533,449,437,311,264,202,164,645,319,409,725,638,581,492,457,347,285,222,198,208,267,213,311,369,209,228,344,252,160,179,209,227,510,575,574,382,315,319,298,210,207,171,181,190,244,343,242,247,293,258,192,235,181,192,160,171,188,701,207,587,688,572,527,442,444,310,273,203,176,262,600,423,539,245,339,260,218,174,213,183,168,193,281,232,310,299,194,212,315,198,197,163,163,158,715,288,502,695,629,586,475,455,329,272,216,187,173,188,229,244,247,170,221,155,162,158,182,173,182,182,144,161,152,186,147,139,157,162,185,169,172,325,394,544,591,188,353,349,238,223,240,182,199,198,244,232,328,334,322,205,226,305,217,185,158,183,679,320,454,724,618,583,480,476,338,281,212,189,216,403,475,681,206,380,252,271,244,204,179,174,166,227,263,307,300,225,216,234,294,258,160,176,170,466,455,291,712,675,548,464,482,372,279,232,196,213,686,215,596,706,562,556,461,439,304,263,190,169,239,370,310,207,227,341,352,216,185,223,213,230,225,373,538,647,267,420,258,206,229,271,170,197,198,222,314,398,258,241,229,311,280,216,199,173,163,383,487,258,698,672,556,468,471,370,290,231,183,172,460,530,738,234,326,228,252,251,179,206,168,188,220,344,297,209,219,295,284,274,273,191,161,152,220,644,213,633,688,565,519,439,411,305,252,197,193,157,155,145,139,133,135,133,131,144,141,140,133,167,215,211,194,226,208,212,174,222,221,228,186,222,613,626,612,278,289,308,244,259,267,190,191,186,209,344,310,202,214,304,351,228,216,208,141,146,203,652,211,605,683,567,534,443,452,309,259,190,175,357,527,615,493,242,282,263,248,242,189,170,175,209,348,245,248,259,331,235,248,261,221,148,167,154,713,253,526,713,586,573,470,445,301,269,199,168,186,152,179,173,146,148,142,150,151,139,138,140,144,216,229,292,350,249,186,266,276,155,143,138,136,393,392,600,545,175,295,339,235,233,214,164,213,175,258,269,286,314,338,224,202,253,213,167,149,163,714,277,495,712,618,564,478,447,316,274,204,179,220,430,444,639,209,349,274,274,271,207,181,162,151,231,242,306,310,241,214,218,283,252,154,163,157,538,393,352,726,650,589,464,448,353,284,220,185,221,672,219,619,715,554,529,453,420,307,247,188,163,222,192,179,198,207,190,188,172,211,225,169,184,206,553,458,663,342,236,272,205,209,283,179,217,189,202,372,240,232,318,225,267,263,230,161,157,163,474,424,301,703,617,559,464,455,360,296,240,192,165,423,654,575,405,249,200,294,218,227,164,162,165,234,296,267,304,188,236,295,216,244,193,187,151,251,594,206,655,666,540,498,453,410,312,254,195,164,729,263,500,725,638,586,469,444,313,267,202,184,229,209,253,342,191,308,254,207,222,166,192,226,209,464,650,498,455,250,207,246,199,190,197,176,182,246,342,273,334,194,271,305,197,203,244,189,147,208,634,204,634,690,551,515,446,407,309,250,193,155,296,611,464,637,254,236,251,223,239,183,154,179,256,214,249,321,205,312,234,208,233,199,166,137,160,730,233,569,717,591,552,442,444,307,269,194,166,186,192,210,222,232,212,202,176,186,209,207,172,200,192,177,205,212,171,192,210,166,196,211,152,190,546,619,441,579,337,274,328,275,164,171,161,228,217,266,246,369,309,225,255,293,200,194,158,166,172,731,266,537,705,568,564,456,449,299,269,212,180,216,621,442,463,438,206,265,257,202,251,173,213,179,208,273,324,199,252,280,234,225,224,151,166,152,613,355,400,731,653,577,476,451,334,281,234,176,240,647,223,655,691,554,530,464,399,313,258,196,157,231,369,312,199,260,340,263,191,207,228,200,168,206,474,407,638,361,229,261,206,204,227,161,218,186,224,297,418,219,208,252,355,191,245,159,153,162,534,399,345,721,635,570,465,459,350,271,222,178,166,439,545,646,378,326,226,335,254,262,160,177,159,208,326,290,200,281,300,335,232,207,205,172,173,304,575,232,685,707,564,503,459,381,307,246,189,171,746,237,526,713,591,588,466,450,333,273,199,173,209,215,228,179,240,229,228,173,212,230,222,198,213,482,570,632,245,419,262,223,250,250,163,180,168,202,366,373,211,203,290,324,273,192,244,154,161,253,623,227,671,696,567,510,447,406,305,243,202,162,443,513,688,373,248,271,289,264,214,173,206,158,253,392,242,247,234,319,240,242,284,217,171,169,185,711,220,575,708,577,540,452,445,296,272,198,163,573,375,366,741,648,596,465,444,342,269,217,184,175,225,225,317,336,271,201,286,340,247,216,192,233,506,452,661,436,213,263,315,289,253,211,200,165,191,338,256,219,273,331,228,203,207,202,159,139,169,702,228,548,704,599,557,458,447,302,274,185,169,242,510,507,535,209,350,273,259,273,217,199,169,181,289,258,291,314,298,205,231,237,216,162,156,152,631,316,439,716,647,571,479,462,324,269,210,232,171,139,150,139,144,141,139,142,134,145,126,134,139,185,206,211,223,189,199,219,222,212,198,222,237,324,460,429,654,267,341,297,223,235,260,191,192,214,229,234,339,315,278,203,240,274,244,159,152,171,604,356,397,742,657,586,478,464,342,276,221,184,182,386,514,737,226,373,203,249,233,204,194,156,188,212,288,315,261,238,234,227,306,238,157,172,183,360,523,244,717,666,542,473,449,376,292,235,185,167,161,167,140,147,145,155,169,138,138,139,158,137,183,378,302,210,210,319,339,212,177,144,137,135,176,440,585,657,263,443,234,191,287,246,180,182,181,210,383,403,229,214,272,368,277,203,223,158,150,298,564,227,693,697,556,489,452,391,304,241,191,162,460,512,708,295,294,237,234,244,193,170,176,170,218,365,223,206,216,322,271,241,279,203,148,144,186,684,215,608,727,573,540,460,434,303,249,189,154,623,317,405,716,630,582,476,444,338,276,212,185,169,176,192,204,171,191,174,203,203,147,202,212,166,490,653,481,549,235,263,271,235,163,210,164,191,225,261,238,369,226,297,264,169,222,234,205,141,170,708,212,603,684,582,548,453,434,300,266,198,170,218,615,341,692,288,255,261,264,222,199,201,177,176,227,289,288,197,317,211,204,237,184,165,140,165,676,298,473,715,607,565,472,459,330,272,211,168,335,534,234,702,704,548,491,461,368,298,231,193,141,209,355,211,272,338,197,307,198,164,206,168,181,290,643,298,645,268,240,323,195,157,268,179,168,180,220,354,286,202,373,219,226,225,185,158,150,202,650,329,440,716,640,570,459,458,338,280,211,178,181,523,579,643,323,258,217,241,199,192,184,164,173,214,316,256,260,281,215,215,259,195,176,173,176,432,469,280,707,665,547,476,462,368,287,234,187,173,209,199,234,187,214,189,209,186,224,174,229,195,206,209,210,200,204,202,173,193,245,160,195,233,180,514,571,478,382,299,341,308,177,193,208,170,185,197,349,344,196,299,283,242,297,207,145,162,183,353,515,243,700,677,563,477,461,372,293,248,186,150,436,706,436,433,362,320,267,228,223,175,170,154,249,369,283,271,342,225,267,368,196,187,144,170,210,658,221,629,693,561,522,452,422,311,275,201,155,662,298,447,718,658,605,488,444,323,268,217,191,206,287,220,313,359,208,226,338,242,178,208,228,229,502,597,554,357,354,288,348,167,191,164,155,161,231,369,264,237,294,295,208,216,167,203,173,160,191,684,204,619,702,556,522,464,436,314,269,199,160,277,633,450,517,248,333,264,231,189,206,158,181,199,314,229,323,298,203,191,318,258,186,164,163,181,714,287,511,712,604,566,469,472,325,271,230,173,406,502,293,726,697,583,503,459,363,293,241,223,186,172,171,169,169,167,159,167,152,151,162,151,138,160,148,160,144,148,147,151,146,155,142,147,163,146,145,153,145,150,147,145,137,147,147,146,137,141,145,143,132,141,135,144,136,140,130,142,133,138,144,137,140,143,145,133,141,153,136,145,150,148,149,138,146,140,139,146,141,147,133,141,140,146,146,142,134,145,137,136,147,137,138,138,130,133,128,136,138,135,135,134,142,137,141,131,134,147,138,138,138,137,133,132,130,137,138,140,142,133,138,140,137,136,132,135,136,137,140,131,133,130,131,133,128,131,136,136,135,135,132,133,137,131,137,140,140,143,143,134,136,147,132,134,137,132,138,136,134,140,142,138,137,140,135,131,132,144,132,138,137,139,138,133,133,133,135,139,132,131,131,137,133,132,134,130,133,137,139,135,136,138,136,137,131,135,136,152,155,147,150,146,138,147,150,142,144,143,146,139,137,134,135,141,139,136,133,142,130,135,137,133,135,131,136,133,133,135,131,135,133,139,135,139,132,131,134,141,137,139,139,133,136,138,134,130,133,132,136,131,134,130,133,126,130,132,132,136,131,128,128,131,130,133,138,135,133,138,134,139,133,140,141,133,135,138,133,139,134,139,134,129,134,136,133,132,133,129,137,132,135,130,132,139,136,137,138,134,140,139,135,141,131,138,132,135,137,132,135,130,127,128,126,131,126,128,129,128,131,129,132,130,130,137,132,132,131,126,128,127,132,130,128,136,131,132,131,130,133,131,138,135,132,130,133,130,131,126,129,125,128,125,125,127,127,125,129,131,131,129,126,127,125,128,127,123,128,127,130,127,130,124,127,129,125,128,124,126,127,125,128,127,127,125,133,128,131,129,128,127,128,130,128,130,129,133,143,140,140,143,138,146,139,141,143,130,137,134,137,135,127,133,124,131,131,134,135,133,126,127,130,132,135,132,135,127,131,122,127,127,128,129,128,130,131,132,131,135,133,135,131,133,131,138,133,132,134,130,127,134,125,127,124,124,126,127,128,129,133,135,137,140,138,133,132,130,135,133,127,127,128,133,133,134,132,131,134,135,134,135,131,132,133,136,135,135,133,130,132,131,130,124,123,125,124,131,132,130,131,134,131,133,131,133,132,133,133,132,130,128,124,126,126,130,129,127,127,128,125,128,130,127,132,131,134,131,132,128,128,130,130,131,131,129,128,131,132,131,127,126,128,127,127,126,129,127,127,126,125,128,130,129,129,128,127,127,129,123,126,129,130,133,131,128,128,131,131,125,127,135,131,136,131,128,126,130,129,133,132,131,136,133,133,136,142,136,138,134,133,143,136,140,136,137,143,141,142,150,146,150,139,141,132,144,138,143,134,128,133,137,135,134,134,133,138,129,130,132,132,131,133,141,137,143,139,133,137,131,133,132,137,133,129,131,135,134,137,133,131,134,132,134,135,135,129,134,129,133,131,134,132,134,133,131,137,133,130,136,134,130,134,136,135,137,128,133,131,132,134,129,133,134,145,134,136,136,137,142,135,149,139,145,138,140,142,136,129,137,135,138,137,132,137,141,142,137,142,135,139,141,139,143,135,138,141,141,137,133,134,139,138,135,136,140,141,130,142,134,135,135,138,135,132,132,127,137,133,133,137,134,133,136,129,134,133,135,132,131,138,143,134,131,133,142,135,129,135,126,144,130,132,141,135,136,135,136,130,137,139,129,128,135,131,134,132,131,128,137,137,133,128,132,129,135,127,125,133,134,132,130,144,138,133,132,138,134,139,133,138,152,138,149,141,150,146,148,140,152,145,144,146,139,143,147,146,143,193,167,155,183,216,149,150,156,185,165,159,143,170,169,206,195,166,170,178,169,154,156,158,179,152,192,165,187,167,184,164,162,157,168,176,145,165,151,192,177,197,159,172,153,187,171,158,161,165,171,188,193,177,169,175,196,168,169,151,179,161,151,182,188,174,208,179,171,162,156,184,154,158,151,171,158,213,169,184,157,181,178,148,152,159,164,146,157,157,161,139,133,130,129,131,128,127,135,137,143,156,190,180,162,160,164,189,150,157,148,175,169,201,186,189,168,180,186,161,164,152,173,146,145,169,188,166,199,166,166,152,173,172,145,156,161,171,175,202,160,179,153,189,171,160,157,160,158,148,191,173,183,179,189,153,168,155,174,163,155,144,174,181,197,192,169,167,173,183,152,158,153,178,168,204,168,185,167,187,176,164,169,155,171,140,149,173,196,157,175,157,152,143,142,145,137,132,144,136,131,136,128,130,128,139,138,134,131,134,131,131,198,168,162,193,190,153,162,160,180,157,166,148,177,156,203,173,173,162,174,175,151,151,159,168,154,204,169,195,171,197,166,167,157,166,178,147,150,166,184,186,202,161,176,167,181,163,156,157,177,171,191,180,181,167,175,180,164,159,153,176,145,144,178,194,174,203,177,175,151,168,178,151,162,150,176,151,149,150,147,136,138,133,132,129,128,132,135,206,157,159,169,197,153,162,149,176,168,150,143,171,174,199,188,161,165,171,179,147,153,149,169,157,198,174,188,169,184,180,165,166,158,183,146,156,162,191,170,200,164,171,152,178,171,152,160,151,182,179,201,163,179,156,190,166,159,148,162,158,140,192,186,178,192,187,155,161,153,178,159,155,145,173,163,199,179,173,164,170,171,143,154,158,158,150,154,148,164,140,147,138,136,135,137,133,136,136,148,172,158,158,194,147,191,160,147,190,139,155,166,193,167,186,151,158,192,146,166,158,139,166,147,152,144,174,154,187,155,164,170,140,174,145,143,160,177,148,172,162,141,195,142,156,177,139,162,150,152,153,197,151,178,162,149,176,142,152,152,144,171,170,154,149,184,147,200,154,149,195,136,155,163,177,151,196,149,159,185,142,174,150,141,163,144,161,145,140,153,131,132,134,132,131,134,129,129,142,191,145,205,157,153,208,141,166,170,139,167,150,151,147,194,163,185,153,145,180,143,166,146,140,171,176,160,163,170,152,199,148,144,182,139,161,156,167,152,192,151,169,172,140,179,151,150,159,144,166,157,157,148,186,150,179,153,142,180,150,151,158,180,155,179,153,154,183,137,168,158,147,168,148,160,151,173,150,195,162,158,169,153,166,145,156,182,152,193,147,157,135,138,138,143,134,139,147,138,205,162,173,169,214,172,166,165,172,176,145,150,156,188,188,208,162,171,159,179,161,164,163,171,171,190,186,180,169,182,179,163,168,153,181,155,149,177,186,170,197,174,167,155,165,178,152,165,156,174,167,210,163,183,161,182,169,156,153,167,165,148,198,171,190,184,194,160,162,154,178,172,148,150,176,178,200,192,171,171,170,175,154,154,159,166,172,158,164,162,143,134,139,150,167,144,160,156,173,170,157,189,269,221,186,209,247,233,151,164,167,193,204,230,180,177,172,216,183,256,215,201,182,252,372,230,199,256,326,252,234,229,222,187,241,211,167,166,205,176,173,171,226,191,204,178,151,188,228,401,359,305,187,247,259,282,222,203,178,148,184,184,211,228,206,174,178,226,245,188,192,219,223,178,253,284,312,353,346,337,220,197,165,169,164,445,453,313,775,676,563,504,487,368,285,252,217,171,211,249,339,322,213,226,307,295,209,178,156,158,462,371,304,671,618,549,445,446,318,283,229,189,192,231,236,335,359,270,223,274,354,300,225,190,238,695,282,466,716,606,576,449,442,329,280,204,196,233,274,233,225,320,303,206,229,253,191,140,156,162,580,231,492,631,552,532,431,424,312,259,192,186,211,407,363,226,214,335,362,251,191,198,234,219,225,645,224,600,687,548,514,444,405,312,255,193,160,218,305,412,254,244,291,371,227,238,212,160,167,256,505,209,587,618,531,455,437,358,292,235,189,150,237,264,376,330,205,208,329,330,237,222,175,235,440,430,282,717,640,560,464,456,344,287,238,182,158,213,224,294,324,306,264,244,254,221,168,142,149,488,348,331,668,602,559,446,417,323,278,215,181,183,384,286,203,195,226,283,373,292,203,145,150,149,711,278,500,696,600,575,464,448,331,272,204,202,212,338,241,224,332,353,258,213,192,219,161,153,179,577,215,492,643,540,500,432,426,312,253,203,172,230,360,288,220,272,354,301,267,229,210,230,210,256,633,217,610,674,550,503,434,399,315,247,191,155,191,323,311,205,216,304,355,229,241,210,146,149,278,487,209,611,630,512,455,431,349,304,236,194,154,257,250,353,340,214,207,322,306,238,228,169,222,483,407,306,703,624,571,464,459,355,289,229,190,161,219,243,261,399,307,234,308,316,187,163,181,163,494,348,361,675,578,558,451,411,315,269,205,187,228,334,240,235,324,334,229,203,201,232,200,218,178,723,240,501,696,577,556,467,435,314,272,202,178,240,378,297,212,218,251,303,277,212,184,143,139,181,580,204,510,619,522,509,423,410,292,243,186,169,168,297,335,337,299,235,192,223,206,177,159,153,235,622,231,608,675,544,516,438,403,318,237,198,148,188,385,228,307,277,206,352,237,147,184,161,147,301,459,217,622,635,522,438,431,344,287,224,197,142,192,347,252,271,355,221,366,248,176,204,193,199,523,372,326,700,626,580,462,450,339,279,223,188,167,188,317,255,211,355,215,280,212,220,175,142,164,495,327,383,678,590,555,447,421,321,274,202,188,198,234,222,345,210,306,235,192,177,242,172,176,173,724,234,502,698,583,559,461,437,309,272,202,181,168,285,230,356,239,215,275,236,209,159,171,164,190,571,201,522,623,528,508,426,408,301,243,194,162,212,351,242,300,206,231,355,234,148,181,188,175,245,594,217,617,649,537,500,441,390,306,243,189,143,180,374,233,210,357,189,265,337,205,162,137,142,336,466,221,610,596,533,449,424,332,288,226,183,146,206,273,389,226,262,330,250,177,216,158,166,149,538,380,348,718,636,588,463,453,341,283,220,203,173,229,228,321,363,298,202,235,229,212,151,161,154,515,312,404,676,578,548,450,431,316,264,202,185,238,316,217,245,345,324,205,235,295,255,228,179,230,726,232,519,698,561,549,445,447,311,269,199,176,236,332,230,218,269,322,259,225,247,209,144,159,193,569,199,528,621,528,506,440,399,311,246,199,170,258,332,410,237,227,278,390,293,219,191,224,224,283,573,217,632,670,533,497,446,383,319,248,189,150,243,222,401,321,255,223,371,271,190,186,165,155,360,431,218,622,613,513,447,427,337,278,222,194,163,239,264,280,371,249,192,255,271,222,223,171,214,574,346,364,717,627,576,459,451,332,271,213,186,190,301,225,263,250,322,317,246,196,211,151,129,153,544,303,406,656,558,551,447,429,306,258,200,192,202,397,347,258,215,204,228,332,243,180,154,148,157,705,222,549,673,575,549,458,434,321,270,199,176,231,371,289,201,279,352,338,261,187,213,156,148,218,560,209,542,623,522,494,419,390,295,247,191,159,199,316,355,210,217,348,383,265,219,189,226,233,302,563,232,668,674,550,483,447,381,309,241,196,148,187,260,324,257,226,262,362,286,196,197,158,157,387,418,235,635,607,529,449,429,340,281,222,187,177,259,282,270,352,271,197,240,266,210,210,181,204,603,323,392,705,642,572,476,451,328,269,213,190,211,319,258,199,360,369,285,234,307,198,147,160,167,555,301,439,669,553,555,435,423,299,259,199,190,235,398,300,231,249,333,315,227,175,203,216,206,197,709,205,541,666,553,537,439,441,304,259,190,169,239,361,365,228,215,213,266,289,212,174,145,151,219,549,210,539,612,516,488,432,383,306,229,185,144,198,249,272,341,346,320,259,188,204,176,162,142,316,529,232,680,666,540,487,454,370,302,244,189,151,190,301,354,308,194,249,320,306,238,174,155,142,411,402,264,658,603,533,459,434,330,280,219,190,159,195,223,336,348,238,210,336,377,302,187,208,232,639,298,410,702,643,579,467,447,329,278,208,195,207,253,244,260,326,291,209,257,267,193,152,161,150,564,276,451,639,554,546,445,430,305,271,202,186,251,417,315,245,249,346,332,254,179,209,230,221,190,704,213,549,669,548,537,451,428,312,262,191,168,209,351,394,244,232,339,375,200,225,206,166,155,224,550,211,560,623,526,482,427,371,302,239,192,146,253,297,399,289,208,256,364,308,254,202,187,234,340,503,242,670,643,531,473,452,358,292,228,184,144,199,252,305,344,325,232,244,233,212,166,147,144,427,381,270,640,608,536,446,429,327,276,224,188,170,346,243,215,214,264,315,360,275,207,140,156,140,655,282,438,689,610,581,474,458,325,287,218,191,157,163,173,162,174,178,153,147,153,138,139,148,163,398,420,304,172,183,190,214,195,165,158,160,155,163,207,163,182,200,168,200,207,217,177,209,164,177,186,213,210,158,184,166,168,164,177,168,146,157,156,176,171,177,152,168,202,215,198,183,182,167,213,373,329,284,213,185,166,155,148,149,168,175,144,196,193,185,178,179,168,167,156,161,153,154,158,389,483,252,698,636,570,466,466,379,310,240,200,158,165,161,181,157,169,150,236,216,218,149,154,155,275,511,343,248,218,202,187,182,189,168,154,173,166,177,212,182,166,175,160,149,150,147,166,143,158,253,218,239,222,202,241,259,187,186,186,156,186,171,178,187,184,163,167,156,173,260,192,216,216,162,374,416,371,200,205,208,191,186,186,215,195,181,206,215,206,262,180,226,211,200,176,185,188,184,194,637,226,604,657,552,510,464,408,326,259,215,188,202,228,188,213,197,236,205,223,179,229,206,241,206,364,500,663,259,422,240,192,186,294,211,189,178,246,339,396,292,221,213,294,312,217,182,180,171,431,455,277,688,648,558,455,463,350,289,249,193,152,439,538,739,211,373,224,220,235,184,191,157,148,223,345,285,221,220,308,252,282,257,200,163,157,234,630,208,642,684,544,511,446,403,303,257,192,150,716,270,493,719,623,578,473,453,316,271,198,185,224,326,217,220,306,341,215,208,272,217,236,182,211,517,550,627,214,342,291,234,253,269,177,178,162,227,365,356,225,202,304,332,253,193,224,152,147,207,652,198,621,687,546,523,437,417,303,250,190,166,375,510,599,467,243,287,230,248,224,180,232,182,250,367,245,269,253,326,230,241,246,219,149,174,166,709,236,525,704,592,553,448,454,307,274,194,169,161,181,203,208,193,196,185,174,191,200,200,167,211,205,182,220,204,214,167,215,195,240,178,192,218,499,460,576,621,216,261,303,295,222,227,241,216,190,272,228,240,305,331,211,188,282,224,157,160,186,712,264,520,699,608,575,457,459,311,273,195,175,215,465,431,614,201,372,262,283,295,198,182,174,147,223,242,287,316,246,210,192,289,216,151,154,157,570,380,360,724,630,557,456,448,332,271,216,172,233,637,210,622,677,536,532,445,392,309,246,184,148,218,353,351,220,202,309,336,230,172,182,206,226,205,382,486,626,235,414,271,195,197,262,174,187,179,240,306,389,305,232,181,278,297,236,199,154,171,484,410,308,722,666,568,462,446,350,278,222,169,163,426,533,756,204,372,204,227,217,213,191,156,176,189,321,311,222,214,246,250,280,256,171,148,159,274,583,215,655,668,541,492,463,380,302,252,173,156,718,251,502,695,610,582,459,432,304,260,190,174,192,214,202,169,215,211,202,159,198,228,223,191,199,504,581,646,215,415,268,224,258,251,155,173,192,209,351,364,198,193,278,319,249,182,229,152,136,227,616,207,637,667,555,510,435,402,298,244,184,152,420,510,644,398,244,254,273,283,202,167,187,144,236,362,229,233,242,316,233,248,252,212,153,155,159,709,223,559,704,572,544,443,452,300,265,188,156,531,387,321,707,636,588,461,429,350,272,210,181,174,212,212,325,340,253,203,285,335,231,193,189,222,477,419,633,469,189,249,349,291,240,219,182,173,164,304,239,220,279,319,200,195,210,199,157,131,182,722,244,536,718,593,539,451,445,296,253,191,161,209,491,495,577,205,337,317,234,265,216,193,144,182,268,257,279,283,253,208,234,231,257,156,157,146,606,328,404,727,608,563,474,437,334,266,215,167,159,207,218,187,175,184,203,209,185,204,174,184,217,197,171,209,166,176,207,166,198,232,164,204,223,267,572,442,531,483,226,293,352,164,168,195,182,171,240,323,427,208,256,311,249,225,221,150,186,158,571,370,365,702,651,578,467,450,352,276,227,185,170,499,561,427,429,267,317,310,234,221,181,193,160,217,327,303,194,346,260,280,316,249,164,167,169,330,545,226,668,663,548,476,458,369,312,250,185,175,724,237,532,705,601,570,462,445,320,266,191,182,242,370,224,223,352,306,195,280,224,227,155,204,237,477,548,614,331,402,238,320,176,232,146,181,173,217,360,387,172,250,296,273,231,180,205,184,166,275,589,212,656,703,551,492,463,385,312,238,213,167,405,651,572,410,300,295,337,209,180,183,181,184,263,381,247,274,276,287,190,212,221,229,161,178,185,697,214,592,679,570,534,458,476,302,272,205,169,190,167,226,221,248,195,202,160,167,189,197,217,170,140,147,186,172,158,187,154,145,158,172,139,156,510,452,688,401,234,246,357,310,265,216,162,178,179,366,274,217,274,352,268,221,213,227,159,164,188,728,235,573,709,609,574,444,451,309,261,214,179,253,520,542,545,196,335,334,264,271,217,199,178,167,318,254,288,307,295,221,231,245,255,176,187,183,657,319,432,708,638,572,458,471,332,281,214,181,304,564,237,695,697,564,499,460,373,301,246,191,153,217,318,350,294,204,263,326,299,191,196,236,225,292,397,487,603,210,339,347,227,217,269,178,208,195,238,253,328,326,288,214,244,281,236,175,161,161,633,336,418,749,652,576,467,462,334,277,221,186,195,402,501,721,223,369,212,275,270,186,208,170,182,221,322,314,269,214,246,230,306,225,167,174,170,393,502,261,703,662,566,470,465,369,294,236,189,159,160,148,147,156,143,137,145,140,141,136,149,132,185,200,225,199,206,237,232,211,190,236,234,232,219,529,584,653,255,382,272,204,232,284,165,204,203,233,365,390,252,230,274,325,285,225,234,162,179,335,542,229,690,679,566,481,469,388,296,238,190,166,469,524,720,271,318,218,258,242,191,148,176,164,229,364,233,208,216,326,263,262,264,179,161,153,202,668,214,618,716,549,533,454,432,310,252,194,161,179,158,151,164,150,152,159,141,151,149,146,141,201,312,215,197,321,330,227,202,224,149,144,137,135,528,499,662,319,286,268,331,297,262,193,147,167,184,371,293,215,251,342,286,224,198,232,144,138,172,708,212,577,710,567,540,432,453,305,260,195,163,292,523,572,531,219,307,319,286,255,205,203,165,177,295,221,294,279,326,193,265,223,256,173,159,155,675,302,491,730,627,580,470,469,319,270,213,179,353,505,242,697,670,557,486,468,363,297,242,181,159,210,181,215,187,186,165,205,198,180,200,163,194,323,673,314,655,258,237,334,207,167,239,180,182,179,196,343,287,189,355,218,226,257,167,161,139,191,670,312,478,728,625,567,472,456,321,274,215,182,175,558,553,674,315,266,227,237,190,166,177,187,188,226,316,212,239,331,204,216,239,200,192,143,169,461,444,298,725,663,554,473,458,358,275,234,187,199,701,224,595,682,557,554,453,421,301,256,193,163,250,339,209,329,198,249,352,172,232,236,167,190,218,539,517,635,358,247,232,224,256,250,208,198,191,266,375,244,255,304,204,281,256,248,172,166,179,390,473,268,683,638,551,466,470,369,286,239,194,159,389,637,545,454,224,229,300,210,230,184,164,163,256,305,287,334,183,236,255,210,181,239,211,166,224,628,208,653,663,555,516,451,416,312,263,205,166,217,201,212,200,225,220,213,185,177,221,198,188,212,224,160,197,221,158,188,230,177,195,218,184,180,587,687,382,374,359,275,263,236,182,181,193,171,227,353,234,301,359,217,243,342,208,181,171,159,205,665,208,612,678,560,533,447,434,317,277,216,179,295,667,357,538,448,290,293,274,228,243,173,195,236,259,297,285,270,173,256,270,174,171,175,161,156,723,265,545,707,597,559,459,451,305,295,193,181,405,465,279,726,663,563,469,459,363,291,226,189,164,200,285,354,242,192,326,382,190,166,181,222,170,356,523,478,519,285,328,218,218,194,235,182,215,177,255,194,380,307,196,207,311,173,212,153,204,176,699,295,502,716,616,562,459,467,325,283,204,189,247,489,489,678,300,295,217,314,205,250,189,183,176,211,279,333,225,225,284,383,210,236,162,171,173,547,409,353,735,642,594,469,476,342,321,228,201,217,690,220,630,688,565,517,457,416,311,265,196,177,227,242,204,219,199,243,213,220,168,213,216,234,220,383,485,642,256,430,257,195,198,286,173,204,186,230,350,400,281,274,221,303,289,242,192,159,178,471,444,305,712,630,556,454,464,361,297,244,186,175,434,565,776,230,374,196,240,239,190,183,157,161,218,329,282,210,205,293,252,306,251,177,146,151,244,595,207,654,700,548,487,453,402,311,251,185,160,721,276,506,718,637,588,473,446,312,274,200,186,244,359,235,209,331,343,248,207,263,211,239,189,206,516,561,635,227,399,261,245,236,263,164,176,190,215,369,351,204,208,297,338,256,193,246,150,163,207,642,199,626,699,561,526,458,421,315,252,198,167,393,519,623,435,266,275,269,266,216,183,200,168,236,354,234,257,227,335,227,260,269,243,161,148,162,718,240,557,719,568,555,453,447,315,260,203,176,144,160,153,139,154,145,137,142,146,132,133,133,142,211,190,230,208,217,173,218,217,236,193,203,241,529,470,589,577,204,259,317,285,234,226,222,178,198,272,253,246,265,320,198,201,227,211,184,173,174,723,254,520,725,609,563,452,448,307,280,215,169,207,483,478,579,218,344,298,269,288,223,193,152,145,256,241,297,305,261,232,246,267,255,159,156,167,593,363,396,717,641,567,465,468,339,279,228,178,179,168,161,152,152,150,140,145,148,152,137,149,150,185,307,354,276,198,230,346,274,165,152,143,139,224,399,464,642,260,425,313,230,189,275,184,166,185,218,268,365,307,270,207,256,302,246,181,151,143,527,390,339,724,646,560,461,458,349,281,231,183,170,425,540,748,208,357,191,260,224,199,214,158,172,195,313,307,231,219,263,238,285,247,178,158,159,304,578,223,670,694,543,475,453,387,302,248,191,173,723,230,516,703,594,573,456,437,304,273,194,177,181,216,164,180,174,197,208,162,187,205,185,214,191,473,605,537,428,263,206,257,185,241,197,204,177,219,373,260,282,213,241,306,225,223,250,194,156,253,593,198,640,690,552,486,438,399,309,247,200,155,312,612,480,544,224,260,289,212,247,176,167,158,247,246,278,319,205,285,249,204,228,186,174,152,177,697,221,578,697,596,538,435,459,315,267,194,173,567,359,350,724,655,594,481,459,343,279,220,190,184,194,293,273,214,338,204,279,226,157,188,211,172,470,683,423,564,237,253,300,234,171,218,153,157,193,222,257,368,204,335,232,177,206,226,191,139,183,731,227,565,689,608,552,454,444,304,263,199,168,194,630,385,672,299,258,293,287,210,188,186,146,195,181,245,234,193,349,202,234,248,176,156,152,166,647,322,435,713,639,573,480,460,327,269,213,174,149,162,227,200,224,217,206,213,194,217,192,195,200,207,188,230,169,208,229,175,217,231,172,198,216,309,582,433,552,473,221,297,355,172,176,204,220,188,249,323,424,213,241,319,242,217,215,169,171,162,597,352,393,705,637,585,471,460,350,280,238,189,178,516,528,398,423,253,322,323,216,233,173,186,185,208,306,306,194,317,274,279,320,261,161,161,160,364,523,230,681,674,568,487,462,383,301,251,195,193,734,226,588,701,606,568,453,437,314,274,198,178,253,389,221,224,344,317,213,270,231,231,173,209,225,479,531,623,305,369,267,305,237,223,159,180,160,220,371,396,166,265,300,290,231,212,207,193,182,305,559,226,669,671,553,500,463,401,301,247,213,171,421,618,566,435,317,269,348,243,213,214,221,187,286,391,247,284,311,289,230,217,223,246,191,176,192,698,220,624,688,570,531,453,446,311,268,203,166,590,332,486,731,582,628,526,463,326,288,253,255,198,247,195,230,244,233,233,235,251,251,235,191,211,541,484,644,363,241,290,293,328,261,231,213,180,230,344,296,229,252,316,256,222,199,222,164,163,201,699,222,579,661,580,547,466,453,312,272,219,173,287,517,494,538,208,334,285,275,268,241,222,154,193,291,252,295,294,290,214,260,217,250,173,178,164,665,294,467,681,611,567,459,445,325,273,220,177,329,541,234,700,662,555,483,443,369,321,243,196,155,206,290,343,297,206,256,338,302,208,196,225,240,335,418,527,608,202,356,329,270,199,264,219,164,165,211,257,297,320,290,201,212,285,238,167,152,158,633,309,452,706,606,565,465,451,324,274,213,176,204,407,494,708,216,371,221,301,259,225,223,205,183,197,268,297,284,231,229,239,316,220,172,160,178,417,487,291,685,631,550,469,463,352,295,239,186,160,242,217,211,182,210,198,219,187,216,185,210,207,220,209,228,209,201,223,224,223,191,231,229,254,214,502,590,660,254,370,257,206,232,287,187,196,190,243,325,368,278,236,249,280,310,216,237,171,193,350,527,242,667,649,567,485,480,360,300,258,209,172,472,521,703,234,297,225,234,251,201,189,160,162,244,369,255,236,218,301,253,285,257,210,148,163,206,676,217,623,685,557,519,444,423,313,265,207,164,676,313,455,711,624,604,485,446,322,280,215,187,218,308,239,257,327,338,223,219,298,232,237,188,216,542,539,647,279,301,270,289,296,247,178,158,175,197,373,300,222,233,333,293,239,203,234,149,154,180,679,216,570,672,570,535,447,438,314,263,205,176,314,523,539,491,236,297,289,268,266,197,199,176,218,344,232,288,295,328,216,249,223,246,162,168,178,706,295,510,670,604,570,459,459,311,268,208,172,385,483,247,682,664,561,494,460,352,303,244,192,159,201,180,218,190,186,161,211,208,175,198,176,185,356,678,317,644,236,239,312,240,163,238,175,193,192,198,327,316,192,357,228,215,214,185,181,146,176,674,295,472,701,591,576,471,448,323,278,218,187,189,558,531,649,305,283,254,246,201,175,189,199,177,249,341,221,254,331,233,205,251,215,200,161,166,496,419,323,704,655,563,477,450,351,278,235,188,208,676,227,612,689,546,519,446,423,303,257,192,167,240,362,217,315,217,245,373,184,224,245,180,191,202,551,480,684,365,238,245,211,192,296,198,202,195,225,400,247,253,299,221,288,264,227,185,166,165,428,465,272,688,665,552,467,453,374,294,242,197,170,399,635,549,426,249,220,303,235,250,161,187,175,239,345,312,334,194,229,249,199,176,218,207,142,233,641,218,644,695,548,508,453,399,314,262,202,186,218,198,226,197,232,198,216,201,192,216,213,196,210,242,165,221,220,168,190,232,194,205,216,193,184,588,661,375,335,355,280,275,232,206,179,192,211,202,362,228,298,357,227,246,371,214,185,158,170,215,670,214,614,702,554,521,451,427,310,277,213,177,313,665,342,537,441,287,293,262,218,238,190,165,212,290,315,292,295,185,247,295,184,170,173,156,159,737,259,544,705,600,551,463,453,312,268,203,187,456,437,284,739,658,577,472,473,361,285,227,189,160,224,273,368,270,198,327,379,194,170,199,228,178,384,538,502,500,260,319,217,203,216,216,173,200,185,270,221,361,312,198,211,329,195,197,149,197,179,721,265,515,721,620,559,448,459,318,286,207,186,229,506,466,651,292,292,204,314,205,243,175,179,178,225,275,325,232,201,256,415,198,232,162,182,176,559,387,368,715,657,557,464,470,345,294,223,193,225,666,226,630,703,567,506,468,408,311,275,215,171,242,241,220,221,193,258,227,216,185,210,223,242,222,388,451,627,244,423,271,202,193,281,179,190,183,278,299,404,295,243,208,289,316,242,202,168,183,476,424,334,694,622,579,472,475,362,288,246,186,172,438,545,718,214,380,205,248,230,203,180,157,167,246,313,291,226,226,269,258,326,270,202,162,181,266,583,220,660,646,538,489,450,386,301,268,207,173,714,260,489,706,592,581,483,430,322,268,201,178,241,363,224,212,307,347,261,221,253,221,231,200,213,499,568,642,214,387,255,214,231,261,164,196,188,231,376,371,199,222,282,336,251,228,216,168,150,219,630,200,635,692,553,508,448,406,300,257,200,165,418,509,646,405,260,251,229,234,210,175,195,184,260,372,240,253,213,319,253,242,286,222,175,172,173,710,233,570,711,563,553,459,443,305,276,198,165,153,163,161,154,144,145,137,145,144,141,141,140,158,216,174,221,206,223,176,212,220,231,196,195,235,559,491,604,560,222,265,301,283,242,213,222,200,219,299,254,232,273,342,220,201,226,206,168,158,185,742,248,553,696,571,572,466,449,309,279,206,173,215,497,469,559,209,338,301,266,296,242,220,154,177,269,245,286,308,256,217,251,265,251,168,164,177,609,335,408,718,625,566,476,459,343,280,231,173,188,160,164,160,156,164,162,145,149,161,144,147,165,189,288,363,292,198,225,338,276,166,153,150,138,254,396,463,631,252,415,322,264,202,260,168,180,172,231,261,366,323,267,202,259,308,269,185,146,155,556,383,363,697,649,571,451,469,361,269,229,187,181,415,520,735,211,370,200,271,269,206,196,176,183,192,294,316,246,225,231,255,317,231,181,150,148,315,546,241,697,664,558,493,442,394,308,251,195,174,726,237,538,687,582,558,459,444,304,269,195,183,192,221,156,186,195,207,214,165,204,226,189,228,204,490,612,549,405,256,207,227,191,238,208,196,192,255,362,281,274,221,236,335,226,192,227,188,163,268,587,220,654,665,553,505,465,391,315,277,202,163,352,621,528,525,234,238,251,196,253,197,176,170,279,245,257,324,200,274,288,196,201,185,190,180,177,693,210,596,689,567,522,452,440,314,281,208,177,595,363,378,717,663,568,483,451,347,286,225,190,191,211,308,292,211,338,215,269,236,160,200,226,176,476,684,463,551,263,270,285,262,168,213,172,169,217,242,260,376,211,332,248,206,210,223,202,163,182,718,227,568,674,575,530,441,447,303,279,205,177,209,611,344,666,279,261,266,269,202,182,173,171,191,198,250,224,195,332,204,228,295,205,150,148,189,672,304,464,707,631,572,473,460,326,281,215,231,162,194,235,215,209,218,191,209,200,231,193,185,214,207,196,223,174,205,225,190,217,230,198,182,219,349,604,425,598,438,212,290,383,168,190,244,212,208,233,292,413,217,237,309,292,194,244,155,186,148,643,330,425,706,616,578,466,470,347,285,221,195,189,514,486,415,446,257,315,306,231,251,208,205,194,200,312,288,183,334,282,273,289,259,165,158,166,384,496,257,697,679,547,473,476,370,296,243,192,195,720,217,589,713,586,555,453,446,306,265,206,172,261,378,208,215,337,321,230,249,227,214,166,194,214,283,228,348,275,259,226,296,206,201,161,149,152,204,360,366,193,231,320,245,224,216,205,147,158,195,215,167,210,201,195,164,214,221,195,193,214,214,203,366,328,248,212,278,299,248,224,167,151,158,293,346,240,244,288,162,265,332,334,239,225,198,171,234,232,353,363,321,239,240,281,179,151,167,147,159,146,146,149,145,147,142,139,144,148,142,132,133,132,137,130,138,139,137,133,133,133,135,137,132,132,139,134,139,133,140,129,130,130,131,130,133,130,130,130,135,133,137,127,131,123,131,129,124,125,124,126,127,127,126,125,126,130,127,124,123,127,123,126,122,124,124,122,126,130,122,127,125,129,122,124,127,122,126,128,123,128,125,123,129,121,120,126,121,129,123,124,123,123,121,125,123,123,126,122,122,124,121,126,123,123,122,121,120,121,123,120,124,123,120,120,123,120,121,121,121,123,119,119,120,120,123,120,120,127,120,122,124,122,123,120,121,121,120,121,118,120,123,119,120,121,120,121,120,118,123,122,120,120,119,120,121,120,122,120,118,122,119,122,119,121,120,119,120,120,120,121,120,121,119,120,120,118,122,119,119,120,118,118,118,119,120,120,119,118,119,120,120,119,118,119,119,117,119,119,119,118,118,118,118,119,118,118,118,118,118,117,117,119,119,117,118,118,119,119,120,117,119,120,118,117,120,118,117,119,116,117,118,118,118,117,118,118,118,117,117,117,118,118,117,118,117,117,118,117,118,117,118,119,117,119,118,117,119,118,118,118,119,119,117,116,117,117,117,118,118,117,117,118,117,117,117,117,118,116,116,117,117,118,117,117,118,117,118,116,116,117,117,117,118,117,116,117,117,116,117,118,118,117,117,117,117,117,118,117,117,116,117,116,116,117,116,116,117,116,116,117,116,116,116,116,117,117,116,116,116,116,117,116,116,116,116,117,116,116,117,116,117,116,116,117,116,116,116,116,116,116,116,116,116,116,116,117,116,117,116,116,116,116,115,116,116,116,116,116,116,116,116,116,116,116,116,116,116,117,116,116,117,116,116,116,116,116,115,116,116,116,116,116,116,116,116,115,116,116,116,116,116,116,115,116,116,116,116,116,116,116,116,116,116,115,116,116,115,115,116,116,116,116,116,116,116,116,115,116,115,116,116,116,116,115,115,116,115,116,116,116,116,116,116,116,115,115,116,115,116,116,116,116,116,115,116,115,116,116,115,115,115,115,115,115,115,115,115,115,115,116,115,115,115,116,115,115,115,115,115,115,115,115,115,115,115,115,115,116,116,115,116,116,116,116,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,116,116,115,116,116,115,116,116,115,115,116,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115],[132,147,137,144,145,132,133,136,133,138,136,138,136,136,135,134,134,136,135,135,146,142,143,140,134,148,143,145,139,155,153,157,150,152,157,156,150,150,148,154,148,149,141,155,161,157,161,156,154,158,158,146,142,149,153,143,151,147,148,151,155,151,154,152,152,154,154,156,156,159,159,156,156,148,165,172,161,150,157,152,146,158,149,153,155,164,164,163,164,166,160,165,159,165,156,155,166,157,144,156,177,170,167,163,168,160,153,155,157,160,173,169,164,150,159,152,145,156,155,170,162,158,164,166,172,183,169,170,169,158,175,169,169,160,176,170,162,168,168,162,167,183,164,166,168,173,161,167,151,185,166,161,155,155,151,165,156,160,172,179,168,188,172,157,153,149,153,157,158,170,177,179,163,165,173,159,166,157,171,183,173,176,180,158,186,164,171,166,170,164,167,164,169,167,156,161,169,173,193,161,177,165,168,166,157,168,154,161,160,161,159,169,214,208,220,221,223,196,194,202,215,192,203,196,212,251,248,222,213,215,213,189,187,231,207,191,187,251,239,224,218,235,204,209,220,195,200,184,200,222,240,247,242,209,245,204,202,209,210,179,191,210,250,227,214,216,244,223,199,218,203,205,202,202,227,227,239,261,217,218,222,200,205,201,191,199,207,252,248,227,217,215,210,188,195,210,188,203,185,194,192,184,172,183,168,167,156,170,173,173,165,218,247,247,210,197,220,205,200,228,192,190,208,210,238,207,219,215,230,192,197,228,190,206,197,186,229,233,245,234,216,245,205,196,199,201,200,209,193,235,248,230,202,224,203,187,208,212,191,217,205,233,222,208,231,221,232,206,223,227,204,186,190,216,250,235,227,211,241,203,198,211,233,209,232,206,247,233,230,202,240,222,209,230,190,207,247,201,212,212,194,197,165,162,191,167,192,164,164,164,159,172,161,175,168,174,164,166,169,170,177,171,182,209,194,211,225,217,209,219,230,227,203,224,189,208,256,229,224,222,232,205,225,224,228,208,212,206,237,238,239,239,227,200,218,206,194,206,202,192,204,238,243,240,222,230,220,223,202,216,209,185,196,254,212,215,207,254,210,198,208,196,196,197,191,213,230,236,249,237,215,209,201,197,190,205,209,210,206,224,183,178,177,177,183,187,200,183,163,174,209,236,213,228,222,201,213,216,196,206,195,200,209,263,251,223,202,230,208,191,220,220,202,189,189,250,226,217,230,260,231,199,222,201,232,195,200,221,250,252,262,229,210,214,225,200,224,221,198,196,268,223,218,223,257,204,191,217,207,225,210,185,235,224,244,229,258,229,229,235,201,217,222,206,231,289,243,244,208,233,224,200,214,223,208,208,219,217,197,197,188,186,172,167,181,164,169,157,165,219,235,231,226,196,223,224,180,197,216,196,197,222,262,219,212,214,237,229,185,224,199,214,212,187,224,204,238,242,230,198,216,216,188,208,188,178,204,246,233,197,211,225,218,201,200,214,194,214,180,236,225,217,225,222,214,214,210,222,195,203,195,206,274,246,233,221,230,214,234,192,204,197,198,206,256,233,199,214,257,229,185,214,191,204,221,190,191,201,191,172,201,167,183,162,170,156,169,165,173,255,217,196,185,218,220,208,195,181,190,210,210,241,212,233,245,229,197,229,209,198,195,219,177,210,249,249,230,206,227,243,190,195,205,219,175,195,232,203,224,221,243,242,203,199,207,207,197,185,217,256,225,249,226,201,212,234,223,217,211,181,197,263,224,216,216,250,224,198,209,207,208,195,185,238,239,250,230,244,219,208,218,195,209,217,184,266,292,299,302,254,238,246,225,267,285,256,299,270,322,274,278,282,297,281,275,269,228,238,251,270,302,292,268,262,259,278,313,276,264,243,276,221,247,304,259,259,291,292,284,250,284,288,288,266,258,284,297,307,251,266,300,296,281,320,301,307,288,311,313,293,278,235,268,249,282,314,292,290,309,323,308,279,283,288,306,329,260,279,286,307,287,294,276,286,331,272,275,252,267,320,300,252,288,286,304,316,264,310,292,317,298,254,250,264,272,293,260,271,243,253,261,284,265,253,245,261,288,253,247,288,327,354,364,317,319,299,284,305,277,283,261,248,298,310,303,319,289,316,265,268,300,261,241,300,354,348,355,336,373,343,328,275,332,274,236,282,248,262,351,329,303,280,329,287,380,320,326,337,280,261,302,280,330,303,329,292,298,334,324,273,342,300,370,365,358,320,305,284,276,288,261,322,243,497,345,225,228,132,185,193,208,235,229,193,230,239,273,263,306,353,265,239,260,278,251,247,239,305,317,263,227,220,279,289,297,330,233,287,241,217,222,252,239,227,228,210,251,292,191,262,228,224,236,953,202,222,149,125,157,177,158,188,182,175,177,207,291,248,219,247,305,292,274,286,311,245,229,198,320,247,217,211,222,235,250,267,222,260,209,209,641,281,219,126,128,133,136,159,158,160,186,182,189,534,177,151,86,110,108,146,148,176,180,181,203,255,240,250,201,201,225,243,202,214,200,232,177,242,301,177,190,281,312,250,230,216,217,223,181,214,199,194,257,205,203,196,232,201,228,207,199,201,561,272,202,133,135,128,122,122,143,159,155,150,164,313,216,208,249,243,224,224,244,245,206,205,197,210,241,208,201,200,169,205,253,237,267,176,186,198,421,189,147,78,109,101,121,121,151,142,162,155,178,186,200,209,233,183,199,189,191,182,173,181,196,243,184,173,188,234,196,178,178,245,184,171,172,315,236,217,266,263,261,211,220,266,191,229,200,239,211,266,228,214,195,203,219,185,186,170,166,172,487,156,132,88,114,95,112,126,141,149,153,158,275,271,209,204,240,228,236,247,229,216,186,185,211,273,256,229,189,180,196,239,213,265,193,185,168,837,179,165,85,110,108,123,119,124,147,141,152,597,223,171,111,88,97,99,109,115,125,140,143,149,206,168,178,216,200,184,172,221,187,192,179,212,268,249,198,199,269,258,254,237,202,221,184,200,200,229,202,174,181,165,192,211,170,234,198,170,173,889,155,172,117,104,111,126,130,128,140,162,159,187,281,246,200,271,254,224,259,259,240,206,209,188,286,209,232,184,192,170,230,245,233,228,170,171,791,224,185,117,104,108,105,110,131,128,143,145,163,432,161,128,78,93,102,99,114,130,125,148,145,198,237,230,200,202,184,228,200,198,183,223,183,207,286,154,174,261,294,217,219,202,201,192,181,184,205,185,220,175,182,167,248,195,240,180,159,159,692,227,184,112,125,125,132,128,129,138,149,158,168,305,217,215,264,253,209,216,221,269,202,193,176,232,219,213,190,168,183,193,239,213,246,181,179,257,368,196,141,84,98,99,119,111,142,133,148,148,897,165,153,86,83,89,99,129,142,140,137,157,182,238,181,174,184,212,192,187,176,227,190,187,194,308,213,179,288,245,228,193,182,256,185,205,165,230,214,243,196,166,184,187,225,196,188,190,196,205,413,190,167,108,129,110,121,122,157,155,150,160,297,258,210,205,241,235,255,249,223,239,175,192,181,251,249,216,196,167,174,208,204,269,184,176,162,737,170,158,82,96,101,112,113,129,142,145,144,149,177,181,179,171,171,171,167,165,158,163,172,168,220,190,198,228,213,183,188,249,220,178,187,222,322,231,225,211,302,258,255,229,212,242,202,203,191,218,245,209,210,197,241,213,160,208,193,177,171,834,166,151,113,101,110,121,119,140,158,155,165,209,274,248,194,265,248,229,240,240,225,189,191,192,306,207,246,167,176,155,213,212,243,230,164,171,875,191,191,116,125,117,121,139,147,144,156,155,163,184,197,183,174,167,163,182,169,154,162,157,154,163,141,151,158,144,135,140,147,151,160,155,152,194,288,165,170,256,279,242,204,185,202,185,165,185,202,189,203,187,177,161,252,183,228,190,163,169,797,200,182,94,97,107,123,119,116,134,138,143,154,295,221,207,255,218,212,211,228,252,200,181,189,251,216,200,187,177,168,216,259,207,269,181,174,354,334,189,136,95,101,107,117,121,135,133,150,154,796,151,145,67,81,89,100,101,121,128,130,137,216,190,185,163,203,152,165,226,171,163,150,159,218,318,193,179,281,247,226,186,162,225,198,192,177,215,186,259,188,163,160,205,220,204,168,193,182,263,370,191,165,111,131,120,125,130,155,154,163,174,318,266,219,191,238,231,249,239,240,237,180,189,199,239,239,223,194,179,183,230,217,261,191,189,165,630,184,149,81,93,101,124,119,139,149,152,163,864,182,163,114,93,108,127,119,126,144,159,163,170,268,229,178,210,251,223,198,214,219,204,186,205,300,236,238,214,274,235,232,197,224,201,207,177,207,197,198,170,178,169,184,234,145,197,176,166,170,763,168,142,99,95,102,125,148,152,151,155,164,240,286,239,212,260,251,256,230,257,231,192,188,192,310,232,255,170,189,170,236,214,268,206,180,178,922,194,184,120,103,110,111,122,150,144,153,155,155,185,193,208,196,181,169,176,188,176,170,174,175,221,201,236,220,198,191,223,224,181,199,212,224,241,276,181,193,286,271,252,235,207,225,204,214,202,210,217,225,218,206,195,232,180,235,212,172,180,880,169,182,104,104,109,124,115,137,146,163,164,163,299,251,196,263,238,229,215,241,245,207,203,215,298,232,216,193,187,168,195,278,214,251,179,171,469,304,196,130,120,117,125,128,136,149,157,157,172,182,199,192,189,175,168,197,174,174,166,155,151,157,155,149,157,142,138,142,151,140,166,158,150,163,324,194,184,281,274,219,193,177,250,191,192,181,220,193,252,189,171,166,235,225,224,167,180,171,350,309,178,144,120,131,120,114,115,150,143,151,165,299,243,226,223,225,211,230,224,254,210,187,178,208,245,233,206,187,170,171,228,218,268,190,179,160,549,164,161,76,91,102,108,116,135,133,143,151,168,181,212,209,196,168,180,181,185,170,179,172,183,223,177,173,210,232,173,190,197,225,155,181,185,323,228,230,221,269,249,224,219,238,197,217,197,210,233,232,206,208,195,212,221,188,214,190,182,171,644,189,159,113,114,104,131,123,142,138,151,159,254,274,218,231,258,234,238,234,258,235,180,199,179,275,228,227,162,181,173,231,210,279,188,186,157,940,184,177,101,97,104,117,109,130,138,135,147,403,271,162,114,80,91,95,107,107,130,131,141,143,199,179,201,228,182,172,188,215,182,204,194,224,251,272,192,202,257,282,252,232,201,233,198,203,184,216,180,173,173,165,177,212,170,229,183,165,166,944,160,178,99,110,119,123,120,139,149,163,160,173,292,253,204,248,252,235,246,241,242,212,199,177,319,213,221,184,186,169,224,252,212,251,169,174,610,261,200,121,101,94,104,115,124,142,145,158,150,185,219,184,199,197,200,178,187,174,194,168,173,214,215,184,183,226,200,178,213,186,183,203,191,188,309,205,197,263,235,265,178,195,265,196,191,195,220,219,223,196,167,161,277,182,215,178,169,179,477,278,185,143,112,137,116,150,120,170,176,165,173,320,211,224,244,210,186,257,251,234,230,191,217,240,234,249,278,166,181,163,204,251,229,194,201,177,465,185,162,96,102,118,133,132,164,163,164,185,952,154,163,124,101,121,124,129,148,156,168,164,185,244,188,171,217,203,162,208,238,189,179,209,176,303,219,193,221,273,263,273,205,212,212,204,182,214,225,221,186,180,197,196,250,227,259,219,249,215,532,165,150,116,107,114,131,136,151,172,177,182,253,226,244,203,254,249,261,228,244,246,216,186,213,256,244,231,198,198,183,214,264,269,204,207,194,853,182,195,124,118,142,154,165,164,202,201,194,529,292,241,204,186,183,195,168,179,201,203,220,222,241,229,219,241,273,199,248,251,246,234,226,250,209,190,217,245,208,205,203,235,256,233,222,200,224,205,225,236,248,213,245,228,220,205,230,228,236,256,266,265,226,232,238,219,224,221,209,211,203,214,196,224,176,211,243,224,223,226,235,232,237,218,201,223,228,213,198,219,239,210,208,217,212,242,230,212,241,244,228,200,199,195,187,195,207,210,187,221,210,223,224,227,210,232,259,251,225,242,217,234,236,223,230,221,256,260,260,252,222,221,232,238,247,244,235,268,240,232,301,236,257,240,241,255,252,264,245,227,243,222,234,227,215,215,208,215,247,220,224,235,246,230,228,201,232,233,269,215,203,188,232,213,216,199,227,207,233,233,265,232,214,241,229,222,284,245,258,256,283,275,281,273,282,269,274,294,271,255,255,245,243,239,198,234,244,280,266,295,264,303,292,254,251,221,213,202,224,230,218,220,188,208,192,181,216,189,204,207,248,247,232,231,249,245,241,253,225,215,209,194,205,217,195,193,211,220,239,245,268,276,250,252,242,201,202,215,202,222,222,216,228,208,217,224,225,241,251,213,221,227,230,196,194,195,224,225,228,217,218,205,224,230,220,248,206,216,220,217,200,189,207,194,198,204,223,232,244,257,216,246,231,217,221,226,214,230,207,218,205,218,190,198,238,256,226,216,204,202,191,220,196,181,183,189,204,215,207,188,215,211,218,211,195,229,216,216,223,241,219,226,234,218,199,201,201,225,205,188,217,212,218,196,219,219,206,191,181,180,204,188,175,190,193,195,203,225,196,210,195,195,204,196,191,206,217,199,206,206,189,199,194,210,189,187,195,202,225,200,196,224,205,197,181,192,215,205,202,189,191,188,183,176,187,220,192,184,217,176,186,175,199,188,175,187,211,219,204,191,211,188,194,182,182,196,210,191,178,195,172,184,179,186,197,189,186,191,193,186,198,195,208,202,205,207,200,184,194,187,198,215,200,204,208,207,200,183,194,191,191,187,183,175,184,190,188,205,187,192,209,186,211,183,183,195,176,205,183,186,197,209,192,195,187,193,204,221,170,175,164,175,184,185,177,173,185,188,190,198,210,196,163,187,177,170,220,193,213,196,181,212,205,234,213,214,220,200,186,202,202,219,229,235,234,215,228,228,204,220,223,224,245,227,248,234,234,232,226,220,191,204,208,192,228,225,213,229,218,222,245,232,250,239,230,218,211,211,231,229,230,228,229,238,270,279,263,250,216,216,233,185,203,200,192,188,196,196,210,192,206,216,226,217,204,232,203,194,214,209,188,197,208,217,223,248,215,241,195,191,199,198,193,204,237,180,204,194,220,194,208,194,200,216,205,210,223,204,203,186,190,204,220,215,224,215,223,209,235,218,203,216,202,220,192,225,201,187,197,194,204,184,193,187,196,185,180,185,203,184,193,203,216,203,198,195,188,196,188,173,186,168,184,190,213,188,175,188,200,179,185,185,196,205,209,185,178,197,201,184,212,197,209,201,217,203,201,181,189,187,195,199,206,199,198,204,197,174,189,181,219,194,170,196,187,210,178,193,191,173,195,187,189,199,194,185,188,189,200,185,181,187,182,187,184,189,171,186,180,202,212,187,203,234,193,177,190,179,206,196,176,190,185,174,195,183,192,204,193,208,196,196,210,184,185,176,180,190,171,198,201,207,200,205,184,187,218,194,201,183,180,192,184,173,184,198,202,184,177,166,180,193,200,179,204,203,182,174,187,204,196,192,179,206,192,182,183,177,174,194,179,190,184,196,177,212,188,191,177,185,184,178,204,195,177,165,167,204,211,193,199,211,199,192,204,203,190,191,189,185,196,179,212,194,176,202,213,197,216,205,190,203,204,200,202,209,205,223,212,202,210,189,195,193,199,220,208,234,215,209,218,217,204,216,194,209,217,189,209,192,207,180,194,200,209,199,201,216,217,211,187,238,214,266,260,242,243,215,230,228,221,228,227,220,216,225,216,199,212,217,238,223,202,248,205,209,225,201,206,222,224,227,243,228,206,203,252,230,209,196,196,201,214,234,263,243,249,255,246,258,252,252,265,269,274,262,256,263,241,229,261,225,232,249,220,207,247,213,192,206,204,225,229,245,230,201,215,228,201,187,199,196,233,223,235,232,275,270,235,248,214,226,220,242,225,254,224,248,255,242,255,248,232,241,228,234,251,259,247,221,236,245,264,241,265,245,255,234,258,254,271,298,258,223,228,234,247,250,221,227,209,245,219,221,241,230,260,231,240,264,227,215,216,211,208,195,183,201,200,186,214,196,190,174,182,193,214,225,209,203,207,204,205,204,199,220,187,180,191,207,210,220,200,205,212,203,197,202,208,229,224,225,202,213,219,217,208,219,203,211,216,232,210,224,204,201,200,208,198,191,192,193,192,190,195,191,187,195,191,211,192,193,194,218,187,169,195,217,213,206,205,215,244,229,223,203,212,196,199,215,232,215,212,241,222,210,205,205,206,219,224,228,188,180,196,197,191,174,206,186,207,178,215,210,196,218,194,205,210,187,209,196,199,224,208,211,210,186,203,187,211,193,204,210,213,220,187,184,184,179,181,204,183,189,193,223,205,191,193,204,185,208,191,197,196,175,165,185,204,190,191,208,199,193,214,189,190,203,193,202,211,188,184,185,199,217,188,189,191,198,201,209,185,189,187,189,171,194,170,185,184,187,183,174,177,195,182,185,196,213,196,194,199,197,195,189,213,189,195,188,169,184,189,185,212,188,233,214,220,196,192,203,227,206,210,234,211,207,200,221,195,211,213,236,195,215,204,230,274,215,214,240,202,226,217,215,228,206,218,217,214,209,229,217,219,244,229,238,220,242,228,228,224,228,216,226,224,233,241,231,235,212,203,181,186,198,205,205,199,207,200,207,252,248,243,244,224,244,195,247,226,227,218,206,221,217,223,223,227,232,236,239,225,246,218,253,243,232,243,266,243,231,237,247,217,216,234,227,241,261,243,266,232,238,251,228,241,200,231,227,211,216,216,209,204,224,227,216,244,200,197,237,237,222,240,234,201,212,201,250,218,246,228,211,205,206,191,224,196,202,234,260,253,261,238,259,246,245,216,226,203,228,214,229,201,227,214,200,229,201,211,238,202,254,218,246,230,250,234,218,243,247,235,227,215,217,223,238,207,231,205,242,258,226,223,227,232,232,221,202,242,230,232,229,224,229,221,188,207,219,203,209,207,223,213,223,211,218,221,201,215,215,223,224,229,218,226,243,220,196,201,202,202,211,247,231,236,230,248,226,229,237,243,259,263,251,255,227,228,201,223,207,219,203,221,264,230,219,258,227,252,236,232,235,224,224,237,250,229,237,217,235,229,232,213,228,230,235,261,243,201,203,231,222,214,214,217,203,235,236,198,230,217,221,234,218,213,238,245,237,204,226,212,218,231,210,208,255,227,258,227,243,231,257,234,239,258,240,240,225,236,213,227,221,237,233,264,242,226,250,266,249,241,228,236,231,228,223,247,245,269,236,210,220,210,226,226,222,216,221,248,239,271,248,214,249,231,225,234,246,221,234,226,230,217,171,165,124,529,287,335,251,191,222,199,242,249,270,228,240,250,258,280,295,308,325,276,255,287,267,329,305,285,316,261,300,274,271,315,264,292,334,315,285,299,273,264,262,317,321,321,355,291,296,245,253,279,344,343,332,305,314,335,282,299,285,294,253,251,288,287,300,274,302,302,313,330,315,307,274,279,308,260,291,243,281,303,306,288,327,358,339,286,284,313,277,302,261,290,301,274,298,269,305,363,351,352,348,371,352,346,336,368,317,366,295,320,320,298,288,346,283,321,276,274,305,282,268,320,281,304,302,250,293,296,294,282,287,277,289,277,265,285,250,273,275,260,248,244,236,272,245,238,268,259,298,250,267,288,307,255,276,323,305,284,292,285,289,246,242,240,257,281,269,265,284,273,277,288,308,326,286,293,278,280,265,312,292,272,265,245,253,243,271,300,319,346,336,342,312,289,242,243,252,273,263,268,273,262,252,258,259,274,290,279,293,278,295,264,279,258,307,319,314,269,334,240,267,304,294,336,375,302,276,272,309,305,330,304,261,282,324,265,273,273,252,271,290,308,324,271,256,259,255,263,253,271,261,286,309,272,246,272,254,266,271,274,289,311,328,315,296,298,327,277,273,247,249,258,282,278,269,283,250,281,270,269,290,280,260,283,270,237,258,247,287,270,254,260,255,236,230,262,263,269,266,297,286,278,264,280,240,233,249,267,275,275,253,269,279,258,283,309,253,264,238,257,257,261,272,267,309,258,300,278,324,320,292,307,253,242,278,270,231,270,238,240,249,219,228,236,211,253,265,247,266,239,268,299,324,298,353,338,296,300,314,305,285,302,276,286,307,283,290,273,263,278,283,277,260,284,265,247,257,278,295,254,279,309,341,323,265,252,304,294,286,250,267,267,266,297,280,299,283,278,276,281,295,252,289,252,283,255,262,249,255,270,273,240,249,286,308,264,245,246,260,251,265,290,314,273,304,283,273,297,281,282,272,253,276,273,290,292,263,290,270,250,293,292,316,292,286,245,245,289,285,259,277,252,265,294,279,274,271,248,250,245,234,246,278,269,305,303,309,268,263,227,271,302,280,231,223,264,309,308,308,274,265,280,242,234,245,267,295,283,248,242,257,253,249,251,261,263,211,239,254,254,274,257,246,280,269,320,260,299,274,245,224,260,253,263,281,283,291,327,270,274,217,292,249,292,342,263,323,303,340,343,226,289,293,293,293,297,302,303,292,268,309,293,340,301,320,286,317,292,297,304,301,320,290,294,265,286,292,292,320,308,239,283,295,280,245,308,290,235,261,226,283,300,259,283,318,260,260,278,283,329,257,269,231,290,248,277,293,268,301,240,264,255,279,300,284,322,280,267,369,306,321,318,329,275,237,275,308,279,304,257,266,254,274,258,264,265,260,290,259,273,260,232,280,305,293,258,243,282,275,320,259,286,267,295,263,254,221,231,237,242,243,253,236,249,219,256,246,251,270,311,274,266,234,272,243,272,267,258,253,226,254,327,237,255,276,253,249,257,268,239,241,238,285,253,255,272,272,303,278,265,286,227,256,253,228,248,246,293,274,230,230,200,222,222,230,230,251,258,219,250,226,234,254,256,244,254,246,244,256,274,255,233,237,233,242,269,260,257,281,242,232,237,251,245,244,244,254,267,276,267,231,239,243,242,251,225,228,224,221,246,234,208,228,234,253,222,231,248,276,239,245,246,224,226,211,220,233,229,284,255,242,246,252,208,229,239,201,233,231,242,244,248,256,239,228,206,250,248,238,249,235,267,265,271,292,230,244,207,242,259,248,232,201,185,139,127,730,270,234,143,224,208,204,246,238,284,250,285,285,294,319,275,339,354,297,309,350,325,311,300,295,318,295,304,333,348,320,351,372,287,345,335,326,349,335,373,355,277,376,276,308,305,311,324,299,275,338,334,340,393,310,341,308,274,266,291,252,248,294,358,380,331,298,328,380,262,292,338,317,285,325,336,329,295,342,359,345,338,289,370,315,287,327,346,352,328,335,292,324,320,301,335,360,348,332,348,275,292,270,272,288,295,282,307,303,265,250,279,286,313,358,329,302,304,282,297,239,298,281,286,306,325,334,309,269,299,329,289,261,272,329,272,260,262,298,260,278,290,269,270,259,303,313,292,268,303,288,318,269,295,316,298,276,269,271,238,259,272,278,267,265,277,270,251,242,232,256,282,305,262,262,304,302,324,268,272,320,296,316,289,324,275,325,365,335,308,348,307,300,259,258,325,328,327,300,276,279,303,253,272,253,237,246,283,312,290,244,295,283,327,269,296,283,277,262,264,284,271,284,266,294,299,333,355,328,307,293,286,297,265,275,292,284,373,364,362,337,312,287,284,280,289,279,307,346,334,291,279,302,401,321,285,289,308,318,262,303,271,302,330,340,340,289,300,287,300,287,331,277,298,357,324,322,286,325,298,305,292,247,274,294,253,328,301,309,280,287,235,275,276,245,266,250,232,269,318,264,274,298,316,264,259,307,324,232,248,247,299,329,300,315,285,306,283,330,283,254,291,252,311,328,381,344,298,277,257,279,285,271,263,259,293,309,310,254,258,308,253,250,294,281,307,265,295,286,315,315,349,309,323,317,320,292,280,298,284,307,366,334,324,324,395,385,339,313,343,328,310,285,313,297,303,339,331,303,294,352,364,300,262,246,293,343,322,314,255,270,305,317,306,325,261,325,365,312,247,327,317,303,297,262,250,266,277,279,269,254,318,380,379,375,274,327,272,292,317,293,369,348,322,327,424,387,352,358,277,281,292,285,265,257,292,306,307,286,356,334,335,332,298,296,268,239,282,290,307,328,300,281,302,283,301,284,301,277,304,328,298,311,302,292,261,299,326,257,295,280,279,301,308,251,284,295,269,290,303,301,291,325,348,303,285,318,317,280,309,320,305,254,248,256,308,277,275,227,257,243,258,257,308,234,246,238,267,234,228,274,236,283,263,277,290,296,271,303,258,319,281,332,320,273,290,290,301,346,362,336,336,313,303,293,348,327,336,324,269,290,247,300,269,255,281,234,303,307,301,273,266,281,298,280,259,303,308,306,291,308,322,274,315,244,289,254,262,260,232,254,260,268,302,292,244,271,290,303,244,268,298,360,326,341,358,304,298,295,286,286,279,277,316,313,272,258,240,258,269,271,279,255,228,275,278,273,295,250,257,268,279,277,279,270,262,240,222,240,301,248,293,320,300,239,281,289,265,265,278,270,315,288,264,241,322,279,304,231,252,289,268,339,285,284,246,274,320,350,277,293,306,289,281,302,316,299,301,258,299,258,292,288,278,235,257,266,241,240,300,298,322,347,300,281,279,289,278,259,253,236,268,248,267,294,308,290,246,252,300,311,256,271,276,249,272,278,294,269,354,275,267,242,264,305,260,273,283,263,303,277,264,258,270,268,254,240,246,252,247,250,287,246,279,271,298,236,269,275,251,268,268,289,290,266,284,301,284,277,273,243,239,273,263,273,295,293,303,275,287,343,296,279,249,217,224,236,225,272,283,301,312,264,244,255,269,233,235,256,273,291,317,290,330,287,263,247,248,256,266,280,270,293,280,273,268,303,304,248,237,236,201,175,123,610,264,219,195,198,215,201,220,233,254,250,257,263,343,359,336,266,362,343,336,290,336,326,322,332,304,333,296,309,305,300,319,293,318,309,347,271,299,320,372,372,420,318,391,341,319,430,307,326,300,324,380,312,329,285,398,362,284,272,323,347,347,331,314,335,326,302,282,273,277,347,323,302,303,332,366,361,335,357,387,321,359,356,320,369,333,421,397,423,348,341,354,336,311,275,342,284,327,321,322,329,364,335,355,320,302,289,288,318,304,330,367,334,333,284,283,309,310,270,260,288,292,314,257,317,331,353,359,325,314,268,312,312,292,331,289,273,254,285,293,255,301,312,337,329,292,272,276,301,288,269,326,266,360,300,276,228,273,275,253,255,239,271,293,293,317,275,287,324,281,280,280,288,272,315,305,268,299,313,293,280,245,272,274,351,314,314,320,339,319,314,300,295,272,278,247,264,284,336,322,290,285,258,305,251,284,230,244,228,265,275,259,288,261,265,306,286,265,266,257,294,292,265,224,237,331,350,301,285,351,327,307,286,327,301,275,290,310,302,312,295,320,312,322,336,305,329,256,312,327,353,394,389,317,320,323,277,286,282,316,317,331,335,283,287,273,322,337,290,313,325,323,367,344,343,304,316,279,306,352,294,334,320,306,263,270,328,300,331,295,307,312,337,280,294,253,247,274,295,274,321,290,339,288,309,273,308,318,323,330,288,321,329,344,362,332,321,345,316,269,281,280,303,335,343,309,332,303,388,361,326,337,301,273,291,249,302,282,266,291,309,273,248,277,297,270,288,317,293,347,380,348,316,352,337,275,291,327,315,300,305,351,354,367,409,386,305,288,331,302,310,305,334,366,366,360,281,308,279,272,374,317,398,349,292,328,330,327,323,274,325,311,290,292,323,316,338,347,304,290,271,272,325,339,292,327,311,255,284,286,263,304,326,329,270,277,312,250,296,272,249,292,284,297,356,333,320,313,374,297,289,329,321,292,300,267,286,343,422,299,296,287,273,282,273,251,307,307,383,338,352,354,354,300,363,306,288,304,267,269,309,315,294,311,342,351,319,322,303,279,308,322,345,336,285,328,292,307,267,335,337,294,309,277,262,301,333,302,257,298,284,288,262,263,252,233,242,242,258,255,269,239,269,276,269,322,264,247,235,276,237,322,278,271,307,311,300,323,308,307,349,273,292,298,256,309,291,328,290,257,276,319,280,269,323,317,287,275,287,255,296,299,340,290,257,267,251,264,311,288,296,303,266,305,297,308,297,295,285,271,306,307,336,265,272,277,257,269,249,273,307,346,324,363,308,336,331,236,286,311,302,271,249,252,267,303,329,300,283,291,300,278,280,247,277,276,275,311,312,285,253,236,226,230,244,263,256,271,293,282,250,259,281,298,311,319,307,265,265,226,244,264,329,314,304,290,304,317,283,253,275,266,353,287,318,312,337,291,266,332,324,239,265,306,318,305,284,308,301,293,398,260,295,348,274,276,301,264,303,288,329,333,287,294,298,330,267,266,257,264,315,328,310,308,335,314,334,289,336,276,257,263,281,260,290,283,322,299,252,251,357,282,261,272,252,284,315,329,295,278,258,307,346,266,281,252,288,258,284,346,323,305,268,317,274,254,316,327,252,288,265,291,299,320,294,273,284,338,244,240,241,307,284,275,297,272,303,286,282,290,295,293,242,255,264,286,279,257,275,276,284,299,261,293,250,271,268,222,259,287,313,324,283,264,263,250,282,268,275,257,294,292,326,295,300,283,292,248,262,257,261,237,256,275,306,346,307,319,310,255,236,259,223,140,121,667,235,194,205,195,213,211,217,257,242,269,248,270,233,256,223,243,268,224,242,253,281,257,226,230,256,330,294,299,282,267,282,265,267,273,266,265,238,262,233,321,275,306,270,255,274,309,263,273,247,275,287,344,260,270,318,292,280,290,297,278,268,270,307,295,300,348,305,277,273,288,300,295,286,800,277,280,172,201,184,241,218,238,290,266,307,290,264,330,315,306,242,336,334,288,277,219,235,160,793,334,354,313,214,239,210,265,301,319,276,341,373,352,330,331,337,325,315,316,334,350,320,303,329,435,303,285,289,327,373,269,301,329,281,352,253,287,291,279,330,254,298,334,339,293,339,355,311,337,663,311,250,220,236,238,204,235,251,272,281,270,298,379,338,315,317,299,343,328,309,391,275,339,352,372,354,324,241,271,251,340,280,405,287,306,313,823,309,279,177,159,215,257,223,208,230,289,281,504,337,288,186,159,203,207,192,230,246,257,317,303,283,272,296,324,285,294,290,313,267,330,320,355,336,295,250,231,308,284,323,285,260,272,234,297,256,244,280,263,274,263,249,290,222,274,258,219,248,922,219,248,214,196,160,184,175,189,198,228,221,238,340,290,249,302,333,289,291,277,285,250,347,314,355,314,231,241,276,235,291,271,294,317,260,228,687,313,260,206,197,167,155,197,176,212,222,228,221,262,280,259,260,270,275,228,259,268,291,235,219,266,327,334,294,268,278,359,292,270,252,316,294,265,387,315,287,358,346,328,310,289,295,321,272,270,290,297,310,290,279,272,336,312,300,265,260,298,586,320,267,190,191,209,179,225,229,251,265,261,273,330,303,270,351,360,269,302,305,362,306,305,290,300,351,328,320,244,267,303,337,316,317,285,263,273,488,264,212,179,160,167,215,194,222,218,236,238,944,261,253,200,202,235,251,218,247,282,278,255,262,312,252,233,280,270,264,239,285,350,277,310,269,355,252,250,317,354,334,268,320,361,257,267,222,265,295,264,263,275,281,252,285,266,260,288,341,357,562,250,251,177,215,172,196,233,228,247,246,269,353,338,294,283,368,363,372,323,314,306,312,310,320,369,387,356,287,267,242,286,264,305,253,240,258,859,252,256,166,176,189,197,225,252,246,236,256,609,294,219,185,186,214,219,196,190,199,258,297,249,267,307,360,334,323,265,261,276,274,273,287,291,280,301,335,303,332,300,306,317,295,345,313,260,304,292,267,330,284,266,261,306,319,317,326,233,287,965,241,254,167,173,198,181,197,216,247,243,264,262,356,277,267,239,313,271,390,291,255,268,255,242,323,277,291,210,222,210,257,234,230,262,222,221,793,269,212,136,160,154,152,157,189,215,216,230,230,476,213,197,173,137,155,180,161,198,187,190,204,252,248,193,192,274,240,275,266,239,290,243,301,296,338,247,276,269,276,260,278,256,297,315,278,250,274,291,288,234,279,263,286,292,291,346,315,287,681,348,281,198,195,162,194,188,199,223,249,244,227,285,218,278,301,354,297,283,290,277,272,260,310,356,344,306,270,325,288,246,305,273,282,287,248,312,420,255,193,148,179,192,219,212,211,228,236,286,261,266,264,281,268,259,261,265,287,239,229,287,299,287,266,336,299,251,320,385,299,262,295,260,279,411,252,253,383,313,369,338,337,284,276,253,295,280,337,275,216,262,255,245,245,296,253,216,237,234,449,229,183,166,197,198,198,172,207,215,225,209,314,328,253,250,280,254,276,292,324,265,238,279,268,325,331,328,255,261,229,322,333,329,261,283,261,757,230,244,115,148,145,168,214,238,261,250,234,705,249,241,210,171,173,189,191,190,220,192,219,232,270,229,256,290,204,242,258,277,278,282,284,257,297,305,267,280,319,280,288,273,281,243,252,216,261,259,242,230,231,270,272,299,259,311,251,252,220,882,236,235,176,173,166,185,153,231,240,224,231,235,269,261,270,330,289,304,241,315,269,268,273,239,318,242,282,232,243,271,240,316,286,277,252,273,917,203,253,177,157,186,186,212,210,216,231,248,274,453,297,217,191,183,222,178,234,275,262,252,263,279,347,310,261,334,343,301,347,276,316,355,312,257,381,276,257,324,373,327,282,346,311,305,272,301,282,293,332,313,312,261,318,255,334,272,262,294,798,300,239,172,164,177,188,209,263,237,205,215,267,401,301,264,330,343,313,328,331,306,342,353,306,365,259,287,298,281,241,270,330,332,316,276,292,397,400,280,204,160,204,209,230,230,245,210,215,277,789,269,242,180,169,176,231,244,238,253,271,303,284,288,264,284,292,273,263,279,309,316,306,303,359,395,289,281,377,363,294,259,248,320,294,318,320,319,243,376,252,217,216,257,273,242,236,264,248,266,376,245,204,153,154,170,151,187,208,217,220,208,292,297,263,243,266,239,261,266,262,253,272,253,269,291,313,268,261,261,267,273,288,339,252,261,256,702,260,240,190,173,168,155,202,197,244,290,286,288,279,265,221,223,224,245,258,249,262,266,248,233,293,220,252,276,253,263,253,312,292,231,261,304,386,296,308,274,419,373,352,338,289,319,318,250,259,253,335,278,286,277,277,307,220,302,239,222,278,768,243,235,160,163,203,202,216,235,279,274,303,341,391,308,291,358,307,280,313,348,295,327,265,285,359,334,314,243,269,260,291,229,302,270,262,231,912,220,245,199,213,213,215,170,184,189,204,201,226,277,274,283,267,290,283,259,258,262,282,249,241,236,262,244,264,300,229,212,248,235,234,239,248,284,361,279,240,301,340,308,285,241,262,224,204,214,258,229,222,237,229,210,308,202,301,280,261,260,897,235,290,233,213,238,238,240,253,277,276,239,260,363,306,283,304,302,306,300,313,288,285,288,284,313,295,295,292,274,284,288,341,301,363,285,267,517,367,294,272,213,210,202,223,206,233,228,226,267,744,222,241,160,168,184,193,218,233,229,241,233,272,368,258,284,260,265,275,297,295,271,301,307,273,370,248,303,283,308,279,238,292,289,330,290,254,313,313,279,255,256,274,327,347,317,289,262,258,411,393,240,205,180,189,219,208,203,189,238,236,260,261,219,339,235,281,300,265,348,326,252,245,213,289,337,252,254,249,249,236,287,280,305,265,260,269,568,251,194,144,144,143,172,181,179,218,216,216,923,199,197,155,155,193,179,159,174,181,173,197,215,255,200,257,218,227,306,257,302,270,280,275,281,351,268,258,258,340,281,310,343,305,275,298,243,276,327,275,286,247,272,258,261,285,317,296,272,280,703,286,246,176,170,174,189,211,220,268,289,241,289,322,272,252,303,244,244,276,281,249,284,245,254,274,233,278,244,257,251,295,262,275,236,213,245,900,256,268,190,176,201,186,192,202,241,260,282,274,304,269,306,263,273,271,258,288,253,264,264,268,269,292,295,257,257,315,284,261,302,275,263,293,303,327,221,315,336,290,360,299,276,324,269,320,285,241,238,294,232,240,223,300,260,291,246,271,232,998,252,256,151,188,208,205,198,238,217,236,259,262,362,234,306,252,275,225,292,340,285,285,289,239,325,280,303,268,228,252,258,274,303,274,242,257,590,320,239,205,129,150,173,208,207,183,240,235,246,607,207,186,179,204,191,229,233,226,207,238,235,252,301,252,188,221,274,231,232,309,243,219,268,282,418,211,258,280,325,300,285,259,263,217,249,236,267,224,289,242,292,218,273,318,278,251,263,249,476,282,220,159,130,157,180,196,201,186,187,221,229,339,241,286,265,262,290,279,300,268,300,265,267,261,243,268,266,268,262,237,244,287,285,248,251,305,489,201,233,167,168,154,179,192,184,234,240,250,276,318,360,328,360,297,285,263,269,251,271,279,289,294,236,259,274,300,257,244,264,242,233,272,306,346,275,271,314,348,346,310,262,356,266,299,258,293,274,289,223,252,230,239,281,262,271,319,231,277,597,211,223,209,225,224,222,217,237,220,244,268,337,286,268,252,264,253,292,319,323,299,272,256,279,337,320,265,241,222,265,326,298,378,222,247,237,904,222,221,141,182,175,192,210,201,171,194,217,530,294,235,207,206,182,159,192,157,177,208,195,235,215,207,252,246,228,225,293,315,253,272,264,295,361,261,250,271,327,260,271,271,295,273,226,256,243,292,241,220,258,230,239,237,184,250,234,216,214,918,237,245,162,160,175,149,167,186,198,198,198,234,339,282,195,295,327,280,288,324,267,291,271,287,302,243,263,237,210,184,250,275,269,294,216,210,701,291,237,179,171,155,168,189,170,182,183,191,200,234,236,218,207,207,206,206,213,220,206,207,197,264,274,296,260,257,241,302,234,248,217,238,234,212,320,233,204,267,314,237,279,283,256,275,273,239,252,212,268,249,218,215,292,246,275,214,221,204,599,306,247,211,181,183,182,201,158,165,203,206,241,342,253,233,299,262,231,286,255,338,293,258,255,302,274,280,238,209,192,241,255,289,284,208,213,238,435,228,184,161,165,192,197,188,186,215,210,228,272,271,259,251,226,231,201,206,207,206,208,205,190,200,184,190,193,215,194,269,206,218,215,227,196,323,257,222,288,275,245,215,198,270,235,246,222,259,262,308,251,223,221,225,258,208,238,224,203,224,501,247,214,177,169,163,164,137,181,160,182,173,303,266,242,232,275,264,287,304,318,248,255,250,254,271,297,272,202,193,228,279,260,280,230,214,245,818,248,238,159,154,177,172,155,168,180,171,196,670,254,182,127,134,139,140,146,160,166,191,179,191,259,248,266,255,261,237,228,243,234,238,203,210,284,251,236,240,277,228,270,276,254,299,266,239,223,254,199,279,193,203,208,215,208,254,217,203,204,916,214,203,157,174,146,158,163,153,191,197,195,248,283,229,210,223,274,223,363,287,297,258,219,233,279,212,280,229,210,232,234,217,212,215,211,195,838,271,209,148,150,168,161,180,187,223,189,197,220,443,218,193,131,174,156,179,147,173,179,177,177,225,249,190,201,260,191,250,255,202,252,238,263,245,296,211,239,236,246,240,240,232,258,229,251,216,280,267,225,226,237,217,243,240,219,248,205,215,752,268,245,145,165,169,141,165,160,170,168,199,176,267,179,270,247,294,285,293,297,305,228,239,230,273,259,251,254,200,186,215,247,243,257,223,195,318,370,218,202,156,182,159,184,165,175,181,194,188,210,219,228,254,260,214,213,214,228,227,201,207,224,294,238,275,316,254,246,276,231,222,263,218,205,364,199,217,339,244,271,302,259,276,279,238,287,270,283,266,213,200,225,211,212,213,238,222,203,251,420,211,195,157,162,167,165,167,178,191,226,205,290,309,246,247,264,254,288,282,316,253,265,276,316,347,299,354,200,207,200,261,283,222,212,209,190,729,238,219,131,160,161,173,196,187,201,200,207,799,248,208,152,156,155,199,168,158,160,170,180,201,255,210,219,269,201,186,302,270,274,260,287,228,309,233,236,232,286,229,273,226,261,216,205,214,272,289,268,218,209,211,223,250,199,289,206,212,202,805,217,232,152,142,153,148,153,194,202,182,188,223,264,222,218,269,256,290,288,295,259,238,244,218,324,201,231,223,215,189,245,239,250,212,205,220,924,249,248,166,141,161,168,174,170,183,190,192,252,406,204,172,138,151,157,153,147,183,191,181,177,248,255,280,291,278,262,264,252,254,250,228,239,242,278,206,201,257,304,266,265,249,265,267,257,269,276,256,269,239,202,212,262,203,247,214,202,212,844,236,242,169,159,165,195,179,164,188,185,205,228,360,276,264,308,277,272,321,276,303,267,259,234,284,229,208,195,204,207,243,303,245,274,217,214,413,348,239,164,154,151,169,158,157,183,179,218,210,789,228,217,154,147,172,155,131,171,179,174,177,230,280,232,209,216,254,203,250,230,256,266,240,244,320,228,192,307,275,249,209,190,258,220,241,227,271,273,318,236,214,214,217,257,241,208,209,216,293,385,228,191,171,182,158,164,145,204,170,181,185,331,265,248,248,268,278,298,298,308,270,220,250,240,252,276,255,208,214,211,247,271,289,219,233,216,619,222,229,159,179,145,183,170,170,179,185,197,207,199,216,201,211,195,189,191,198,208,190,180,179,287,235,225,285,268,214,229,269,297,232,233,228,358,256,264,241,325,302,318,283,302,283,260,273,285,255,267,260,255,217,268,282,204,250,230,225,217,716,209,202,195,176,172,191,174,172,190,185,194,272,267,230,215,295,250,251,313,310,302,294,279,261,354,318,284,223,219,238,253,261,324,194,224,223,943,231,225,163,178,158,158,159,188,179,177,202,220,265,260,262,255,226,214,238,227,234,207,221,203,211,199,204,234,234,228,236,229,215,223,232,219,262,286,238,217,297,289,245,246,217,241,249,243,234,275,233,212,228,232,240,252,202,252,234,190,196,928,232,246,163,166,187,190,175,174,188,194,204,211,325,255,210,292,284,284,300,303,294,252,240,260,317,234,268,200,199,185,229,296,236,284,220,205,539,333,239,177,173,153,181,187,183,171,182,192,184,648,198,188,116,115,120,138,150,188,192,187,186,236,278,239,248,248,243,214,238,240,211,191,223,193,334,201,292,271,270,250,290,266,247,245,255,224,268,258,215,231,224,198,236,249,215,259,225,217,424,336,215,160,146,174,179,169,139,190,210,197,217,235,196,281,218,271,264,270,296,303,258,246,233,239,282,251,239,196,195,229,286,263,265,222,197,198,527,231,186,142,151,165,176,177,195,179,228,186,991,240,232,179,140,161,158,132,171,181,174,179,208,268,224,244,191,207,245,244,280,227,230,241,222,323,208,236,246,318,256,265,253,219,219,231,202,274,291,289,233,219,211,244,212,211,272,220,204,213,608,199,232,138,139,153,157,180,179,185,181,177,274,262,236,202,235,251,243,281,293,291,247,221,219,280,241,256,198,196,205,239,255,245,229,217,192,922,256,214,167,150,184,166,159,176,206,200,199,207,234,247,247,243,254,219,240,197,212,204,245,191,270,245,285,265,236,302,252,233,319,225,217,255,286,252,214,307,308,227,291,281,281,297,292,238,286,267,248,250,231,217,239,257,249,239,218,255,271,937,211,239,164,177,182,168,162,203,204,212,206,234,290,243,288,240,247,193,366,304,322,268,251,276,332,252,253,274,225,260,271,304,315,292,233,260,637,289,249,189,163,172,200,165,205,171,231,211,194,575,230,250,191,190,171,194,157,193,184,212,192,257,290,290,215,224,310,273,241,262,289,277,252,252,318,221,208,261,306,273,243,216,232,249,238,235,280,238,311,259,231,248,302,257,240,280,247,234,546,295,230,167,151,202,162,194,186,202,249,206,202,340,245,286,278,280,322,336,276,285,255,257,247,297,275,291,282,233,247,237,270,356,315,277,208,297,503,244,229,150,191,200,189,212,213,229,255,258,952,251,318,206,175,217,234,192,247,234,231,260,248,277,269,295,263,292,296,271,299,241,228,262,236,221,230,247,249,252,250,230,218,212,223,236,250,262,282,254,275,267,249,256,232,246,271,248,231,240,225,227,226,238,238,262,238,242,237,257,227,222,250,201,244,235,242,214,299,274,252,245,235,267,249,256,273,244,266,254,290,256,251,250,251,256,264,241,221,258,221,203,223,237,196,233,212,210,202,242,242,235,186,201,204,218,236,200,222,216,234,216,217,240,211,206,207,214,234,244,226,218,238,242,245,211,219,211,228,227,233,223,201,240,231,189,193,208,216,212,215,211,207,209,229,211,198,224,217,223,260,205,223,247,204,216,238,202,212,221,202,225,223,250,205,225,191,197,195,234,202,220,205,209,226,211,203,210,215,216,199,191,217,216,210,230,207,208,219,234,224,216,222,209,218,229,231,231,221,279,268,250,272,260,230,237,251,263,253,254,283,229,260,212,221,227,227,225,210,238,198,227,219,214,214,218,202,207,210,216,209,209,204,225,210,220,220,213,242,235,236,259,251,237,241,235,253,233,231,216,207,204,195,209,224,188,195,215,208,205,213,208,202,206,197,212,218,217,219,224,212,206,202,229,274,216,244,260,243,249,234,252,229,222,237,264,239,223,201,195,217,202,201,180,188,219,211,213,222,214,212,209,196,200,194,219,206,201,196,194,206,204,180,190,197,209,207,206,212,202,204,202,203,216,225,228,205,201,193,188,187,197,207,194,181,208,214,226,206,205,208,194,226,210,213,191,208,201,233,215,213,196,195,188,190,198,214,183,198,191,201,186,180,191,185,206,202,179,200,194,205,188,192,178,199,208,199,200,177,193,197,200,210,193,185,201,223,204,206,212,207,211,194,186,209,218,218,243,243,209,222,247,240,213,244,232,233,204,213,226,220,220,189,206,193,202,206,225,203,214,194,201,212,200,219,205,213,184,207,185,210,193,203,205,191,224,211,216,205,225,207,218,195,212,215,224,206,227,221,235,226,232,226,216,214,205,222,213,231,225,210,215,224,228,235,212,185,188,213,216,205,188,205,236,227,241,223,209,214,226,211,198,181,179,196,200,210,214,199,197,227,215,209,189,175,185,188,207,220,197,195,206,202,207,191,190,204,199,209,209,198,200,179,176,185,212,197,195,187,197,180,195,192,182,192,197,208,192,199,188,186,187,199,202,222,210,207,224,228,218,205,206,215,205,200,194,206,201,198,201,184,198,206,198,210,206,199,200,190,206,216,224,240,240,229,210,203,219,215,195,203,205,197,217,185,204,195,200,204,203,210,221,221,220,249,226,259,245,245,224,236,248,245,231,224,231,262,239,234,263,227,256,222,218,201,227,208,222,231,206,210,243,254,232,244,237,252,218,220,237,214,207,210,239,229,242,229,216,227,215,222,212,221,213,216,227,222,252,247,253,218,228,217,224,242,230,223,228,204,226,205,238,213,208,206,229,241,231,221,221,206,187,198,239,238,204,215,214,235,238,264,227,233,257,283,236,252,276,262,255,246,263,252,281,240,243,214,227,199,217,202,225,230,220,216,227,249,235,231,222,229,226,246,231,218,234,233,236,236,223,233,216,229,229,239,227,239,197,229,228,240,240,233,238,219,242,186,205,194,207,227,204,188,210,203,210,202,213,206,221,219,233,213,217,210,247,232,198,224,203,235,206,200,220,242,258,196,221,205,236,225,195,218,225,199,225,206,212,191,204,229,205,203,194,183,208,187,188,208,203,199,228,241,223,217,212,215,220,210,217,230,237,224,262,226,242,235,231,215,245,241,228,211,230,236,218,247,253,238,276,273,250,345,292,277,256,268,240,222,208,234,259,255,294,224,239,229,249,254,255,223,263,245,275,274,273,210,249,274,278,246,257,256,240,245,227,247,255,240,240,243,220,235,263,236,229,222,263,267,307,262,248,293,274,272,265,264,248,240,264,272,279,232,284,300,311,270,264,284,263,222,267,257,259,275,294,267,230,214,242,226,227,217,230,229,233,236,237,202,198,195,200,198,184,179,200,214,223,231,256,239,268,243,231,241,232,235,220,248,254,273,300,277,241,231,262,252,239,219,217,208,241,283,261,238,241,239,240,212,238,227,232,224,224,255,267,255,240,266,240,231,257,244,242,213,197,234,285,277,259,210,255,259,237,231,258,229,224,218,261,291,254,283,244,221,228,250,237,236,210,224,294,291,278,247,244,256,229,237,235,235,221,232,247,282,283,232,242,237,239,211,215,247,219,212,213,205,189,200,190,187,188,216,217,215,196,206,209,206,277,240,235,241,260,241,243,237,238,232,250,229,251,233,249,250,274,216,232,257,246,231,233,231,251,273,298,260,245,253,283,272,220,239,240,219,248,263,264,246,270,230,237,242,250,239,275,238,276,295,250,267,261,253,240,256,296,243,247,253,232,242,284,287,273,231,275,262,221,203,233,222,212,196,230,225,247,223,200,203,199,205,198,192,188,203,215,299,233,228,196,259,264,248,223,248,241,224,222,283,269,272,260,249,226,240,229,225,239,207,220,228,261,285,265,242,238,252,258,242,239,242,216,264,262,283,260,215,267,243,215,236,224,214,213,207,268,252,297,249,240,236,233,261,248,221,200,230,253,298,290,272,226,266,236,237,241,244,217,219,223,263,266,263,270,270,241,218,230,225,226,219,212,263,237,232,228,234,257,261,228,208,219,219,228,223,224,234,228,229,251,235,255,258,233,245,241,233,262,334,279,227,251,234,239,229,209,223,196,223,224,215,233,262,233,247,225,224,217,207,220,224,228,219,304,222,244,277,241,272,260,281,274,227,216,237,267,257,270,210,246,232,223,221,206,218,190,238,251,266,248,216,250,235,281,262,233,263,243,236,238,293,221,254,256,233,262,215,220,242,206,203,239,245,221,215,200,202,197,201,205,200,209,194,194,222,274,234,244,259,229,228,220,232,222,213,200,222,243,241,288,246,227,218,212,214,217,205,210,227,236,287,280,244,251,248,248,249,228,225,227,229,244,296,254,259,222,225,243,201,215,232,230,217,233,238,262,265,265,272,254,249,255,259,240,269,260,212,304,229,219,233,209,210,193,196,223,225,226,270,283,273,256,236,293,282,243,240,239,230,218,257,257,246,262,232,268,221,224,236,223,221,223,234,219,275,242,268,230,295,284,291,232,256,237,236,224,231,263,233,277,248,240,226,233,231,257,233,249,253,271,268,262,251,272,266,324,272,273,245,219,231,285,270,265,225,260,266,233,234,246,247,241,235,270,251,282,254,277,283,254,250,260,257,242,237,255,268,269,258,230,282,301,280,235,294,269,245,217,288,266,286,303,266,277,259,258,286,231,235,222,238,248,241,205,223,197,217,240,239,240,241,216,234,241,263,246,281,299,252,277,260,303,228,228,242,255,294,298,275,243,241,252,245,278,275,250,231,300,282,256,251,228,246,244,302,284,259,231,247,251,254,259,266,234,271,215,274,259,236,264,223,256,256,228,273,264,241,186,260,257,276,236,260,244,283,252,302,262,282,316,273,271,281,257,232,243,214,291,276,306,254,283,234,292,259,247,272,253,271,953,251,254,204,172,180,239,211,235,229,249,230,273,266,249,298,283,311,304,289,269,219,274,279,246,572,252,210,199,167,212,187,179,202,235,239,211,268,270,274,260,256,277,323,268,254,299,275,263,279,455,205,197,138,171,151,166,151,238,233,230,238,270,258,228,228,257,220,278,221,269,266,225,242,344,352,274,248,219,223,228,243,217,231,264,283,242,239,245,256,250,251,239,241,220,247,221,228,244,667,233,186,116,117,143,152,198,177,206,203,217,233,246,251,273,209,243,226,227,221,237,256,229,283,741,220,208,183,140,202,173,212,206,178,212,202,222,257,261,223,233,248,210,217,228,245,283,226,257,899,225,192,130,141,147,172,146,186,232,225,187,214,241,213,188,230,194,214,253,241,255,222,213,212,584,247,222,171,151,195,196,163,177,213,198,194,247,250,249,197,210,235,252,254,244,232,234,271,240,476,220,195,133,160,156,199,192,228,213,240,278,240,253,255,211,199,241,284,242,214,259,261,265,398,309,234,192,188,176,185,176,168,197,186,218,205,257,210,247,289,277,261,247,306,312,261,252,270,725,241,190,136,157,141,146,142,150,169,190,209,182,242,246,242,250,249,225,221,248,248,229,234,240,796,220,233,218,174,220,194,196,245,220,211,236,255,268,232,205,220,249,227,206,186,200,257,222,216,863,209,196,113,111,129,187,174,222,214,193,214,212,202,217,223,255,250,255,253,213,223,243,249,202,519,255,231,175,165,172,154,158,194,195,177,181,241,248,268,238,201,202,241,281,204,247,193,250,248,398,176,179,129,129,117,162,172,175,194,211,184,254,207,272,204,188,195,198,240,258,224,217,194,429,285,204,170,161,145,146,193,163,177,168,179,202,243,227,208,233,201,227,216,233,232,254,221,229,773,256,215,130,168,143,165,200,215,201,207,210,215,232,225,248,188,231,214,224,263,233,217,230,195,788,189,220,174,151,173,174,180,163,183,196,222,210,269,203,295,222,223,260,243,287,226,200,240,241,809,194,203,172,163,170,177,200,212,223,211,224,237,301,207,259,238,244,270,225,212,248,225,212,219,489,243,229,178,209,215,192,177,211,211,210,190,206,235,194,187,185,195,223,228,228,238,195,187,301,351,186,148,114,129,136,151,146,167,180,199,189,209,215,190,194,184,191,204,208,185,223,224,205,473,276,211,174,148,146,156,157,148,203,182,184,197,262,226,223,222,222,234,232,242,206,224,259,206,838,194,175,125,108,137,152,173,149,167,178,185,209,236,197,231,224,212,222,263,253,242,269,195,217,787,206,215,161,162,160,178,153,170,183,194,210,237,254,223,238,265,256,217,261,269,318,258,251,266,733,235,189,154,139,194,202,173,222,207,208,223,268,244,269,286,255,268,297,256,248,227,239,273,240,445,243,233,179,197,179,184,177,200,204,185,195,271,231,220,243,222,221,254,233,280,260,243,246,348,349,216,180,151,149,140,160,177,181,207,204,218,269,243,228,242,236,226,219,236,265,254,237,237,542,264,228,218,183,188,217,239,189,208,214,250,234,255,256,222,225,235,228,214,184,272,234,234,225,872,209,181,128,119,133,158,185,197,186,177,201,219,219,195,262,225,200,239,219,195,220,212,204,216,746,225,207,153,151,165,176,180,197,174,174,199,230,286,232,241,203,206,214,234,209,221,272,232,210,702,187,180,113,119,141,154,138,169,185,183,180,224,230,240,202,214,188,184,217,242,217,216,198,207,420,227,199,153,139,139,155,175,174,189,184,199,257,257,206,212,205,227,231,229,250,212,208,219,343,336,229,183,150,168,171,197,184,200,222,222,233,299,308,350,302,277,250,270,252,301,264,219,240,632,322,250,199,178,165,186,165,148,178,197,193,207,234,200,261,283,288,245,252,304,264,250,232,277,915,250,232,152,178,183,162,168,180,205,210,238,235,233,224,234,258,273,233,288,259,273,251,252,253,747,233,225,184,182,201,194,174,236,202,217,209,283,330,259,245,243,229,219,235,197,200,262,239,209,637,172,187,121,146,159,180,162,181,187,173,195,332,286,268,256,290,296,235,244,234,266,233,244,216,493,279,221,210,193,169,149,138,174,191,206,213,259,226,260,190,200,212,226,243,227,216,231,237,445,374,227,217,198,149,152,189,189,190,183,192,191,230,221,257,218,218,240,290,275,305,273,213,223,635,275,221,177,160,184,177,194,180,201,184,174,192,319,273,241,246,229,273,246,232,215,246,211,232,935,240,251,164,143,181,196,206,214,214,211,218,231,281,291,217,266,272,238,213,252,274,234,253,223,750,252,252,189,187,208,184,181,190,189,179,218,250,229,244,234,253,296,261,294,217,291,267,246,242,631,212,210,135,158,177,180,160,195,209,186,211,254,230,256,262,241,225,247,298,307,296,263,252,264,394,267,240,216,232,212,217,209,228,255,254,253,340,286,296,296,263,243,245,247,247,210,236,273,484,297,216,135,118,145,133,208,187,186,170,196,216,294,274,267,225,262,231,245,200,236,234,243,247,753,322,245,207,185,189,190,168,169,194,202,218,200,255,246,209,240,232,231,229,213,277,249,199,247,998,266,242,160,171,191,176,159,165,188,179,179,187,246,218,181,231,207,209,236,283,299,257,238,235,672,225,229,150,162,157,172,149,171,202,227,211,267,348,236,253,263,240,252,249,236,242,230,255,229,580,206,189,146,143,189,188,162,256,278,262,300,394,356,339,279,319,320,284,254,273,223,224,217,259,347,309,305,343,267,306,371,347,308,260,279,255,288,313,258,268,269,292,342,336,354,333,307,296,331,379,424,386,305,320,269,293,318,298,303,285,289,340,323,306,285,272,304,380,326,352,316,262,252,417,287,255,271,303,288,278,256,276,250,258,278,237,437,381,374,320,276,278,281,270,260,279,296,267,991,241,250,165,190,204,206,186,222,239,216,275,249,318,339,314,316,305,265,296,327,308,249,251,234,394,252,326,369,332,328,317,275,313,300,283,293,288,267,305,288,291,296,314,268,277,283,239,248,263,396,289,383,317,338,289,332,290,337,263,259,265,292,275,321,322,286,273,345,340,489,315,347,300,270,315,275,307,287,298,346,269,307,295,336,274,341,400,372,361,343,325,295,292,328,278,276,296,262,605,332,290,259,163,227,187,222,227,214,193,233,237,252,269,226,298,280,246,221,286,269,223,259,283,313,261,242,209,329,251,306,253,234,275,283,246,209,268,243,216,230,219,218,234,211,255,217,208,201,930,191,186,121,140,149,164,151,212,176,219,195,216,268,259,194,250,282,291,276,280,261,205,199,241,327,227,263,217,215,232,250,252,285,210,202,196,801,238,208,154,105,118,123,140,148,164,185,159,184,459,186,172,114,101,126,128,140,166,168,172,189,220,215,237,208,185,203,205,191,207,206,245,204,213,286,157,182,243,283,241,222,177,207,223,183,213,188,185,234,213,209,163,267,187,215,207,185,176,662,236,181,106,109,115,125,122,140,153,163,158,167,313,227,203,246,250,246,231,240,265,227,224,197,236,243,219,214,176,180,215,248,214,253,168,172,253,384,184,145,90,102,117,126,117,148,148,159,163,172,188,210,194,209,197,181,168,184,168,173,186,201,231,194,192,177,230,211,184,181,239,203,175,181,327,238,208,269,249,248,210,187,249,217,223,202,242,216,252,189,164,168,202,230,189,178,170,170,193,415,184,155,118,128,111,124,128,161,150,165,154,300,270,225,209,229,243,254,242,227,232,175,176,185,239,248,222,175,173,185,218,207,270,189,184,173,759,174,160,81,92,117,123,119,128,147,140,157,737,194,156,109,81,97,97,109,120,125,138,141,153,206,173,186,221,201,173,165,212,192,191,187,214,292,254,204,201,278,257,253,226,217,236,191,209,203,236,202,164,164,173,170,222,168,236,213,196,189,838,186,170,135,112,126,131,133,130,142,151,161,218,267,241,199,251,256,220,237,265,236,199,210,202,282,205,245,174,193,171,222,229,250,200,181,180,892,200,178,125,100,101,107,114,137,133,145,157,207,362,162,122,79,92,96,103,105,122,131,147,147,195,213,227,216,202,194,217,206,191,190,210,203,216,289,163,186,244,286,225,219,189,202,211,190,188,194,177,191,190,175,164,251,172,226,183,169,164,783,196,181,102,100,110,121,120,124,145,142,150,155,304,233,206,261,228,193,218,240,244,195,187,179,271,224,204,183,169,177,200,265,209,252,177,181,339,331,182,141,94,94,106,114,108,134,134,149,148,823,162,148,76,86,90,101,131,137,147,136,142,200,239,196,176,168,202,187,175,175,212,200,171,200,301,194,169,290,244,229,180,183,254,204,184,191,220,193,256,185,169,163,211,223,208,162,177,173,253,353,162,133,86,115,105,118,117,139,133,139,146,283,239,225,206,222,212,239,236,236,203,182,189,195,253,244,211,171,168,178,229,194,261,188,191,167,631,169,163,75,97,99,109,121,124,139,142,149,162,195,202,198,182,178,183,173,178,153,183,162,169,209,186,219,225,186,220,224,182,198,206,189,207,311,205,222,235,267,230,262,250,224,231,216,216,221,226,211,180,175,173,181,231,196,230,180,195,176,795,195,208,134,145,157,148,155,175,175,167,199,252,281,253,280,267,253,246,273,286,261,212,232,238,300,226,238,237,202,178,230,233,289,229,228,211,937,193,218,138,130,135,153,187,168,174,209,196,307,349,233,170,132,141,150,169,159,203,177,191,214,220,244,251,247,213,231,264,274,240,298,224,265,274,327,187,285,299,299,304,262,231,218,251,260,258,258,211,223,265,242,227,296,237,273,230,212,201,896,208,241,123,137,175,166,157,211,235,176,214,221,331,273,243,255,317,292,277,279,239,252,230,253,322,279,271,270,237,228,252,273,279,250,230,253,486,296,238,159,144,132,161,186,167,229,225,232,226,328,340,312,327,347,291,291,228,244,248,247,263,279,222,229,247,285,290,274,286,241,246,277,225,243,346,217,209,349,306,277,313,279,319,268,270,263,249,239,348,267,227,231,294,334,314,266,231,246,354,366,244,226,228,230,232,208,216,225,224,235,240,354,293,269,267,257,227,342,279,311,309,313,290,273,316,316,269,237,242,268,272,264,294,257,251,249,588,235,204,167,176,175,192,187,212,198,203,227,919,249,281,183,165,190,216,178,196,188,194,217,219,291,220,207,277,223,247,269,253,297,277,254,249,323,262,211,273,322,247,264,235,279,281,235,230,257,258,275,234,213,228,225,271,180,243,223,220,200,658,235,237,181,178,168,174,174,196,217,214,193,294,331,266,252,307,269,267,314,328,255,274,248,248,303,304,268,205,229,213,275,228,298,241,254,217,936,266,233,157,161,186,177,166,190,202,197,197,181,213,236,234,243,241,204,218,212,220,208,227,190,272,219,286,326,290,262,285,268,241,238,222,279,297,301,202,223,289,279,275,277,269,291,276,270,256,264,287,298,246,233,270,286,212,284,272,220,247,929,219,236,187,184,179,174,183,178,179,196,185,207,322,242,221,273,292,206,293,314,299,268,260,290,394,287,278,247,226,229,267,311,273,247,219,234,585,293,240,156,184,156,169,182,179,176,213,215,236,286,278,276,240,265,254,214,218,218,233,215,195,217,196,186,209,192,186,190,232,225,231,219,219,233,302,233,201,315,296,241,232,219,260,216,245,232,294,248,302,242,237,229,271,245,277,216,209,203,464,329,231,158,165,192,152,180,151,197,185,185,196,354,260,240,269,268,242,284,297,302,258,240,253,246,210,233,225,208,204,215,256,265,293,240,192,228,499,230,222,158,179,168,176,167,174,183,210,202,931,193,190,141,131,145,155,148,183,192,181,183,178,287,259,275,248,235,243,217,238,216,220,225,206,327,240,237,251,303,263,291,274,243,264,250,217,254,254,215,201,186,213,210,234,215,274,239,200,195,572,210,200,131,161,151,161,155,186,196,227,202,232,281,289,223,271,254,238,297,275,263,254,262,231,272,233,239,233,212,217,253,256,243,210,212,217,899,226,219,162,158,164,172,158,173,191,200,206,549,282,231,182,133,151,130,159,155,177,176,170,179,238,242,245,217,242,205,238,264,215,258,221,227,274,240,239,227,265,232,239,268,230,291,245,236,207,303,232,276,218,250,210,221,230,259,215,181,184,947,218,234,160,167,150,140,154,157,170,179,180,220,289,214,233,201,262,231,317,302,273,240,237,225,281,235,260,191,209,208,222,254,253,242,226,210,741,297,243,191,165,152,157,161,176,185,197,201,209,224,238,232,265,238,245,220,232,211,251,199,199,273,271,250,253,283,264,244,278,271,228,239,246,216,320,230,251,284,225,280,249,246,304,271,258,249,272,241,260,246,199,209,295,214,261,226,215,204,611,274,228,168,157,158,166,192,177,208,190,224,216,317,225,279,271,282,242,364,285,272,283,297,302,322,277,308,286,213,223,232,262,309,255,238,236,249,428,248,230,149,151,172,170,185,189,242,191,205,913,221,222,215,154,217,160,180,190,210,189,182,212,258,210,206,220,246,200,279,279,274,232,282,237,307,229,208,259,298,298,260,242,245,219,260,211,272,298,266,239,223,251,226,242,259,310,239,255,245,509,261,202,143,168,146,165,161,189,207,191,223,286,225,292,255,264,282,300,255,300,268,275,248,252,324,277,260,236,205,205,220,277,295,232,202,220,823,253,236,155,154,156,205,181,188,222,220,225,660,269,240,170,142,162,161,198,189,205,222,212,229,293,284,272,327,291,282,264,287,273,244,245,262,341,285,235,254,326,249,277,298,255,349,275,247,279,268,325,271,246,239,274,271,234,291,247,202,249,873,209,199,193,171,169,176,170,173,191,205,209,260,290,288,208,357,333,281,337,311,277,270,269,254,327,248,268,217,218,235,263,304,276,241,243,241,834,241,236,142,150,166,171,161,161,174,194,191,225,467,250,223,157,179,155,191,161,174,178,182,186,221,241,256,241,215,211,270,253,260,234,271,260,233,303,204,225,265,344,259,242,222,237,218,249,223,289,233,256,264,236,223,275,216,251,239,228,225,706,282,259,172,197,192,172,181,166,187,181,178,207,339,232,216,285,274,285,284,296,285,279,270,257,286,241,269,210,179,184,225,289,228,326,231,227,311,399,225,191,162,181,159,173,161,192,171,198,209,248,243,233,239,205,219,204,204,210,215,207,204,220,296,252,259,267,289,284,262,258,291,231,224,241,316,247,255,326,277,320,299,246,310,320,299,258,288,239,335,279,222,221,257,253,251,233,261,240,278,451,235,202,157,213,182,160,179,198,187,187,195,324,307,252,212,274,263,304,309,310,263,263,249,226,292,292,233,182,209,247,303,277,288,234,215,197,745,219,215,184,168,156,179,202,222,212,229,223,287,302,257,286,265,243,219,207,220,235,207,204,197,202,197,174,212,193,206,263,214,218,239,242,231,321,298,255,245,288,248,261,256,277,210,212,217,219,291,258,232,221,234,226,250,164,240,203,210,185,824,219,216,189,159,153,158,153,203,212,192,187,254,290,268,222,293,271,257,309,333,255,265,268,244,315,281,283,211,186,209,261,239,288,253,214,223,907,274,243,147,160,154,160,168,175,177,189,211,265,385,198,169,121,148,153,151,138,178,174,180,179,250,276,239,255,297,236,243,230,223,260,192,232,242,278,225,219,235,220,232,253,253,311,283,251,228,210,216,240,189,192,192,262,263,230,257,201,208,852,238,214,148,175,173,180,162,157,182,197,198,213,295,225,249,197,274,287,321,310,300,317,293,250,300,287,334,266,217,201,266,286,278,264,218,204,406,349,225,190,124,162,155,188,174,198,219,196,214,775,222,184,150,162,164,150,148,189,179,177,189,230,289,193,221,212,207,263,238,233,233,247,260,241,332,220,261,261,273,241,208,215,208,244,242,248,302,264,238,215,244,221,252,248,211,243,208,209,301,380,225,196,169,195,159,152,138,173,172,180,186,263,192,301,223,258,285,269,261,318,224,255,236,272,229,224,257,198,187,203,258,239,258,239,220,208,637,219,215,148,156,167,186,174,173,173,192,192,206,233,271,256,235,250,225,220,243,234,220,208,195,275,242,292,295,270,264,289,239,257,263,219,228,371,240,242,292,294,273,332,286,276,274,287,280,252,253,226,198,239,204,216,243,209,235,231,234,237,726,200,206,161,191,208,199,203,198,195,222,229,279,297,267,243,268,284,278,276,302,277,271,276,283,342,286,305,272,218,242,285,280,304,246,292,240,938,250,267,207,206,209,198,196,198,233,258,250,379,413,269,243,230,251,212,238,170,232,224,215,259,279,263,296,265,243,269,288,261,252,299,269,268,313,307,229,277,303,282,349,301,300,262,251,243,243,245,260,267,253,270,232,324,286,320,233,271,227,873,253,273,190,201,199,201,226,255,204,219,230,254,376,304,237,333,325,334,305,331,295,308,344,282,357,265,287,269,266,252,267,300,297,331,278,280,522,321,279,246,196,206,226,212,201,227,276,250,262,733,342,314,351,299,279,280,270,291,299,258,347,327,392,345,359,416,390,384,329,361,318,371,310,284,385,279,230,372,394,365,289,328,341,325,333,309,354,264,354,309,274,347,306,328,401,381,338,352,475,418,316,287,233,249,253,244,231,253,286,318,292,416,310,325,327,325,328,387,305,351,409,341,280,315,287,308,266,289,332,360,357,361,395,385,326,320,563,310,257,267,228,252,242,211,289,282,308,260,910,249,282,269,217,247,237,239,276,286,234,297,309,334,275,287,321,283,303,335,299,333,329,310,294,403,323,283,331,346,323,298,298,330,294,261,249,258,284,331,243,273,261,263,311,263,284,246,303,276,677,275,294,232,219,205,191,243,258,249,238,231,331,313,290,266,336,292,316,321,328,304,283,335,327,315,345,299,263,299,265,318,286,351,265,268,295,947,322,314,254,221,250,228,215,233,235,219,239,259,292,291,321,272,288,269,270,247,268,254,310,254,309,297,350,360,316,304,289,341,284,285,247,305,348,310,271,285,368,299,362,352,336,322,343,330,266,290,340,314,311,293,350,311,281,341,307,290,291,930,257,283,214,237,277,272,263,280,265,303,278,289,340,316,269,307,336,324,362,383,330,328,297,322,400,330,335,261,269,260,298,370,340,290,258,242,651,321,253,188,183,205,209,194,229,240,251,245,239,651,292,236,174,198,214,227,259,257,261,263,227,295,332,311,273,257,258,263,281,276,287,334,321,312,317,251,226,304,359,274,234,270,280,256,243,232,298,277,314,237,275,232,272,245,319,304,271,264,564,344,295,243,253,268,223,279,256,282,282,284,279,373,301,273,332,371,342,366,355,376,330,357,307,346,285,332,304,271,278,303,310,333,318,289,311,312,529,310,273,217,259,242,262,243,279,222,267,278,966,251,253,160,210,237,261,252,259,302,292,280,256,325,321,338,296,326,314,313,324,284,273,293,292,394,270,315,334,388,311,294,329,287,325,297,311,339,338,312,285,237,250,287,320,344,349,343,304,278,558,256,263,216,250,213,204,222,212,253,263,275,288,280,276,278,266,320,289,331,331,302,319,294,272,309,288,283,265,252,240,285,290,291,248,254,251,848,261,265,148,136,203,198,172,198,184,210,217,603,322,262,187,191,187,155,182,201,205,223,204,215,256,229,247,229,278,287,323,332,276,350,287,284,302,310,253,299,354,311,274,278,298,346,293,247,276,351,316,362,264,275,266,289,275,329,328,276,287,896,255,282,182,218,206,210,259,259,261,249,288,279,333,285,265,255,288,311,360,385,316,344,300,334,362,299,274,267,269,263,246,315,297,297,295,272,756,372,316,217,206,195,229,254,203,285,276,269,277,262,300,286,329,299,331,320,297,300,354,270,240,308,339,294,326,293,301,265,266,318,278,295,300,301,349,290,285,273,291,283,295,317,386,328,320,303,290,297,297,331,221,257,355,293,297,279,291,229,659,296,270,221,205,253,206,205,214,253,242,235,250,309,258,335,294,276,269,372,358,307,298,292,299,376,248,302,332,259,259,247,269,310,270,259,254,289,433,265,267,165,173,196,233,192,205,218,256,243,937,258,253,225,171,231,227,187,240,259,190,232,262,347,274,286,260,249,247,290,304,303,248,310,263,338,241,213,288,315,322,255,262,249,258,275,237,285,319,303,249,264,248,289,266,277,315,266,304,279,477,271,238,198,186,205,193,184,250,243,283,232,311,253,356,247,328,307,292,300,317,332,268,303,314,330,289,306,255,271,243,235,293,268,255,270,255,770,265,270,193,207,224,235,241,236,238,216,264,729,312,290,227,189,273,218,283,256,267,280,315,290,323,333,323,347,380,371,310,354,350,358,300,361,396,328,313,264,340,325,346,371,325,344,341,319,372,352,336,313,290,290,319,333,284,342,353,294,314,844,286,326,271,240,215,225,214,240,249,326,303,302,317,326,275,366,390,370,338,321,343,371,333,297,465,288,353,330,321,287,341,350,354,308,299,308,835,291,305,197,206,205,247,236,263,276,333,291,305,461,273,217,193,239,231,245,191,249,243,233,258,287,304,283,262,253,269,321,343,320,325,324,322,314,359,239,263,313,344,303,286,262,298,314,321,309,303,281,278,300,261,258,283,258,328,249,243,228,753,280,243,192,170,189,179,223,192,197,219,224,210,335,281,255,316,309,278,302,285,310,292,334,316,357,273,300,324,231,268,259,345,306,335,284,299,388,466,332,279,213,230,215,222,215,224,229,235,250,264,279,316,300,279,281,295,275,273,284,305,293,276,302,277,303,285,350,353,284,294,308,297,259,293,347,264,262,346,344,378,331,276,362,303,342,311,332,265,366,298,301,303,321,364,330,286,343,305,390,496,305,257,235,237,235,218,227,241,253,250,246,334,383,292,280,332,334,338,351,375,333,364,349,352,360,360,302,273,272,308,308,349,311,261,236,288,704,245,242,201,185,232,231,239,252,227,249,228,347,343,309,285,277,283,298,277,254,303,247,241,291,244,250,250,252,211,239,289,276,257,290,293,266,378,296,259,278,356,351,329,277,281,267,257,281,287,300,311,266,285,242,273,288,215,307,280,256,281,771,332,285,216,227,221,220,207,262,283,263,253,328,332,327,248,355,330,306,362,397,322,305,307,305,322,302,287,267,270,255,292,339,349,294,308,283,937,318,280,222,220,245,253,260,273,290,261,266,342,389,290,260,253,237,272,279,241,285,234,273,258,308,302,284,322,366,323,297,285,262,295,286,327,292,331,327,323,306,298,338,315,334,316,322,272,306,281,262,316,243,263,267,319,260,247,303,250,290,930,269,281,194,209,203,167,245,241,254,277,264,272,338,232,306,252,354,325,352,379,341,291,302,255,285,275,322,257,231,252,307,253,264,295,253,263,465,371,273,204,185,224,188,190,171,256,214,232,271,759,231,233,196,223,176,180,177,228,228,228,229,237,337,227,246,244,278,320,282,245,292,264,300,297,376,273,339,304,299,299,288,289,294,358,335,253,339,356,313,271,319,269,302,310,268,306,298,250,343,406,333,231,210,216,189,173,186,210,251,254,249,310,232,368,294,373,360,344,270,384,318,345,309,272,303,272,294,240,254,250,298,272,340,262,258,270,632,256,287,222,222,237,225,258,322,300,314,260,286,267,335,310,302,311,308,314,306,254,266,319,280,305,296,302,327,318,310,308,287,323,336,266,297,448,312,334,346,311,290,338,353,324,337,293,318,345,282,263,234,241,269,239,269,268,266,262,288,219,694,255,246,192,174,225,218,225,249,223,249,258,276,313,260,286,258,282,273,322,389,293,305,266,266,378,297,317,273,262,206,243,266,288,243,229,246,935,270,271,190,193,225,239,224,242,202,204,240,428,354,261,195,175,192,206,191,189,211,174,220,219,277,225,247,275,204,234,304,252,237,230,278,225,262,257,291,288,283,281,259,252,277,234,270,219,257,292,269,245,245,248,271,251,279,334,267,255,250,337,293,270,264,256,253,245,240,300,267,228,241,265,317,332,253,244,257,259,309,264,296,286,269,268,267,229,236,259,247,234,249,246,280,267,242,236,254,274,270,291,264,268,312,226,216,242,227,240,238,241,206,224,239,223,228,218,208,230,233,225,187,222,207,227,201,225,222,225,217,208,220,208,186,203,204,197,180,194,193,205,187,197,186,209,191,198,189,226,205,205,198,208,183,199,191,194,192,167,190,176,181,201,186,193,182,183,200,196,179,178,181,184,170,167,182,174,164,168,181,162,179,176,177,168,177,173,171,182,177,175,172,172,180,183,159,160,168,162,178,170,167,160,169,160,162,163,174,176,164,169,170,161,160,170,167,170,157,152,156,158,156,162,158,157,154,160,147,151,155,151,153,151,151,161,155,159,157,159,168,152,153,155,156,157,150,153,151,146,154,154,146,155,147,150,147,150,146,148,150,152,155,148,145,146,142,147,153,150,147,146,154,148,151,148,151,143,147,147,145,146,147,148,156,146,147,147,141,147,149,147,152,144,143,142,144,149,149,145,147,145,144,146,144,148,144,141,138,143,145,142,144,137,141,142,143,143,140,138,140,140,139,139,140,139,143,140,143,142,145,143,140,145,147,143,140,141,137,139,144,135,136,143,143,141,137,139,136,143,136,137,140,140,141,140,139,138,139,137,140,139,138,138,139,138,140,140,140,139,138,136,134,137,139,136,135,137,135,135,140,142,138,138,138,135,138,135,137,137,138,136,138,135,137,137,136,136,135,137,136,134,136,135,137,137,138,135,134,137,133,135,135,134,136,134,133,136,135,137,135,136,134,135,134,133,134,134,135,134,135,135,135,133,133,134,132,135,133,133,134,134,133,134,133,132,135,135,134,133,134,133,133,135,133,134,134,134,131,132,132,135,132,133,132,133,132,135,134,133,134,133,133,131,132,132,132,132,131,132,133,132,131,132,131,131,130,131,132,132,133,132,132,133,131,132,131,131,130,130,131,131,131,133,132,131,131,131,130,131,131,131,131,131,131,130,131,130,131,131,131,131,132,131,132,132,130,131,131,130,130,131,131,132,131,132,131,131,130,130,131,130,131,131,130,131,130,130,131,130,131,131,130,130,130,130,131,130,130,130,130,131,132,130,130,130,130,130,130,130,130,130,130,130,130,130,130,131,131,130,130,130,131,130,130,130,130,130,130,130,130,130,130,130,130,130,129,130,129,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,129,130,130,129,130,129,130,130,130,130,130,130,130,130,130,130,130,129,129,129,129,129,130,129,130,129,129,129,130,129,130,130,130,129,129,129,130,129,129,130,129,130,129,129,129,130,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129],[282,287,285,286,290,283,284,283,283,284,283,284,286,283,282,284,283,283,284,283,288,284,286,286,282,273,279,287,284,274,270,272,276,276,274,276,282,282,282,283,280,281,282,288,285,283,288,289,280,288,278,272,277,276,285,286,278,275,280,281,288,286,283,281,277,287,282,280,275,277,283,288,290,277,275,268,284,287,280,284,281,286,280,281,284,279,276,272,273,277,280,276,284,283,273,274,277,271,277,285,279,274,286,282,279,274,279,276,277,277,269,271,290,285,281,277,281,283,283,294,278,275,283,285,272,281,279,273,288,278,283,285,286,273,278,278,281,280,282,278,283,274,279,273,270,291,275,284,279,305,288,277,283,280,285,282,286,274,285,283,282,287,284,283,281,282,282,284,278,282,281,267,281,283,288,279,273,272,283,267,278,271,269,276,276,277,279,276,273,287,282,274,287,279,285,275,294,288,282,281,279,285,278,274,275,284,289,281,270,283,283,290,283,261,292,270,297,268,310,302,288,274,297,291,285,272,270,265,287,307,295,292,282,317,313,276,292,298,270,271,297,279,289,287,344,295,296,289,309,294,263,266,295,280,316,325,291,303,299,310,286,303,277,304,282,298,293,292,295,307,315,292,294,290,291,256,269,285,294,290,328,299,296,298,294,284,302,262,297,289,288,307,292,291,299,320,302,306,286,314,285,295,287,270,292,270,283,270,283,295,285,275,273,260,281,282,304,306,302,291,282,301,279,277,286,287,257,288,288,267,285,334,285,298,293,299,283,254,255,274,288,283,297,302,261,286,319,304,283,268,310,275,269,291,284,290,294,325,290,297,279,298,258,268,270,291,293,301,306,268,292,284,283,281,246,275,278,260,272,284,287,271,306,311,272,273,299,276,252,270,273,298,305,305,298,280,305,296,287,301,287,311,276,279,292,288,277,276,280,276,276,276,274,286,279,270,280,280,273,288,288,290,257,269,266,286,281,285,274,289,285,247,276,302,280,286,259,294,292,282,324,297,296,298,326,277,295,285,300,259,286,287,291,277,296,304,276,291,273,300,286,257,259,291,265,302,306,267,282,297,293,267,282,274,274,287,294,290,285,284,304,303,297,289,285,294,262,251,257,305,283,308,291,293,286,305,306,253,275,283,276,283,280,277,254,270,259,265,274,287,289,280,296,284,277,269,301,302,266,292,287,271,266,277,269,274,281,310,310,269,280,306,294,288,289,285,284,267,302,280,290,265,299,266,286,289,311,276,272,276,285,272,304,308,272,284,292,300,270,285,273,296,261,289,295,270,279,300,279,288,293,275,297,255,269,260,279,273,296,286,277,282,292,290,286,256,274,270,274,298,291,281,291,331,300,287,275,305,282,283,291,290,275,271,277,277,267,276,284,268,280,272,270,279,289,307,279,291,293,305,284,281,283,289,257,300,289,282,273,318,303,287,297,305,294,266,270,275,307,274,311,301,274,281,301,283,295,261,292,289,301,316,288,285,289,317,300,303,292,311,253,283,287,304,278,278,319,283,294,285,294,273,263,263,290,276,307,303,297,287,297,297,284,293,283,268,276,300,280,292,264,309,301,276,301,304,291,275,294,283,268,276,272,274,277,276,272,272,285,279,283,280,288,307,289,300,301,290,292,291,267,299,249,263,280,311,273,303,310,281,289,294,292,277,263,270,269,276,301,290,279,285,303,316,296,296,295,270,282,282,285,299,275,313,306,296,299,280,268,266,263,282,282,292,320,276,290,276,278,269,290,273,281,276,301,294,273,266,292,299,289,288,294,288,249,272,263,287,279,309,303,286,272,310,274,189,190,228,245,239,235,285,263,233,194,222,225,217,274,271,204,261,293,251,230,211,226,245,238,236,223,227,275,231,242,195,226,245,226,211,212,234,203,216,229,243,289,254,219,237,249,231,235,224,229,206,205,250,243,280,252,249,216,206,211,221,214,198,193,236,230,271,249,231,202,223,207,223,254,239,194,236,244,248,242,269,235,254,206,242,211,256,196,184,247,285,256,229,246,251,235,231,208,210,215,204,240,247,256,216,232,252,269,230,251,248,247,245,227,210,236,233,234,256,254,254,231,237,260,217,289,303,283,297,312,279,273,268,250,246,218,246,235,263,225,239,226,186,199,229,246,263,272,263,299,226,324,254,297,343,314,281,268,287,268,295,268,229,246,237,236,229,216,250,349,285,262,284,252,225,239,252,294,309,302,292,277,300,289,265,285,281,286,272,352,236,291,276,225,250,252,254,278,175,348,239,231,211,221,182,196,212,234,233,209,236,280,277,312,227,231,256,271,279,239,312,251,311,316,309,259,295,321,292,297,265,246,314,236,268,242,243,242,247,256,236,288,293,220,282,246,243,267,267,262,238,205,205,219,235,246,220,249,241,246,257,346,235,243,265,329,268,261,258,287,267,263,254,325,308,269,256,273,246,231,269,257,260,238,276,41,363,225,225,233,231,214,225,241,235,264,248,260,696,258,256,212,237,226,218,226,236,247,254,259,252,296,263,278,276,307,287,254,307,290,306,276,283,374,230,267,336,393,268,296,279,291,283,273,287,254,269,363,266,283,270,290,273,297,291,282,280,83,430,242,218,217,202,231,235,235,243,265,255,259,328,276,243,359,342,291,251,305,294,280,289,284,275,293,251,281,293,285,286,290,279,327,276,294,259,605,271,241,224,221,242,236,235,249,261,268,260,275,296,331,311,348,315,317,289,311,295,285,286,282,282,278,296,318,303,276,295,311,365,300,302,302,365,292,297,371,349,327,273,282,338,278,323,288,268,278,334,298,272,286,277,294,287,295,277,283,288,668,266,266,214,220,242,241,248,249,256,263,266,274,271,285,242,331,303,313,306,308,274,284,271,285,325,359,309,286,296,310,293,290,308,289,295,284,526,255,256,231,251,250,246,231,251,247,263,269,31,424,260,230,248,239,247,248,245,252,263,266,272,267,269,314,280,266,319,300,326,286,321,304,340,306,335,299,304,334,324,333,292,258,334,264,263,275,242,286,294,276,262,288,297,253,311,296,253,262,404,286,250,212,244,235,238,235,250,260,262,262,260,369,278,258,328,347,287,319,286,309,275,305,267,313,297,277,275,280,274,250,287,287,272,277,272,41,336,243,242,231,221,232,240,260,258,261,268,267,668,271,263,235,245,257,235,245,250,262,266,270,257,323,301,276,329,302,331,287,323,308,367,298,302,378,232,261,310,410,273,265,277,281,284,283,292,268,278,341,276,294,287,308,312,301,306,278,280,32,389,237,216,209,219,224,247,240,243,262,265,271,340,251,264,361,340,297,265,308,300,296,315,281,288,301,278,272,280,288,275,312,275,318,288,294,230,550,282,241,219,238,247,244,247,246,257,255,266,476,276,262,232,240,249,248,228,232,243,264,264,247,303,258,295,306,284,262,295,283,350,302,322,315,356,258,269,398,317,324,274,274,333,296,318,273,280,294,339,273,295,284,261,279,294,279,293,283,276,606,249,245,198,211,232,231,239,251,258,261,270,304,308,303,273,343,322,314,304,308,291,286,280,273,292,330,296,309,287,303,277,284,303,297,306,293,625,249,258,227,236,248,243,245,255,258,269,268,277,281,274,280,277,271,273,273,264,267,262,264,262,272,292,308,314,253,289,290,349,303,281,287,351,352,331,334,281,395,305,348,282,256,334,280,252,264,257,293,260,267,283,306,304,268,309,296,279,277,530,261,260,206,245,237,241,237,248,243,252,266,265,344,291,265,345,349,303,314,303,277,297,273,286,298,280,279,262,280,286,246,287,309,306,277,277,104,296,251,242,238,227,238,244,243,250,262,263,265,265,263,261,288,276,279,264,254,267,280,276,274,274,269,273,271,283,283,271,262,263,261,273,274,270,356,248,270,320,403,308,263,269,302,277,289,292,254,254,322,294,290,274,301,289,284,306,272,278,47,347,233,234,235,238,229,249,247,262,266,263,269,373,266,277,352,310,294,260,321,287,289,290,308,309,312,262,254,291,278,298,323,276,314,287,300,163,491,264,239,232,232,248,249,254,254,262,264,274,608,282,269,235,247,248,251,245,250,262,267,269,266,288,301,285,263,284,285,300,280,294,287,293,310,378,260,258,402,327,319,279,266,322,314,308,291,262,293,366,278,288,272,261,294,308,267,297,278,236,539,247,235,209,204,232,237,228,241,243,253,246,297,301,297,273,315,317,302,301,314,289,280,267,277,285,316,295,300,282,281,279,267,312,304,300,283,675,242,249,223,228,245,226,241,250,254,257,256,58,339,265,231,240,215,234,237,247,242,251,258,262,302,300,273,290,328,293,295,287,295,296,283,280,332,297,293,279,354,330,339,282,271,320,300,276,285,269,300,292,275,291,296,314,261,327,288,280,282,647,244,256,205,235,252,232,229,232,246,255,264,269,318,275,246,356,349,295,292,284,266,286,280,283,318,301,275,278,285,289,261,273,326,288,277,288,193,286,249,231,240,237,235,231,236,244,255,263,265,266,248,275,280,270,260,266,248,250,270,256,249,255,263,326,273,290,291,330,309,272,304,329,328,288,386,271,313,315,376,296,273,266,305,279,285,290,238,248,271,298,275,284,304,274,298,309,273,267,100,319,234,222,246,230,228,234,240,240,249,254,269,373,261,271,329,333,309,265,315,290,288,307,316,301,297,269,268,286,284,263,331,261,310,275,281,89,446,257,223,221,231,229,225,228,247,239,251,253,255,261,284,298,275,277,268,258,264,265,271,272,270,269,255,272,275,284,275,266,266,261,271,271,267,366,231,246,380,355,299,279,281,348,292,303,291,268,289,343,272,280,274,260,305,295,273,279,271,152,498,256,222,209,211,235,240,239,251,255,262,260,311,300,281,311,322,310,281,292,299,298,295,266,281,268,287,293,303,292,282,271,280,308,303,288,290,687,251,252,217,231,252,239,245,246,259,262,265,277,316,336,331,319,299,322,310,311,301,296,299,314,268,292,301,331,282,292,313,338,353,283,317,327,376,286,342,304,372,341,293,297,297,302,298,283,282,290,290,268,275,307,293,298,278,327,296,280,279,700,227,250,198,222,225,231,246,247,258,259,272,275,287,287,254,342,312,312,315,333,267,291,291,284,331,327,284,276,297,298,284,279,327,285,285,274,345,276,254,233,246,244,244,237,250,254,264,264,114,497,272,243,249,237,247,249,244,262,262,266,272,273,285,322,254,286,311,319,296,287,342,322,357,312,366,284,284,350,364,321,271,269,329,288,277,264,244,258,282,269,259,278,288,254,284,299,274,267,208,294,245,222,250,241,238,232,251,251,256,259,257,368,266,272,307,343,307,294,291,289,291,294,282,316,315,276,261,277,278,267,308,277,273,281,278,37,401,246,220,236,237,235,242,241,253,253,255,270,285,322,297,331,309,342,305,284,300,326,287,290,246,318,276,297,332,259,298,338,274,310,345,313,308,426,311,259,378,320,332,268,284,284,263,268,306,293,340,284,322,273,280,294,290,313,304,280,264,101,418,253,215,215,221,232,230,234,243,244,256,247,308,278,301,368,310,286,303,276,310,297,257,274,269,285,330,323,262,271,252,285,300,288,317,279,267,629,241,253,218,228,245,222,240,232,250,250,271,272,297,255,246,248,244,235,238,238,238,249,263,248,292,295,265,271,254,285,328,304,292,277,325,272,289,265,256,332,316,312,273,270,268,286,261,254,276,289,277,266,281,258,273,294,277,359,276,295,283,676,253,260,195,232,233,230,242,240,256,254,272,258,294,263,350,258,334,285,301,292,298,258,266,284,296,315,291,280,271,255,267,290,290,251,256,271,473,255,227,211,218,221,227,215,248,222,249,242,63,344,203,214,190,200,190,206,218,241,230,231,247,279,244,253,308,307,259,302,305,307,292,307,308,262,287,289,321,273,278,254,329,305,261,286,282,282,262,266,269,285,283,297,305,296,249,291,297,323,301,301,324,298,307,271,267,275,270,266,255,261,268,246,255,253,275,285,291,293,311,287,292,288,294,279,289,300,288,280,276,310,271,283,295,294,294,284,274,295,319,280,276,279,266,264,252,284,280,267,265,285,305,281,300,281,263,310,277,271,248,248,270,261,269,257,256,266,264,305,285,283,270,278,276,293,287,270,266,286,238,261,253,280,271,276,276,276,280,297,301,271,296,267,251,281,271,237,259,269,255,236,280,296,291,268,277,295,276,278,301,257,255,251,304,296,278,257,296,297,279,300,281,284,299,306,279,301,267,247,234,276,245,261,256,272,255,253,269,292,266,268,303,284,289,266,268,271,268,227,254,227,269,275,263,273,262,272,298,284,293,269,255,263,255,280,272,282,261,271,284,263,269,267,276,264,278,289,259,256,283,249,250,291,266,267,257,271,272,281,260,273,287,281,296,289,254,257,255,253,270,259,254,262,284,283,291,283,282,274,278,318,295,280,290,292,263,287,276,274,246,266,280,287,279,270,276,279,284,271,287,263,274,279,262,279,267,250,249,277,271,268,276,282,275,290,295,269,285,269,271,260,293,281,252,251,279,266,267,281,286,294,271,284,262,262,260,297,298,270,259,276,275,289,271,268,277,268,278,263,270,270,251,264,280,256,260,259,270,272,292,272,261,271,279,286,284,274,277,269,273,275,248,252,258,276,285,293,277,263,261,274,275,263,272,266,265,273,259,276,261,268,275,264,269,278,269,255,263,249,278,265,265,254,275,263,264,266,262,282,276,265,283,264,282,280,272,255,277,275,270,255,259,256,256,256,267,270,273,259,260,269,261,286,268,253,247,254,258,262,268,264,270,260,248,269,287,273,255,279,268,249,253,272,260,250,263,252,255,256,264,271,251,277,268,249,249,257,267,258,257,273,281,269,255,267,263,274,289,271,297,282,272,285,270,274,271,268,276,275,261,285,296,268,269,276,262,275,273,266,287,261,280,268,275,272,273,280,276,267,265,261,288,264,277,279,275,277,270,243,265,266,252,240,244,251,252,229,258,259,260,266,258,243,230,267,239,231,238,228,233,247,247,231,231,241,225,224,261,222,226,241,246,247,265,275,229,238,254,220,221,221,242,239,227,225,238,258,268,239,223,218,225,214,203,238,220,216,223,240,235,259,264,261,267,266,259,251,268,245,259,259,249,230,237,232,223,235,246,233,249,257,258,243,246,236,227,231,270,260,263,284,252,251,270,264,255,244,254,263,250,245,248,270,265,272,249,263,265,241,270,261,259,263,268,235,254,262,246,253,235,264,241,241,261,261,255,275,259,276,250,262,279,266,278,261,274,256,249,259,268,269,273,273,253,249,263,246,261,250,257,265,280,280,271,257,266,266,280,258,259,266,277,272,269,279,257,260,260,264,272,264,248,266,262,254,259,250,265,266,263,269,257,267,266,262,274,264,267,273,267,277,268,272,278,272,291,270,270,288,269,294,271,266,294,262,265,262,274,278,266,260,263,272,263,283,262,271,269,267,260,276,261,251,281,253,268,286,264,280,278,274,277,284,269,277,268,275,254,273,297,274,277,288,274,273,273,287,284,267,261,270,269,259,282,271,277,272,260,303,275,265,291,278,263,279,266,254,248,258,269,266,261,270,269,264,247,271,279,276,278,268,272,272,260,289,258,271,277,278,271,268,294,272,270,274,262,290,268,275,284,259,270,274,272,268,275,259,273,243,260,265,258,250,270,257,255,271,253,259,257,247,256,252,253,261,261,252,272,275,258,260,258,262,242,255,251,255,263,275,267,258,245,252,244,234,208,222,201,226,237,235,244,246,241,250,259,269,253,250,252,246,268,274,271,266,251,287,248,257,228,245,246,236,215,218,230,243,250,269,243,266,242,227,261,234,267,251,257,237,235,246,220,252,220,256,264,257,244,234,210,235,231,208,221,243,248,220,222,244,254,244,244,250,238,206,232,224,242,231,237,242,255,237,224,249,221,245,242,251,242,227,223,248,249,237,258,228,250,257,256,264,253,231,250,279,251,241,242,240,238,255,248,246,233,247,263,210,208,242,244,245,246,249,224,247,226,252,237,223,219,240,233,244,226,221,233,234,232,227,247,246,223,227,220,239,243,223,229,235,241,243,243,244,250,236,255,262,249,253,260,256,260,246,252,244,245,229,238,239,243,238,240,248,248,249,256,262,275,251,263,234,262,256,259,252,254,252,247,259,246,236,254,250,253,246,262,273,259,275,237,253,251,252,266,248,253,245,248,247,252,242,243,258,253,272,258,263,259,247,280,262,244,258,249,250,270,266,278,252,267,272,260,265,263,250,242,266,270,253,261,267,276,262,266,272,271,260,259,258,270,257,259,232,217,251,258,268,275,264,261,260,249,242,255,264,261,263,250,250,246,234,264,259,261,273,266,262,265,275,256,260,261,272,269,266,257,265,250,265,250,262,253,259,237,265,261,255,262,257,267,265,278,242,239,250,261,259,256,280,255,264,257,262,268,253,250,249,268,264,268,274,268,258,258,263,273,275,274,256,260,273,252,262,249,268,262,260,272,263,277,275,268,272,255,268,259,266,263,255,268,277,256,259,284,264,264,268,267,261,252,260,263,282,270,258,252,245,245,251,244,259,252,255,273,262,258,239,256,244,259,260,257,252,260,241,262,250,269,258,256,255,253,267,273,259,252,270,259,260,259,258,242,232,219,238,230,218,240,201,245,247,216,239,224,250,237,226,223,232,228,235,238,256,259,231,214,220,217,237,256,251,237,241,221,237,261,229,239,224,236,250,246,259,244,249,261,267,252,240,261,268,252,198,201,207,209,218,203,259,229,219,217,249,269,246,213,236,230,236,237,221,218,232,202,232,218,227,217,216,218,201,228,213,200,239,232,213,214,213,183,196,195,227,209,206,206,230,246,261,223,274,238,244,228,239,222,240,218,215,248,250,243,217,218,211,223,258,230,269,231,234,235,226,246,248,247,255,241,222,245,223,201,217,205,210,223,230,228,232,223,241,235,224,235,249,225,235,267,256,240,242,235,228,189,215,198,211,221,232,247,223,204,247,238,233,244,223,226,246,239,240,228,230,230,236,228,221,210,225,249,214,202,213,230,228,241,241,252,254,253,268,264,267,278,256,283,263,232,258,251,262,233,213,210,235,236,222,198,223,254,237,242,254,226,219,220,217,228,205,222,246,249,231,264,199,224,221,218,240,232,233,241,228,248,226,223,220,225,203,204,202,200,211,206,222,212,239,205,222,214,220,218,231,215,242,235,223,258,204,204,228,238,253,242,250,235,227,251,240,237,238,239,233,243,233,227,240,247,236,253,251,252,249,235,218,232,220,230,212,202,238,223,255,226,249,252,209,229,225,236,255,258,242,258,228,244,229,210,250,212,211,191,214,228,217,236,257,237,220,208,212,216,241,236,222,223,229,241,226,223,218,239,214,218,227,206,223,246,211,202,224,208,209,204,192,200,188,164,149,288,157,174,162,168,188,172,151,168,198,203,196,180,190,180,179,166,164,212,163,184,165,179,190,161,190,174,167,179,164,190,162,133,147,174,156,181,185,215,160,163,169,149,205,173,196,226,180,125,137,139,132,153,118,196,167,200,196,199,201,176,184,173,192,155,173,153,145,185,178,222,189,150,208,189,217,205,186,176,192,128,138,140,177,193,136,175,160,180,168,173,167,161,173,146,108,122,106,129,114,149,168,158,128,124,162,176,168,154,165,165,124,159,141,147,162,138,170,192,170,171,174,154,210,172,185,187,192,184,196,200,201,184,189,196,190,191,188,208,237,223,218,208,221,186,201,184,191,238,206,203,225,214,183,186,198,184,211,200,227,213,213,209,197,205,197,195,205,207,193,211,182,172,170,179,205,197,160,177,191,200,218,210,203,186,181,167,170,151,170,177,202,204,216,204,206,218,216,193,209,197,207,193,201,191,198,173,183,180,181,218,206,194,199,168,195,163,207,202,185,178,147,114,161,183,191,185,177,153,148,200,181,176,200,182,182,174,164,164,145,144,197,197,197,207,211,192,187,204,188,166,169,203,189,184,199,208,171,185,150,182,180,186,164,147,157,205,213,202,203,175,170,182,169,195,183,227,183,168,198,198,199,205,236,229,211,184,187,203,216,213,222,229,196,205,215,201,145,161,179,186,177,198,205,197,174,174,185,212,187,192,208,189,204,186,201,211,190,199,196,180,178,151,170,168,192,179,193,198,215,203,226,221,203,208,207,219,219,234,205,215,234,235,187,227,209,180,249,207,166,137,159,136,164,186,175,163,176,206,186,171,174,188,200,197,210,194,159,186,172,206,161,192,198,182,163,167,189,153,136,134,164,195,199,165,160,187,202,201,205,193,181,162,167,174,200,196,183,152,202,200,203,189,205,195,200,187,176,184,197,215,158,143,188,233,195,220,211,209,185,156,187,155,184,183,154,169,189,194,221,178,197,202,165,175,183,172,200,170,180,163,164,204,211,220,183,186,195,175,189,172,178,201,165,190,214,207,202,231,212,183,189,161,136,182,200,211,216,209,209,195,221,242,200,182,209,180,234,205,185,228,232,222,220,193,209,221,246,218,209,214,199,212,212,222,211,208,193,178,216,197,189,165,135,190,145,160,208,223,203,181,173,179,167,173,129,191,199,227,155,195,177,146,177,173,142,104,162,202,175,200,162,171,175,197,155,179,194,156,193,147,154,136,191,160,148,153,170,163,159,201,181,179,179,195,181,161,160,248,182,181,202,223,180,170,216,210,227,168,163,183,171,184,187,192,183,196,136,202,214,236,180,212,186,160,174,161,218,207,203,171,164,180,166,195,179,141,162,154,164,138,184,191,178,159,176,150,199,198,194,181,195,191,170,192,166,183,184,203,215,197,180,174,184,210,189,211,154,205,186,211,206,217,209,218,234,238,238,244,234,231,235,269,242,233,233,195,168,192,182,206,184,197,191,243,219,222,202,200,174,223,215,212,209,231,238,204,214,230,216,203,218,221,213,216,156,184,212,200,213,217,224,216,222,204,182,203,217,219,242,213,232,216,226,230,221,246,212,237,213,237,234,222,229,233,214,215,236,248,220,239,229,223,219,201,208,215,211,248,223,214,232,222,225,213,215,193,211,208,220,215,221,220,234,267,276,223,253,213,232,215,234,219,231,231,225,218,223,247,212,250,254,233,243,230,227,216,233,225,229,222,236,235,239,236,217,228,245,217,224,225,220,225,235,228,224,210,238,248,211,201,185,185,207,230,232,228,234,203,188,180,174,171,186,644,196,171,168,145,192,157,152,148,147,188,185,222,202,192,217,187,187,158,214,177,170,181,181,213,160,218,205,199,224,193,187,165,187,201,214,156,201,209,196,189,250,152,189,209,212,151,235,213,221,203,202,174,141,185,169,210,197,218,195,246,240,208,171,195,189,236,223,145,194,204,184,193,236,171,215,204,175,208,178,184,186,212,158,197,172,181,155,150,229,183,211,226,208,197,163,148,185,159,182,219,221,209,200,164,180,206,167,173,205,212,209,179,199,168,170,210,238,246,206,234,213,209,206,226,220,230,232,249,270,215,236,222,258,209,217,218,233,182,241,206,216,226,238,251,232,216,234,219,229,234,207,233,230,255,222,274,215,257,296,208,232,236,220,258,260,254,242,249,282,213,199,196,222,248,209,220,237,245,251,207,204,199,202,226,209,219,194,205,201,208,253,256,221,248,159,190,209,197,216,192,203,231,213,221,218,200,188,178,178,209,165,193,148,185,170,200,182,201,186,208,203,187,187,170,199,207,205,169,160,215,225,186,238,213,210,260,203,185,216,196,239,236,195,179,233,227,189,177,222,214,204,220,168,211,187,251,214,192,209,189,231,202,150,183,165,190,215,225,202,236,248,188,251,209,252,212,215,246,220,180,192,246,214,239,222,194,201,204,228,234,218,242,238,224,224,269,248,246,151,191,173,144,163,199,198,182,224,232,220,222,197,209,221,205,219,218,218,239,196,247,212,228,233,228,202,239,208,243,231,217,202,215,235,202,215,222,251,243,233,283,247,227,236,219,209,222,209,233,195,175,179,197,182,221,194,207,196,201,194,209,195,216,212,175,182,169,175,177,182,170,201,208,208,180,198,207,200,175,176,148,136,176,187,214,224,158,183,198,205,231,199,202,187,158,217,154,168,209,243,174,154,147,153,214,200,191,176,168,202,204,205,122,144,162,207,211,216,229,209,183,158,142,166,203,216,197,146,169,201,198,198,177,186,212,232,215,173,195,186,133,244,202,208,214,210,242,243,220,198,203,196,204,225,162,202,192,175,169,169,209,184,173,188,242,221,194,192,198,210,205,196,198,204,238,207,204,222,247,173,194,174,229,213,239,215,209,212,211,250,250,220,247,214,211,195,202,230,265,224,214,206,227,143,218,208,238,233,223,210,190,233,223,200,225,188,174,227,187,197,175,199,217,208,209,201,204,191,187,170,141,156,166,209,193,200,218,189,170,206,216,205,227,210,204,218,202,242,188,237,218,223,218,205,214,213,236,206,189,201,220,201,241,217,211,233,194,233,203,195,226,224,220,203,252,240,248,245,200,270,223,222,160,180,215,149,186,204,219,207,228,234,207,194,203,210,215,228,236,225,210,198,201,214,185,177,196,192,212,210,210,174,190,177,193,187,210,234,238,244,202,196,196,224,215,244,233,204,230,234,227,229,219,227,231,208,219,205,230,275,226,212,188,209,244,218,207,221,181,196,244,207,229,199,237,231,222,237,234,228,227,262,218,209,234,245,212,228,245,243,210,222,229,248,262,218,242,205,232,225,250,257,260,240,271,224,237,274,248,221,222,243,251,219,209,217,211,199,207,202,197,215,285,249,214,197,248,203,231,210,251,235,236,270,233,226,218,269,270,235,219,233,232,247,282,246,279,241,252,254,240,242,209,265,242,272,259,255,276,307,248,248,282,247,214,252,282,225,186,249,197,238,202,256,251,249,238,235,275,250,273,225,257,242,238,258,249,279,224,237,249,238,226,227,248,279,243,230,236,259,262,229,243,230,266,249,248,209,237,252,247,187,200,162,116,316,202,177,129,149,178,177,164,158,208,184,198,191,194,181,193,173,194,178,190,166,184,182,152,158,209,191,214,205,236,231,175,203,169,200,219,191,210,185,181,160,219,175,171,199,174,174,177,162,155,126,207,154,206,139,169,157,228,232,166,181,155,169,196,162,225,228,216,217,157,169,192,197,147,253,219,237,243,180,188,160,184,194,212,171,126,136,138,154,151,218,196,189,210,172,186,163,165,182,182,205,184,178,174,163,203,177,201,155,160,148,161,162,197,190,209,208,218,229,236,204,222,204,183,189,180,193,244,258,208,218,214,261,180,189,230,254,205,265,215,220,195,228,223,176,252,198,236,215,228,201,256,200,225,228,255,248,232,236,253,252,254,230,227,248,226,286,229,240,266,207,239,236,273,230,229,223,217,250,241,214,249,220,205,213,231,213,185,203,239,251,225,234,232,240,219,212,154,210,201,240,213,188,220,180,215,225,230,215,203,197,185,198,203,169,202,181,223,196,166,233,216,219,210,176,189,182,189,205,156,207,193,212,195,212,207,225,181,221,229,229,219,206,181,189,212,221,192,196,179,159,172,208,207,203,208,197,186,225,165,188,179,248,206,217,180,186,205,217,208,193,196,151,173,225,199,190,221,189,211,172,195,165,190,213,198,198,237,224,182,240,211,230,199,238,247,229,225,176,151,221,157,168,141,194,153,165,149,177,181,230,227,192,184,183,186,211,197,214,200,232,177,193,184,208,186,212,171,182,139,200,174,244,191,228,240,215,230,265,253,243,255,222,217,228,214,196,202,157,183,143,190,199,176,174,202,203,171,224,158,221,182,161,141,116,187,193,198,154,196,186,160,203,199,173,204,207,257,214,157,155,165,172,222,200,200,211,182,237,221,181,193,209,156,233,147,142,171,175,202,211,158,130,155,154,145,182,149,144,201,154,170,190,186,209,174,212,196,203,199,180,161,181,168,193,154,190,154,202,207,133,178,161,183,199,181,140,139,169,216,175,222,220,209,248,177,196,217,174,163,168,181,174,151,191,173,166,181,200,193,199,173,208,192,185,252,179,213,226,220,189,218,196,250,202,198,206,202,183,205,168,201,186,198,212,217,229,206,214,193,225,206,199,251,218,232,217,216,219,211,194,199,165,212,141,178,208,235,186,257,207,231,232,195,166,215,171,153,166,148,191,210,195,230,216,192,159,222,220,225,194,201,198,152,185,184,205,201,236,181,238,186,207,220,220,192,229,215,216,192,221,221,218,211,172,179,188,192,214,167,187,186,218,246,222,195,226,211,219,180,139,187,181,205,176,187,243,226,207,173,222,223,221,223,186,199,225,217,208,218,194,192,211,195,171,185,194,183,192,205,223,227,207,201,181,206,171,161,199,188,199,168,158,146,146,164,187,195,217,197,206,176,163,220,194,218,248,221,205,197,184,160,238,177,239,198,220,231,224,176,225,233,228,201,201,235,208,213,208,170,230,211,217,194,223,204,212,201,228,206,206,212,210,219,203,217,243,202,210,194,207,207,183,190,206,204,212,211,190,224,259,226,253,227,217,236,229,214,273,213,195,231,218,240,198,215,206,213,225,232,248,187,262,280,204,225,217,275,216,250,208,225,218,239,225,208,249,234,204,217,267,273,230,226,215,252,231,268,228,244,242,226,252,213,243,218,263,231,273,208,253,253,260,242,249,210,231,261,234,228,225,241,244,224,234,223,251,257,232,216,204,248,249,243,237,231,242,227,213,284,228,235,267,244,232,237,226,247,239,218,227,237,255,213,215,261,199,252,240,206,183,198,177,172,669,235,229,152,160,169,156,201,199,188,164,196,217,253,222,222,217,184,217,213,224,183,201,207,229,222,209,219,211,197,275,218,212,263,214,211,226,255,226,225,198,225,216,250,253,213,258,216,222,232,237,218,199,261,203,261,226,208,198,207,224,248,222,214,212,191,185,230,218,201,280,237,230,222,0,302,173,162,175,210,147,185,214,207,180,236,226,246,259,212,178,246,257,204,243,209,207,143,149,190,193,164,196,149,197,179,145,192,202,204,180,202,190,194,201,239,221,188,259,181,257,184,242,239,246,174,244,284,267,210,246,189,270,203,180,217,204,243,221,199,196,175,155,214,173,171,198,150,156,629,123,166,127,127,140,180,138,186,187,160,172,235,172,183,134,229,200,251,217,192,182,183,243,126,235,268,213,204,220,220,202,219,272,214,201,201,372,185,166,167,182,142,144,161,190,176,175,190,71,375,193,180,181,188,148,190,158,161,181,172,167,194,174,219,183,197,263,273,235,184,246,210,248,234,305,221,258,282,309,302,224,230,284,228,208,219,206,231,197,221,209,230,257,259,272,220,226,224,255,251,204,136,186,182,201,216,199,204,246,210,214,313,278,226,250,286,269,268,269,248,239,206,175,278,244,276,229,210,218,216,256,218,231,211,251,11,331,204,168,158,182,188,179,193,179,191,187,205,258,265,228,283,261,281,257,214,208,242,213,231,196,272,228,192,219,245,242,201,238,248,285,222,229,273,194,186,220,306,197,188,224,256,247,255,235,212,240,297,236,218,254,211,203,252,211,202,185,31,366,172,157,144,135,160,171,156,158,155,165,150,254,198,198,283,233,205,208,215,266,187,221,189,197,205,178,157,182,185,177,196,187,265,248,235,206,537,196,197,150,183,190,162,186,181,191,195,185,326,197,179,126,122,122,129,146,159,122,163,207,203,234,203,206,224,218,195,227,200,256,214,218,210,308,251,203,310,290,283,227,203,310,225,222,223,252,252,260,214,226,198,203,241,199,234,211,169,143,586,180,170,145,121,162,151,146,199,155,176,187,207,234,198,179,220,208,226,229,225,198,180,175,167,219,204,164,169,167,224,252,242,304,223,225,218,476,189,169,159,184,168,163,125,142,160,178,171,16,341,205,161,147,142,126,181,184,189,157,121,169,228,210,132,150,233,189,221,222,213,280,211,190,211,278,195,266,291,214,221,184,196,251,212,203,161,203,197,211,156,191,185,170,177,251,201,215,205,359,225,173,170,168,148,190,149,170,164,178,176,204,260,258,203,243,236,264,228,239,238,208,235,215,250,250,259,221,232,218,224,227,229,225,242,229,52,292,207,200,187,192,180,206,227,190,190,216,230,636,221,217,194,206,205,187,217,209,232,242,231,223,265,221,244,207,206,218,208,229,237,254,260,211,314,229,293,271,216,231,196,242,234,238,234,216,207,222,211,178,192,194,272,204,182,226,184,194,23,289,159,163,169,206,152,213,190,195,183,193,204,245,231,300,274,265,281,220,276,258,226,206,156,212,220,226,223,154,198,193,202,248,252,206,220,165,503,209,195,187,171,177,157,160,209,191,210,175,253,239,249,261,274,259,254,229,245,216,259,212,192,210,189,215,239,205,186,200,197,232,294,230,217,389,225,225,395,239,281,233,272,206,254,225,262,226,238,208,217,247,228,223,259,256,262,225,240,204,585,218,204,142,156,158,177,198,213,216,196,218,257,289,228,284,260,249,226,239,294,234,218,223,248,279,274,257,221,225,198,203,292,217,196,202,197,618,205,176,182,180,208,199,203,179,196,188,211,35,318,211,178,179,179,167,205,184,196,224,209,217,235,222,259,225,218,223,289,213,225,255,276,230,255,258,211,322,282,229,310,208,236,205,227,218,238,232,235,218,202,220,195,246,239,350,234,265,226,519,212,193,160,188,198,205,216,196,197,196,227,227,320,214,261,275,284,297,247,253,277,211,222,205,310,239,265,250,246,235,215,200,251,260,237,225,113,293,189,162,191,156,172,184,211,201,227,240,196,533,181,172,161,180,158,182,151,158,171,212,183,195,167,218,195,225,170,214,199,228,220,237,238,229,296,175,209,231,315,198,214,173,197,205,212,184,187,173,194,175,161,190,228,197,226,271,194,216,34,247,192,185,184,170,166,159,164,167,217,229,178,288,191,241,284,248,197,152,259,225,151,169,219,241,264,206,181,177,222,220,248,198,236,202,188,148,420,162,175,191,133,151,155,158,178,207,211,177,563,177,193,177,200,198,153,179,169,188,173,165,189,244,197,207,228,215,203,225,228,269,241,202,200,287,169,166,322,247,276,225,207,254,224,194,176,195,241,306,221,236,228,215,240,239,221,230,222,216,502,200,200,161,196,196,228,205,220,207,219,231,273,274,260,236,298,300,258,276,280,272,230,216,237,224,246,240,258,195,190,242,208,235,217,245,210,612,166,184,147,162,204,206,181,202,178,152,168,185,197,206,234,221,249,210,191,205,195,200,206,214,230,246,228,285,207,234,237,247,255,228,245,268,317,246,280,240,297,226,246,204,206,237,210,253,218,218,224,200,220,222,243,272,220,254,236,215,235,579,177,199,174,183,163,163,156,164,158,154,149,165,204,224,180,268,259,264,272,227,202,186,194,204,260,236,236,206,213,268,240,258,293,259,235,239,198,252,210,172,173,159,167,192,203,229,212,220,209,189,195,178,227,196,191,210,208,214,179,224,213,213,171,210,171,189,203,217,195,210,212,220,199,228,280,204,241,266,325,287,228,240,290,249,240,266,233,240,246,241,218,263,263,250,228,258,189,220,80,276,155,120,152,128,143,149,131,131,157,194,178,321,192,211,285,272,230,207,246,228,236,236,217,270,209,210,158,204,199,203,252,188,182,182,208,87,373,183,95,130,145,152,152,164,168,182,201,166,613,196,169,156,155,167,152,144,154,160,173,188,170,149,208,242,215,211,235,200,213,219,213,246,218,340,263,303,314,256,239,221,247,191,220,203,215,183,244,199,200,202,174,167,146,187,250,241,196,115,421,202,177,141,170,150,159,170,198,167,188,172,195,198,242,219,270,264,205,168,219,227,282,222,222,262,211,239,206,207,194,219,214,239,217,202,221,649,195,209,198,190,194,205,204,211,200,211,221,137,272,224,200,174,148,181,192,205,207,232,238,232,280,235,219,204,240,190,213,265,242,264,221,221,215,238,216,248,312,276,210,246,216,233,265,207,200,198,201,251,194,214,197,218,181,248,229,191,199,636,128,172,145,172,194,203,183,186,180,165,209,174,280,245,256,259,224,222,301,249,246,243,201,206,230,259,281,206,210,188,200,276,263,246,221,208,366,230,180,140,196,168,192,175,193,177,186,170,183,236,232,262,236,240,225,268,175,208,216,232,185,220,237,230,215,218,215,183,219,279,186,234,324,211,247,194,281,296,214,241,169,212,252,244,203,222,246,245,239,240,228,201,289,281,253,214,231,235,221,228,192,179,158,149,179,156,173,169,207,218,222,318,222,262,215,213,230,271,251,227,215,237,223,283,230,242,244,230,225,198,252,289,266,232,213,56,325,220,161,189,177,183,184,191,214,205,218,195,643,238,234,164,173,192,135,192,198,213,206,244,214,303,249,243,288,218,257,239,269,235,224,199,266,237,248,209,253,315,303,220,251,244,236,241,259,236,241,323,265,225,218,247,251,254,239,250,253,116,415,222,199,188,187,168,224,220,215,245,232,215,280,272,230,304,269,295,238,262,254,243,247,221,229,255,251,261,212,201,258,224,236,259,252,223,212,601,236,160,153,164,177,206,204,223,213,235,204,226,212,251,247,243,197,240,189,218,224,236,219,209,239,216,211,210,203,203,204,238,202,228,216,188,284,244,215,283,316,299,198,228,284,247,268,208,260,254,265,226,227,259,216,290,221,250,213,213,211,623,222,172,110,120,138,135,193,179,196,197,215,214,244,287,233,268,256,265,251,223,211,248,235,209,254,277,241,273,266,270,283,233,313,265,230,253,450,261,232,188,175,197,216,215,214,227,232,219,49,382,202,187,182,176,202,211,223,223,218,242,226,227,244,260,238,250,307,237,253,228,287,217,293,270,311,271,261,344,297,324,245,238,293,229,244,259,188,226,221,194,217,275,273,248,284,263,267,251,323,236,201,174,193,182,219,218,212,247,247,239,237,350,258,243,299,344,245,247,272,237,244,227,250,288,279,251,246,275,271,231,288,247,234,234,272,38,295,194,175,169,173,179,193,215,221,237,233,218,238,257,246,235,227,226,239,268,266,253,260,247,203,284,256,221,243,262,291,245,253,274,336,266,279,348,260,258,284,366,271,222,245,250,215,234,250,230,243,319,262,243,222,239,276,279,242,229,269,56,346,186,153,159,161,179,207,227,248,216,226,243,346,262,240,342,318,252,195,231,283,261,246,235,241,216,245,217,223,255,260,288,234,336,277,272,248,526,227,225,169,212,185,170,206,215,212,236,245,228,220,249,209,232,214,253,277,273,250,246,266,244,247,238,254,264,259,231,211,193,206,222,216,241,330,258,243,366,303,315,270,248,306,252,273,249,210,229,270,241,221,228,226,270,271,240,244,235,268,593,201,183,139,160,195,205,245,219,243,245,259,279,256,274,245,292,269,269,235,267,210,264,222,236,285,306,263,276,255,257,282,261,282,265,274,269,564,196,177,156,173,170,187,216,201,233,233,238,12,362,227,212,221,208,218,235,230,234,233,244,256,263,253,235,217,262,248,244,250,262,300,253,247,232,300,245,293,321,259,219,239,264,268,238,223,248,235,256,311,234,263,246,277,283,296,261,241,250,435,241,221,178,186,224,215,204,232,211,224,240,214,300,277,247,263,246,258,272,300,260,252,228,234,291,245,279,223,245,262,268,249,262,239,275,256,80,281,197,207,187,203,195,185,229,237,235,251,226,562,201,237,176,168,200,208,219,233,240,245,240,217,280,220,245,229,245,251,206,245,261,260,274,251,351,271,297,315,280,278,277,260,273,278,271,252,190,236,232,232,237,246,264,272,253,286,243,265,36,308,202,194,194,191,209,219,220,222,248,223,241,256,267,315,322,313,300,234,259,263,219,220,240,284,292,298,268,259,273,258,234,275,270,267,261,182,461,220,182,171,163,185,193,202,223,239,246,243,280,277,269,283,301,274,274,279,286,242,266,264,251,217,228,234,236,226,243,281,248,278,311,258,272,403,276,258,405,267,341,242,279,235,243,241,256,255,318,288,265,261,269,230,249,285,304,240,245,232,540,228,213,152,185,196,190,219,230,238,241,248,278,330,231,287,274,301,279,227,275,280,220,260,257,251,281,272,260,262,233,252,256,268,254,260,262,617,189,222,178,189,220,201,214,243,262,223,233,25,304,210,205,182,188,195,238,235,260,254,265,265,294,244,277,240,264,248,229,216,242,251,265,241,259,296,227,316,352,271,341,248,286,264,262,260,280,187,257,223,239,221,231,282,262,336,244,254,263,581,223,201,175,219,204,222,223,195,232,236,242,225,296,238,317,324,319,328,241,231,260,228,214,215,312,232,263,251,286,264,269,255,278,280,258,258,147,228,191,173,187,169,185,197,216,244,240,231,186,518,244,216,187,194,224,230,237,235,232,258,270,202,243,279,218,282,281,298,243,237,265,326,313,268,352,233,252,320,392,298,233,220,248,219,233,204,198,203,233,246,250,244,295,245,277,307,251,235,70,275,186,182,184,173,177,202,226,213,224,245,243,375,272,275,308,290,252,213,273,258,246,244,262,303,284,228,271,276,260,264,279,250,261,259,256,123,437,209,206,204,193,198,222,223,237,225,231,226,607,202,203,161,184,194,212,236,220,236,246,261,222,274,237,270,278,281,240,220,260,303,285,239,281,340,218,229,366,320,312,266,263,323,276,278,277,214,230,322,222,217,219,265,323,286,246,251,239,198,475,215,200,162,160,210,208,234,215,241,245,257,296,289,260,243,319,303,235,240,269,262,245,219,243,281,288,250,249,258,248,248,246,286,262,276,235,622,193,171,149,155,189,176,194,226,241,226,235,265,246,248,244,243,254,253,265,256,266,250,258,268,214,231,244,289,228,257,276,306,301,241,284,316,377,302,318,253,403,312,248,262,238,252,249,237,293,229,280,242,244,248,254,273,231,308,273,273,268,643,206,208,143,155,187,165,228,231,217,218,234,235,303,277,259,321,276,262,265,207,191,217,207,193,232,229,203,222,247,248,217,247,313,270,242,270,265,249,198,181,182,204,205,213,222,231,238,245,229,187,214,199,219,220,236,270,227,221,245,246,256,239,243,229,211,223,241,188,194,210,209,204,213,237,330,235,256,313,367,309,262,257,294,265,264,248,176,219,247,233,259,226,312,254,290,272,239,251,147,255,195,188,195,182,216,210,209,230,250,242,235,369,256,270,296,323,282,216,250,253,240,237,241,306,268,251,253,284,261,250,311,248,273,242,274,71,355,208,173,169,176,170,185,201,241,231,235,243,692,240,246,196,207,223,224,235,212,216,237,249,194,253,231,262,247,242,265,241,245,254,271,306,269,378,289,335,337,307,291,233,262,221,266,265,278,232,268,229,224,242,230,263,252,275,275,242,238,130,425,215,209,203,210,191,209,235,238,224,232,229,237,221,281,280,292,321,188,253,248,237,265,231,260,296,223,242,230,245,244,261,264,270,250,247,257,615,208,212,184,193,210,180,208,214,222,230,247,194,261,199,211,186,196,215,208,221,227,243,237,238,272,213,236,227,278,225,214,265,226,255,218,274,291,301,242,266,378,287,234,292,233,286,263,268,246,238,247,251,228,231,232,269,277,252,260,271,291,676,213,192,174,195,207,217,204,209,239,247,254,205,297,271,255,297,273,269,275,234,230,229,229,245,296,271,280,240,251,259,250,273,273,268,258,281,396,218,201,150,182,177,193,202,214,214,227,242,254,294,281,294,250,271,281,322,267,274,253,306,262,208,256,246,209,247,281,237,250,290,236,291,300,247,299,221,298,348,262,292,194,230,285,210,239,258,216,243,293,271,228,235,287,296,297,255,274,250,267,259,196,178,174,157,182,191,219,239,237,242,234,313,257,290,253,250,230,244,222,244,233,211,207,288,276,275,286,258,284,253,241,282,290,269,255,19,315,182,160,192,176,159,201,225,251,222,243,243,628,176,196,163,178,220,206,204,208,240,229,231,205,315,217,256,247,192,194,214,266,216,199,213,266,338,221,262,251,323,303,273,255,264,249,252,256,211,235,261,253,210,232,241,233,256,246,212,240,102,363,241,180,197,165,190,216,203,252,214,249,253,305,276,229,274,263,270,177,250,216,216,218,228,230,239,246,247,217,258,268,233,228,213,253,242,244,516,208,164,176,150,170,166,180,212,171,205,203,334,223,275,227,236,150,216,191,195,262,213,242,215,230,260,212,219,213,229,197,231,219,254,219,243,248,227,240,194,206,225,248,259,262,241,275,231,222,223,249,241,236,249,259,266,265,278,286,248,232,246,227,223,233,225,235,242,242,227,234,237,223,211,258,241,241,221,239,218,232,214,243,270,240,256,241,241,250,261,277,253,282,268,258,253,261,264,224,228,224,226,248,245,254,274,236,248,257,241,235,247,223,252,244,245,244,229,260,256,264,245,244,232,220,248,259,249,261,235,256,261,246,247,228,238,245,228,240,246,248,263,251,256,232,241,281,247,230,231,245,244,225,236,240,232,245,266,268,246,275,251,261,267,268,260,241,247,248,271,255,262,242,235,241,258,260,274,248,246,268,247,242,248,236,253,231,252,256,256,260,250,251,233,261,246,238,251,235,243,243,238,241,249,257,241,241,224,227,229,232,241,234,208,228,228,221,217,191,223,219,180,218,221,240,236,253,229,224,251,236,252,231,249,225,223,214,250,253,243,248,241,256,252,233,245,239,246,235,221,234,245,248,262,247,261,260,249,256,238,224,247,246,255,238,226,251,256,259,239,241,229,242,234,230,248,228,248,234,255,242,258,270,253,259,249,257,265,265,268,281,252,272,264,263,265,252,238,230,231,242,245,242,259,264,255,241,237,248,250,231,260,254,248,276,242,235,257,257,251,239,231,235,251,243,232,226,233,237,239,237,246,255,252,230,217,233,241,246,241,248,259,240,246,255,254,250,223,231,238,242,239,242,224,240,231,249,236,225,233,245,227,240,254,248,250,245,250,258,260,259,236,245,249,243,254,244,242,253,234,238,228,245,237,253,235,231,242,241,260,265,251,257,240,255,256,238,235,241,247,230,225,219,247,258,231,219,210,209,233,268,241,229,221,242,219,236,227,234,218,223,223,227,236,238,233,246,241,233,240,239,239,233,240,241,234,238,239,240,253,246,238,242,242,227,240,225,252,244,246,241,241,258,261,248,232,232,233,247,246,246,237,247,231,246,246,252,247,261,253,250,254,243,238,245,258,253,269,259,270,251,258,263,258,247,259,252,259,282,270,264,271,270,286,281,255,266,257,266,275,261,251,263,263,258,265,261,254,239,232,245,253,255,237,243,253,255,231,246,237,234,244,241,251,247,257,229,259,252,271,252,254,255,249,252,241,241,249,257,255,259,259,247,230,231,256,259,264,261,266,249,254,260,255,245,250,252,238,233,231,241,261,244,234,230,231,234,236,239,241,252,250,240,242,243,239,254,258,258,257,251,256,239,244,231,246,240,261,253,248,242,232,245,248,242,219,250,243,245,257,240,241,261,263,249,238,243,227,244,238,217,235,236,230,248,254,254,236,235,217,250,259,242,227,261,247,256,269,255,249,233,261,226,222,227,228,233,241,229,236,229,237,246,227,259,246,236,258,240,266,251,263,239,249,244,254,237,235,224,243,221,240,233,239,241,251,218,236,246,226,234,244,251,267,235,217,244,225,247,220,233,215,250,253,234,267,254,258,256,278,273,254,263,244,222,232,252,254,246,234,260,267,259,243,256,264,262,254,223,270,251,236,262,233,247,239,241,247,233,241,232,250,260,248,232,218,251,243,240,257,228,233,232,227,258,249,252,249,278,244,244,262,264,261,244,241,255,245,257,249,227,242,243,236,241,253,273,260,242,263,249,261,259,248,275,248,253,269,250,233,247,262,241,247,256,273,241,241,226,255,266,242,228,227,256,246,236,259,247,226,238,242,231,239,229,238,244,233,241,234,240,220,264,247,234,251,251,246,246,243,225,230,220,245,237,239,239,256,255,298,261,243,271,294,260,252,284,276,277,267,257,287,297,273,302,261,287,294,287,264,259,253,288,259,283,236,278,285,321,260,282,240,293,292,264,261,239,287,242,261,251,275,238,307,249,269,235,264,252,249,252,243,261,258,269,249,247,245,266,247,274,262,277,269,312,283,296,289,273,306,279,257,269,277,257,292,242,282,274,290,310,270,264,275,278,255,246,248,246,249,253,255,249,242,245,256,246,238,244,272,300,271,264,242,252,293,254,280,244,269,265,268,275,257,278,284,291,278,274,288,289,266,249,232,295,265,292,288,274,262,274,290,268,261,265,283,284,309,271,305,262,310,321,273,274,271,287,255,275,279,289,279,310,265,278,248,265,271,253,245,270,272,276,286,283,294,269,302,258,280,261,293,232,281,262,280,255,289,282,257,269,262,271,245,219,252,286,262,263,225,227,243,238,232,243,253,242,264,243,241,233,249,258,229,231,221,240,232,230,221,275,252,246,257,282,257,251,243,292,268,283,237,301,262,298,269,300,286,266,305,258,261,242,255,240,278,249,295,264,300,276,287,261,257,291,250,213,246,264,261,296,274,294,253,271,261,249,266,258,257,286,283,282,278,279,291,278,275,259,295,266,220,246,257,251,280,265,275,251,305,282,258,275,256,274,248,236,234,252,244,237,246,238,241,257,238,236,281,258,256,279,284,256,247,248,271,261,241,235,254,272,253,295,273,281,261,304,269,283,264,289,268,275,266,264,267,284,276,274,256,261,278,247,263,239,284,271,302,284,293,248,304,286,297,284,275,292,266,292,283,292,274,302,278,276,258,272,247,213,261,263,279,276,289,264,255,250,279,282,261,232,271,256,279,251,273,256,261,276,244,261,244,273,209,229,247,263,224,225,198,205,228,229,217,223,252,263,247,271,253,274,229,273,263,231,267,248,261,225,274,239,261,242,248,271,244,249,260,259,270,241,238,261,290,242,226,245,257,274,257,247,226,248,249,245,256,266,272,243,287,255,234,265,262,271,238,239,262,271,246,262,283,264,277,263,258,259,249,273,267,269,268,309,273,322,286,289,316,256,292,284,287,255,266,228,246,272,243,259,243,254,270,242,236,245,252,267,251,238,240,245,244,241,237,240,251,309,243,286,258,234,295,248,245,276,268,283,243,247,240,268,245,277,280,255,275,250,250,236,246,298,289,274,265,291,280,313,288,256,300,264,291,247,251,259,271,256,259,290,252,275,253,248,252,242,264,254,248,254,293,265,279,245,239,266,241,248,236,257,255,259,275,256,289,259,265,261,257,263,254,255,277,270,258,302,303,273,266,276,291,268,238,222,206,217,236,206,221,217,221,256,246,248,268,251,316,248,270,272,323,297,272,252,272,283,259,251,244,286,253,282,278,270,247,287,253,261,257,266,256,295,287,293,262,291,274,272,286,262,289,268,259,251,284,268,276,276,263,262,285,284,258,262,260,264,274,287,246,292,246,250,276,242,238,255,277,263,301,254,291,284,314,284,262,259,288,324,261,257,247,276,282,261,260,242,232,299,284,264,227,275,285,254,255,269,255,246,254,248,287,250,262,238,248,212,263,289,305,300,265,270,324,307,259,249,267,255,303,278,258,287,270,298,272,330,281,267,261,293,285,274,298,272,286,240,303,267,269,270,291,284,234,255,299,286,268,287,283,298,270,267,265,291,239,282,261,314,259,279,281,253,302,278,286,253,290,250,282,280,306,256,242,301,296,259,276,262,293,269,270,262,258,296,207,310,282,265,234,240,235,394,272,288,212,180,226,175,194,180,205,198,205,216,229,229,231,223,229,259,236,259,246,273,261,228,491,235,242,182,189,192,191,192,191,203,208,199,205,277,201,262,237,240,252,311,294,323,269,249,261,617,249,235,203,179,212,199,213,186,209,219,225,247,269,228,238,240,255,220,261,320,274,240,272,177,432,230,229,229,231,204,216,232,249,243,255,255,274,292,299,226,244,220,250,266,274,237,290,268,4,365,232,210,222,210,207,197,227,230,225,214,223,275,251,338,276,299,270,268,270,276,270,259,258,107,245,218,219,206,203,182,208,221,222,236,241,238,300,265,278,262,266,244,245,265,255,263,248,274,482,266,255,212,223,230,209,231,213,222,231,245,259,262,248,239,255,266,246,235,269,250,251,248,251,547,240,233,205,198,209,186,223,222,233,245,223,265,311,239,230,228,252,229,274,225,245,245,251,227,579,231,216,185,197,212,167,184,220,241,240,225,253,301,273,235,241,260,243,283,242,263,229,242,106,395,217,219,186,198,181,188,215,222,233,252,223,261,254,288,229,263,263,283,326,324,293,312,314,10,333,242,212,206,197,218,233,225,220,221,233,252,260,223,246,223,246,305,279,238,268,266,239,247,180,261,230,233,206,223,208,220,233,252,255,281,271,305,264,271,255,259,252,257,282,287,313,258,294,518,240,226,205,217,211,195,214,172,203,223,227,248,248,264,262,322,240,253,297,259,248,264,270,259,511,210,224,192,197,220,214,234,238,239,242,245,259,249,286,222,242,241,213,244,232,279,273,286,212,561,242,221,210,224,232,211,220,238,230,253,247,232,261,326,272,271,262,249,289,299,256,230,248,116,367,236,239,234,213,214,201,223,226,242,245,240,246,246,266,294,254,274,253,265,290,273,242,232,66,320,249,213,208,198,185,197,188,196,207,211,240,250,227,219,250,287,241,247,275,216,250,258,243,165,266,216,209,166,202,200,206,226,221,222,225,225,266,227,275,252,264,232,267,311,261,250,269,248,589,247,246,191,210,203,210,203,206,210,217,220,228,267,227,274,226,277,226,256,267,278,261,243,238,537,246,231,233,238,234,217,227,235,250,220,257,249,297,252,238,242,236,221,249,256,294,262,276,209,545,236,229,213,201,204,222,236,215,222,233,242,257,227,262,297,240,270,237,285,253,237,267,244,92,340,233,220,197,202,218,209,227,212,231,233,228,297,239,271,229,238,250,267,294,263,265,266,256,66,325,240,225,235,204,193,220,240,232,238,226,227,265,259,292,267,260,248,271,288,247,276,259,246,243,244,217,202,194,237,208,228,237,227,241,235,236,237,247,250,253,268,236,239,248,313,253,234,246,583,223,221,184,206,221,180,212,208,224,221,218,207,276,219,264,250,292,232,256,269,279,279,264,260,538,234,221,219,219,224,214,221,214,228,238,227,261,304,247,269,275,280,261,315,343,296,312,274,213,497,242,215,202,203,210,214,214,224,231,246,235,295,271,255,239,255,239,230,260,331,279,252,285,89,334,221,232,214,224,246,251,258,256,274,272,296,313,293,269,279,256,261,272,249,311,255,305,279,82,272,228,212,226,211,198,204,215,198,242,235,247,277,256,337,287,275,281,257,245,270,286,275,245,300,247,239,211,204,230,220,225,212,231,243,261,270,303,245,274,267,266,257,232,248,255,301,252,263,663,248,244,207,224,222,213,217,225,234,236,257,257,295,262,246,240,256,253,254,270,287,246,259,271,516,234,247,239,234,233,229,239,234,222,256,219,259,281,260,246,235,244,218,313,285,259,265,250,147,440,238,220,187,211,197,177,199,211,211,209,218,222,217,226,234,243,263,284,271,295,248,280,262,29,300,229,214,185,226,196,218,228,213,228,223,212,270,257,309,260,261,293,248,342,294,305,297,317,131,268,209,210,195,195,220,220,248,217,245,226,242,242,237,248,241,221,276,228,250,257,251,242,230,362,245,261,221,222,239,219,243,235,243,248,264,259,291,259,280,258,280,246,263,277,271,298,263,269,673,231,249,212,221,219,208,218,224,226,239,227,216,229,254,277,329,271,265,288,284,256,248,257,235,454,203,212,193,232,223,218,234,237,241,234,260,266,280,357,264,275,250,245,276,242,257,278,277,98,410,219,182,199,198,204,201,201,220,238,247,240,260,257,339,236,234,263,200,244,289,250,251,252,69,277,211,200,196,217,220,215,207,216,230,249,250,211,214,247,265,257,270,252,258,264,251,255,233,179,252,221,222,179,183,166,191,181,216,222,233,217,221,210,240,259,212,250,228,242,231,235,237,237,364,222,217,200,190,202,209,193,215,225,232,229,209,272,240,266,281,272,249,302,270,339,277,289,294,644,214,231,200,201,186,208,202,214,206,222,219,248,275,205,235,227,275,206,261,271,244,235,241,198,470,245,234,243,240,230,210,224,245,241,258,269,265,267,284,223,220,217,218,287,258,259,270,285,99,407,247,215,220,211,211,163,195,206,229,224,242,251,262,282,256,278,294,276,265,282,266,243,228,22,239,214,214,185,221,195,213,229,217,231,232,240,291,257,272,285,261,253,240,228,295,250,250,265,240,248,196,195,199,202,190,233,221,229,244,260,252,248,255,248,274,273,267,212,208,248,231,229,241,443,252,244,207,203,232,210,212,223,205,211,228,221,265,243,228,220,243,210,229,246,221,235,226,233,630,200,213,171,193,185,195,214,194,170,187,186,145,192,194,214,243,268,235,216,212,233,222,236,219,222,254,242,154,209,173,287,242,220,214,210,241,221,211,232,256,246,239,224,290,277,261,245,199,239,202,214,265,233,246,258,282,212,216,209,214,219,171,191,236,239,212,215,240,276,259,234,249,249,275,162,209,232,252,251,246,239,248,232,209,203,232,186,222,250,238,211,218,228,220,208,217,195,199,312,212,204,185,191,197,190,183,238,227,222,243,258,181,210,228,212,246,263,356,296,287,222,232,245,227,228,202,262,305,271,286,283,255,251,228,206,269,231,261,210,254,228,208,215,231,222,246,254,260,238,236,233,252,272,308,294,295,262,253,241,249,260,229,223,230,250,241,172,201,370,239,255,274,248,267,251,271,248,265,324,252,257,302,312,275,263,245,296,242,368,236,299,264,277,223,240,252,285,98,307,237,241,203,199,207,216,217,244,235,246,217,244,255,240,252,264,265,267,303,250,311,261,344,286,311,304,271,349,293,295,232,232,352,272,243,253,236,262,260,265,267,269,288,242,282,250,247,240,419,245,233,203,228,219,229,243,245,240,240,251,252,361,284,256,310,367,321,278,272,269,253,257,241,301,284,283,255,264,287,243,297,274,279,260,265,44,329,246,229,233,238,223,235,247,237,266,265,256,655,263,282,208,237,245,236,250,234,259,253,261,245,310,260,258,269,292,290,268,305,285,344,291,272,358,236,250,285,396,296,270,259,287,300,276,308,256,272,352,301,290,264,309,289,286,282,272,283,46,387,238,228,229,230,228,239,248,249,268,263,269,349,277,263,354,345,322,263,319,304,296,344,289,283,323,262,269,266,278,277,297,265,324,297,283,209,549,263,249,218,233,246,244,240,250,262,251,264,285,291,321,314,317,306,305,283,322,282,301,283,269,289,277,314,303,324,290,310,294,380,316,309,305,360,270,287,394,317,330,275,269,319,290,327,290,269,308,342,274,290,286,255,293,306,276,282,273,270,606,253,247,198,213,227,237,234,246,251,249,265,294,281,304,261,321,333,307,302,304,286,278,275,278,273,328,282,294,293,304,261,271,298,287,286,284,639,247,248,224,240,250,241,233,262,257,266,268,20,378,251,235,240,246,246,247,254,254,259,264,274,255,284,301,287,245,312,290,325,306,311,307,351,334,317,299,279,358,324,340,300,267,346,279,283,289,248,293,285,273,275,271,314,252,324,287,287,277,535,260,240,182,238,235,243,234,254,260,261,259,267,342,283,249,329,361,306,312,281,294,291,296,296,298,292,288,275,285,281,267,274,314,269,274,298,111,310,249,239,244,229,243,245,249,246,257,263,229,603,277,263,234,241,255,246,251,260,259,265,265,252,298,312,256,321,305,325,295,316,325,351,315,292,381,260,264,294,412,306,260,272,281,299,298,307,270,270,325,293,277,276,307,283,285,319,282,279,55,349,250,239,240,229,236,245,243,250,262,258,268,368,264,270,350,308,298,259,315,282,291,311,285,323,325,272,262,276,301,278,322,275,317,296,302,156,490,256,237,228,234,241,239,242,251,257,254,273,606,266,262,230,244,246,246,231,237,248,265,270,253,320,258,299,293,309,265,289,288,345,317,305,321,357,250,257,403,306,322,280,274,345,312,301,303,259,291,359,267,301,274,258,299,296,263,284,283,224,557,263,256,230,223,232,249,248,257,257,266,265,287,308,293,272,306,311,299,292,305,269,297,276,283,281,322,283,276,282,291,278,260,301,301,305,277,681,252,248,226,240,253,242,244,257,261,264,266,283,330,330,323,311,310,319,330,308,298,296,300,314,274,286,333,262,282,315,284,310,336,304,321,330,348,327,293,310,404,333,320,284,235,282,275,280,284,257,280,264,274,303,272,306,289,292,285,296,277,644,235,206,186,201,194,194,207,209,231,253,253,222,299,273,254,302,276,279,284,247,216,243,240,203,320,261,278,260,255,227,248,250,279,268,283,234,213,268,220,199,214,205,210,187,227,239,214,232,185,500,232,212,189,205,191,207,198,224,235,243,221,265,304,266,234,231,283,228,250,245,281,225,248,317,303,208,299,256,344,343,253,252,270,216,230,222,243,224,307,231,245,235,313,237,275,244,248,240,127,280,191,222,208,170,206,212,225,218,244,245,266,343,290,275,267,350,307,204,270,278,286,233,253,313,275,236,253,228,242,230,292,259,275,268,232,82,411,214,204,187,200,176,202,215,229,222,248,229,241,159,230,257,279,216,235,235,257,240,266,278,197,221,228,219,166,194,230,184,198,231,218,240,226,355,222,243,300,310,253,159,202,245,199,209,223,261,248,363,221,219,223,225,211,248,238,236,232,136,402,190,158,117,122,119,165,188,190,210,189,200,253,256,271,264,249,211,216,234,236,245,207,226,197,208,216,235,194,224,261,251,232,263,279,237,271,626,190,206,150,176,181,161,187,218,222,211,220,136,233,182,153,193,192,166,195,216,214,224,209,236,231,228,242,277,224,245,191,238,259,222,263,262,297,282,283,278,351,276,296,293,267,273,281,238,225,232,248,232,229,229,227,292,251,258,251,252,241,648,186,195,138,164,172,187,238,215,207,222,233,238,268,248,232,306,276,270,281,287,203,251,224,238,322,312,266,231,241,260,255,254,288,256,256,261,316,208,201,188,165,166,187,198,209,233,231,230,239,259,261,245,224,229,244,266,235,222,232,236,253,210,236,274,193,206,245,247,318,232,292,293,306,299,362,272,322,359,305,306,211,228,271,205,229,225,203,212,223,269,239,273,273,234,285,287,249,259,200,238,185,162,191,177,195,196,243,223,220,245,252,355,255,229,307,316,258,247,241,268,202,220,199,263,204,199,194,233,213,216,302,251,280,269,280,35,365,198,196,190,208,193,187,200,220,214,216,229,181,202,207,220,184,240,255,253,253,253,247,238,264,230,231,238,247,247,247,192,207,219,212,219,225,370,175,237,317,331,278,268,257,286,229,242,265,188,220,342,228,247,241,281,289,289,259,240,237,95,407,229,192,182,168,204,208,207,210,219,231,239,301,259,252,324,306,257,210,270,246,257,228,225,250,282,257,246,271,266,246,255,232,284,259,265,241,563,209,199,163,165,181,179,192,221,222,205,239,264,290,221,198,205,184,210,217,233,208,235,244,260,263,250,255,237,245,265,253,289,256,256,260,255,300,257,246,272,348,279,208,267,233,243,214,226,220,242,259,248,240,236,253,261,238,250,258,248,264,638,221,213,171,196,242,212,204,225,213,211,225,219,305,261,265,307,263,253,240,260,231,279,233,250,241,250,276,248,273,239,236,251,277,250,248,234,460,233,191,181,195,198,206,203,218,223,214,241,41,361,205,192,183,197,195,213,227,224,222,248,256,247,263,222,243,264,258,220,194,244,304,259,261,229,337,284,307,331,261,277,247,240,313,278,261,253,229,214,299,219,265,245,252,304,300,267,252,261,357,248,198,181,184,195,232,216,222,237,241,240,243,281,280,287,277,277,262,295,278,233,222,211,244,289,292,245,266,258,248,235,265,266,277,260,258,16,284,196,167,162,175,175,192,226,212,221,234,231,278,295,268,275,275,305,273,286,268,288,263,269,201,275,202,227,245,203,242,266,236,265,306,284,253,373,291,236,304,297,299,209,257,260,244,254,260,260,280,267,291,239,251,304,289,295,248,257,249,41,339,220,171,158,165,186,179,216,199,242,243,245,307,291,256,293,261,246,207,254,261,231,220,232,227,243,290,277,239,246,261,244,247,259,261,263,237,535,201,198,187,194,198,194,225,237,227,237,250,354,210,194,160,173,164,224,217,233,244,237,246,219,267,260,230,270,215,261,240,257,254,229,289,240,297,233,251,261,307,344,259,256,236,240,249,257,203,262,200,224,236,219,263,260,253,273,231,301,272,587,206,216,186,185,201,209,210,217,245,242,259,251,224,251,287,241,294,238,264,229,209,216,206,232,319,284,264,264,246,263,263,294,292,266,253,270,578,207,211,160,171,183,165,219,242,249,232,237,29,336,212,205,177,199,188,200,213,208,220,258,265,225,265,229,200,241,255,265,328,227,269,271,327,309,303,261,236,337,305,289,237,228,285,241,220,231,208,271,222,230,254,263,256,197,308,265,237,254,475,243,209,153,182,194,185,209,227,219,224,220,224,338,275,252,303,315,228,241,265,222,205,226,237,312,250,245,221,231,233,195,250,267,238,249,252,63,276,193,181,187,181,199,228,226,219,226,239,235,555,217,207,186,167,199,211,226,219,242,247,253,232,275,266,234,268,276,239,223,269,263,305,249,212,368,221,266,281,373,280,289,249,273,273,255,273,196,219,284,235,214,245,297,295,258,282,258,242,66,295,174,173,167,160,196,198,220,230,231,250,244,336,258,261,326,276,277,213,270,235,209,245,237,286,277,254,242,262,264,284,297,243,290,243,264,199,457,234,178,152,153,185,198,202,218,235,230,256,242,256,260,239,262,233,242,234,231,225,239,250,224,255,241,238,226,255,234,228,257,326,297,262,248,363,252,219,346,292,317,185,205,280,236,230,224,238,245,340,227,248,257,235,261,242,226,249,217,213,493,201,201,160,166,179,189,212,238,241,224,223,247,301,291,259,306,297,251,220,240,238,252,221,234,241,285,263,253,249,277,259,235,264,246,250,252,625,196,222,160,170,198,195,188,196,228,210,221,221,202,198,203,198,226,212,243,237,246,238,244,243,256,238,239,234,237,243,173,207,214,215,212,221,268,304,284,256,336,310,307,260,245,258,271,264,277,214,231,250,222,220,242,279,249,271,252,254,250,576,218,205,144,202,226,215,212,187,205,230,241,244,302,259,267,302,297,253,288,243,222,236,232,224,310,245,285,257,274,256,243,246,281,252,252,266,132,222,195,184,193,184,205,208,237,226,225,221,185,550,243,228,189,193,200,211,222,226,224,244,254,195,286,218,232,222,227,258,238,235,285,268,286,237,298,262,280,308,243,264,210,197,264,242,253,251,236,259,271,237,241,244,283,291,287,322,263,247,77,276,200,198,201,202,182,213,248,232,234,239,228,242,214,280,281,289,314,234,295,251,233,235,220,287,254,283,239,248,206,243,230,297,288,253,254,120,440,212,209,207,218,191,198,188,240,231,244,249,575,186,217,162,174,208,205,224,222,232,245,245,232,232,220,260,234,252,237,219,267,254,229,264,217,368,249,335,313,295,275,257,290,228,293,258,266,186,248,209,234,228,225,258,240,245,271,248,246,186,484,225,196,170,176,193,217,232,227,234,247,251,205,243,263,245,285,321,225,248,232,250,247,221,223,282,247,278,240,257,261,262,245,266,245,264,235,636,193,172,165,164,196,174,208,219,240,238,239,257,269,269,291,288,285,282,298,275,261,248,267,289,217,233,248,189,227,273,228,264,289,297,282,291,358,296,273,324,365,283,247,268,221,257,248,289,280,258,261,222,230,244,244,231,262,288,257,262,225,649,210,194,153,148,158,145,188,195,218,238,240,222,307,221,259,266,216,194,258,250,220,185,216,200,271,213,217,262,238,216,255,227,242,273,195,211,279,214,173,150,176,136,172,176,174,177,221,202,133,412,183,142,124,124,157,190,198,203,217,221,206,212,234,216,216,206,248,192,204,227,285,190,227,222,321,186,280,229,291,377,179,225,240,231,227,225,198,210,246,216,222,209,268,212,290,232,276,245,182,245,174,165,168,153,178,169,189,232,193,243,220,293,242,231,245,283,299,160,248,222,226,214,212,291,266,211,230,224,209,254,237,232,253,201,218,58,348,204,141,129,147,151,159,186,179,176,218,203,537,224,194,175,172,180,178,180,197,179,202,208,137,193,201,190,154,180,199,184,251,217,224,196,242,278,173,214,297,258,196,208,132,190,203,162,155,183,202,320,173,185,130,175,167,148,106,159,137,68,327,135,113,122,126,109,141,184,155,159,122,160,236,216,163,217,206,177,110,208,209,227,149,237,197,186,214,206,201,173,175,165,125,238,163,181,169,546,121,177,105,131,109,147,174,128,158,142,176,183,220,194,130,144,106,170,146,142,132,201,173,150,199,194,181,222,193,206,185,218,256,179,195,206,269,235,212,257,302,287,247,215,215,208,226,233,211,200,252,212,189,178,186,207,169,223,212,167,196,593,175,138,133,154,156,186,171,184,169,203,220,221,245,217,232,240,264,262,242,211,188,187,191,195,252,232,227,184,159,212,255,197,230,220,211,207,347,179,150,108,146,134,153,168,185,200,201,195,190,263,248,254,202,236,224,295,207,220,196,221,198,171,189,224,193,177,201,235,250,202,219,247,297,281,327,246,247,306,246,230,171,152,221,151,161,183,195,165,174,212,193,205,216,185,217,233,203,197,248,209,152,108,155,89,118,133,161,153,136,170,151,340,207,206,228,250,204,225,190,192,157,167,199,252,201,179,203,245,198,165,222,174,225,201,219,17,321,193,178,165,139,161,167,174,195,190,202,191,588,133,171,136,135,153,154,151,171,163,193,206,173,255,195,171,190,261,241,176,250,209,249,187,215,360,203,207,303,328,261,246,248,249,223,217,263,187,208,276,202,203,223,257,285,233,193,173,188,50,326,161,115,93,98,136,124,127,133,140,141,161,252,195,174,249,210,217,143,164,216,188,156,143,179,240,186,202,199,181,156,215,191,252,196,170,172,479,153,118,112,89,119,106,108,121,178,159,161,294,215,159,156,148,115,110,116,134,112,130,159,188,221,191,213,171,170,190,179,226,196,200,219,202,284,225,228,247,261,197,173,199,177,190,207,173,192,174,206,174,182,199,195,179,191,175,180,159,197,571,185,143,127,136,134,151,166,178,154,158,151,172,261,261,174,239,200,214,236,206,195,240,199,197,223,230,221,214,222,225,227,188,259,213,229,189,476,183,162,172,206,148,190,193,186,217,213,217,22,312,158,153,157,167,193,200,176,204,181,217,237,238,255,202,199,232,175,159,170,189,215,200,213,198,288,234,275,279,189,205,211,192,235,221,215,199,167,152,214,161,184,182,221,238,253,199,183,202,406,201,159,156,130,165,169,141,148,183,167,156,177,249,232,210,216,233,180,231,225,245,151,170,161,225,273,262,199,187,188,201,240,219,224,202,196,46,192,133,144,157,156,130,134,182,136,163,163,177,231,238,220,218,207,228,184,199,173,203,207,213,141,214,172,188,233,182,214,252,204,201,257,272,204,318,232,221,256,269,286,161,205,216,202,166,241,226,211,241,247,202,211,261,219,268,240,223,217,59,303,186,154,124,119,151,165,185,173,194,202,224,318,258,258,285,250,214,183,252,235,259,217,213,221,226,292,255,208,238,222,220,253,262,248,223,200,476,171,152,186,177,186,175,197,225,211,193,196,423,198,175,157,155,162,199,195,199,197,220,209,200,223,232,197,246,194,231,225,235,199,236,267,238,270,222,224,258,276,313,245,242,240,205,217,227,211,221,175,200,243,185,206,242,242,263,202,255,236,556,199,175,139,157,152,183,221,174,201,195,216,193,204,225,273,226,238,220,222,235,177,201,185,192,273,250,237,210,205,219,274,268,286,228,231,216,602,177,166,137,136,148,162,184,180,221,200,202,29,295,175,120,136,130,141,116,168,147,182,196,175,209,191,166,184,113,225,219,212,192,194,214,238,251,246,196,229,311,293,228,148,159,231,136,139,109,128,185,187,182,204,177,207,158,232,151,190,163,502,151,106,85,142,152,146,181,186,193,124,155,169,282,182,180,250,242,150,209,236,192,100,145,180,224,205,145,167,165,186,191,217,254,195,159,180,101,222,147,159,165,133,132,147,121,148,172,158,147,487,171,139,136,114,141,151,180,180,172,200,179,202,242,225,201,232,210,186,131,191,195,231,223,179,293,184,232,248,326,228,205,208,240,210,200,216,159,163,238,207,217,205,241,223,212,220,228,228,53,259,186,161,171,185,188,163,195,194,195,210,222,328,204,235,273,274,262,188,261,218,201,191,165,240,251,188,169,217,210,218,252,171,253,205,216,128,359,151,120,120,126,135,144,157,192,195,191,178,214,218,153,163,167,171,174,210,185,166,166,182,177,239,192,197,193,205,193,200,212,285,269,189,187,330,250,188,317,252,240,152,182,232,234,193,180,198,215,271,159,176,181,160,183,182,182,154,176,163,427,174,166,107,121,121,133,151,158,154,170,172,213,213,208,190,218,231,200,173,186,183,190,137,188,162,220,220,193,198,195,202,168,268,242,233,198,612,181,213,168,170,142,146,146,168,221,205,208,170,164,165,184,187,189,186,183,201,184,205,208,173,204,180,202,197,226,205,157,156,177,169,185,162,261,254,235,216,301,240,253,274,228,253,218,206,222,206,214,202,170,187,196,252,226,258,201,188,201,574,126,154,127,121,145,146,173,134,143,160,187,183,266,171,207,246,257,234,230,159,195,165,172,179,263,230,262,195,210,195,235,174,217,177,179,182,159,173,148,138,143,121,112,133,151,138,172,168,132,461,166,148,86,122,103,118,162,144,173,156,180,136,243,185,156,161,183,221,187,207,280,192,210,198,242,200,215,234,245,196,185,155,258,191,224,187,193,183,213,165,197,174,215,237,235,229,209,180,65,245,147,155,162,147,171,152,195,167,164,156,191,192,219,272,219,186,229,210,186,180,215,174,214,245,202,281,230,209,172,170,217,225,265,217,211,66,330,152,193,142,121,154,171,195,179,176,194,169,609,178,182,127,141,172,160,187,158,180,199,189,220,180,211,254,214,199,177,198,237,200,213,218,185,333,232,274,269,248,222,193,224,184,217,174,224,153,184,134,191,164,159,185,189,229,235,206,211,149,390,144,147,125,148,178,216,201,185,172,187,192,190,197,183,197,242,234,142,220,170,191,159,161,228,201,208,203,196,183,218,195,195,201,198,199,190,603,165,109,125,127,122,139,138,128,149,155,188,206,225,216,226,210,202,199,204,206,214,189,187,225,203,195,230,158,180,229,189,211,204,233,242,208,278,219,205,276,318,277,245,236,131,200,163,211,275,261,216,209,194,229,212,252,242,242,201,227,240,649,163,171,148,173,147,144,185,181,201,206,201,229,308,236,232,288,270,247,236,222,230,149,215,202,260,190,229,255,251,209,240,220,268,272,258,211,322,206,185,157,178,154,168,187,192,215,243,227,108,390,199,177,156,172,165,197,203,246,247,249,226,243,242,218,217,249,266,207,216,223,246,230,249,273,275,241,295,226,275,285,245,258,218,215,253,227,184,197,249,224,229,229,241,232,271,220,246,264,233,279,229,232,217,239,238,256,250,290,253,255,299,280,247,262,218,273,217,200,249,240,223,214,208,291,240,278,269,255,242,289,253,254,283,222,239,233,226,261,242,206,239,305,213,237,268,244,299,257,265,255,217,212,219,252,246,269,230,240,248,261,260,255,267,255,243,222,225,231,233,244,246,260,249,247,265,278,272,243,255,270,254,273,257,260,266,260,236,257,263,247,250,252,264,251,262,255,263,262,254,269,246,259,248,266,272,264,274,270,263,268,265,280,266,276,276,273,283,282,265,274,274,284,269,267,277,262,284,272,266,279,271,271,282,273,268,279,267,285,265,278,271,263,274,281,282,278,283,273,281,286,276,285,274,278,275,270,272,273,282,278,280,277,278,276,275,275,275,276,281,281,277,276,270,277,282,280,276,287,284,277,285,280,283,277,282,282,277,276,278,281,283,278,277,283,277,286,278,275,288,282,279,283,278,288,284,280,283,277,276,286,280,285,280,281,282,280,278,280,282,287,281,281,285,284,284,281,287,278,281,278,277,279,281,281,278,278,278,277,281,282,285,283,280,283,282,282,284,283,281,281,281,279,279,285,279,281,285,280,283,279,280,285,285,280,284,282,285,282,286,283,284,288,282,280,285,283,281,285,282,281,283,283,283,281,284,284,281,283,282,279,281,282,282,285,282,282,285,283,285,281,284,287,283,287,285,283,288,285,284,286,284,286,282,282,283,284,284,284,283,282,282,285,283,283,283,282,285,282,281,283,284,284,283,284,286,284,286,281,283,283,283,283,285,283,281,283,283,284,282,285,285,284,283,284,285,283,284,284,285,282,281,283,283,284,284,283,284,283,282,282,282,282,283,282,285,283,282,283,282,283,285,283,283,283,282,285,282,284,286,285,285,284,284,286,284,284,284,284,283,284,284,284,283,283,283,285,284,285,285,285,283,284,283,283,284,282,282,283,283,284,284,284,284,284,284,284,285,285,283,283,285,284,283,284,283,283,284,284,284,284,284,283,284,284,284,284,283,284,284,283,283,284,284,283,284,284,284,284,285,284,283,284,283,283,283,284,284,284,284,284,284,284,285,284,283,284,283,284,283,283,284,284,284,284,283,283,283,284,284,284,284,284,284,283,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,283,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,283,284,284,284,284,285,284,284,284,284,284,284,283,284,284,284,283,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284]],In=class{constructor(){x(this,"values");this.values=[];const e=-.405714750289917,n=1.2608942985534668-e,i=999;for(let r=0;r<U1.length;r++){this.values[r]=[];for(let o=0;o<U1[0].length;o++)this.values[r][o]=e+n*U1[r][o]/i}}static getInstance(){return In.instance||(In.instance=new In),In.instance}};let hr=In;x(hr,"instance");const aA=hr.getInstance(),Ft=function(s,e,t=5){let n=0;for(let i=0;i<t;i++){let r=Math.max(0,Math.min(s+i-Math.floor(t/2)||0,aA.values[0].length-1));n+=aA.values[e][r]}return n/t};class $4 extends zt{constructor(){super();x(this,"startFrame",12821);x(this,"endFrame",14399);x(this,"scene",new It);x(this,"camera",new Gt(-1,1,1,-1,0,100));x(this,"quad");x(this,"shader",AA);x(this,"cum",0);x(this,"renderTarget",new je(3840,2160));this.quad=new ge(new Mt(2,2),new Ze({uniforms:{time:{value:0},fadeprogression:{value:0},blackness:{value:0},color:{value:new ie(0)}},fragmentShader:AA,vertexShader:Et,side:At}).clone()),this.scene.add(this.quad),this.quad.material.uniforms.color.value=new ie("#ddaa88")}resize(t,n){this.renderTarget.setSize(t,n)}update(t){this.cum+=Math.abs(Ft(t,1,3))}render(t,n,i){this.quad.material.uniforms.fadeprogression.value=1,this.quad.material.uniforms.blackness.value=1;var r=Pn(0,(t-12820)/300,1);if(console.log(r),this.quad.material.uniforms.time.value=w2(0,.05,r)+this.cum*r,t>13600){var o=Pn(0,(t-13900)/800,1);if(console.log(o),this.quad.material.uniforms.fadeprogression.value=1+o*10,t<13900){var A=Math.sin((t-13600)/300*3.14);this.quad.material.uniforms.blackness.value=1+A*2}}n.setRenderTarget(this.renderTarget),n.render(this.scene,this.camera)}}var cA=`varying vec2 vUv;\r
uniform float time;\r
uniform float flight;\r
uniform float flighth;\r
uniform float flights;\r
uniform float music;\r
uniform float cum;\r
uniform float end;\r
uniform float end2;\r
uniform vec3 color;\r
\r
//------------------------------------------------------------------------\r
// Here rather hacky and very basic sphere tracer, feel free to replace.\r
//------------------------------------------------------------------------\r
\r
// fField(p) is the final SDF definition, declared at the very bottom\r
\r
#define PI 3.14159265\r
\r
const int iterations = 200;\r
const float dist_eps = .001;\r
const float ray_max = 200.0;\r
const float fog_density = .03;\r
\r
const float cam_dist = 5.;\r
\r
float fField(vec3 p);\r
\r
vec3 dNormal(vec3 p)\r
{\r
   const vec2 e = vec2(.005,0);\r
   return normalize(vec3(\r
      fField(p + e.xyy) - fField(p - e.xyy),\r
      fField(p + e.yxy) - fField(p - e.yxy),\r
      fField(p + e.yyx) - fField(p - e.yyx) ));\r
}\r
\r
vec4 trace(vec3 ray_start, vec3 ray_dir)\r
{\r
   float ray_len = 0.0;\r
   vec3 p = ray_start;\r
   for(int i=0; i<iterations; ++i) {\r
   	  float dist = fField(p) / 4.;\r
      if (dist < dist_eps) break;\r
      if (ray_len > ray_max) return vec4(0.0);\r
      p += dist*ray_dir;\r
      ray_len += dist;\r
   }\r
   return vec4(p, 1.0);\r
}\r
\r
// abs(0+0-1)=1\r
// abs(1+0-1)=0\r
// abs(0+1-1)=0\r
// abs(1+1-1)=1\r
float xnor(float x, in float y) { return abs(x+y-1.0); }\r
\r
vec4 checker_texture(vec3 pos, float sample_size)\r
{\r
\r
   \r
   vec4 path_line_color = vec4(0., 0., 1.0, 1.0); \r
   vec4 sep_line_color = vec4(0., 0., 1.0, 1.0);\r
   vec4 ground_color = vec4(.1, .1, .1, 1.0);\r
    \r
   float tile_size = 0.3;\r
   float line_width = 0.01;\r
   float tpx = mod(pos.x - line_width / 2., tile_size);\r
   float tpz = mod(pos.z - line_width / 2., tile_size);\r
   if (pos.x > 0. && pos.x < 0.6) {\r
      return vec4(1.0);\r
   }   \r
    if (tpx < line_width) {\r
    	return sep_line_color;\r
    } else if (tpz < line_width) {\r
        return sep_line_color;\r
    } else if (tpz + tpx > tile_size && tpz + tpx < tile_size + line_width) {\r
        return sep_line_color;\r
    } else {\r
    	return ground_color;\r
    }\r
    \r
    \r
   pos = pos*8.0 + .5;\r
   vec3 cell = step(1.0,mod(pos,2.0));\r
   float checker = xnor(xnor(cell.x,cell.y),cell.z);\r
   vec4 col = mix(vec4(.4),vec4(.5),checker);\r
   float fade = 1.-min(1.,sample_size*24.); // very fake "AA"\r
   col = mix(vec4(.5),col,fade);\r
   pos = abs(fract(pos)-.5);\r
   float d = max(max(pos.x,pos.y),pos.z);\r
   d = smoothstep(.45,.5,d)*fade;\r
   return mix(col,vec4(0.0),d);\r
}\r
\r
vec3 sky_color(vec3 ray_dir, vec3 light_dir)\r
{\r
   float d = max(0.,dot(ray_dir,light_dir));\r
   float d2 = light_dir.y*.7+.3;\r
   vec3 base_col;\r
   base_col = mix(vec3(.3),vec3((ray_dir.y<0.)?0.:1.),abs(ray_dir.y));\r
   return base_col*d2;\r
}\r
\r
vec4 debug_plane(vec3 ray_start, vec3 ray_dir, float cut_plane, inout float ray_len)\r
{\r
    // Fancy lighty debug plane\r
    if (ray_start.y > cut_plane && ray_dir.y < 0.) {\r
       float d = (ray_start.y - cut_plane) / -ray_dir.y;\r
       if (d < ray_len) {\r
           vec3 hit = ray_start + ray_dir*d;\r
           float hit_dist = fField(hit);\r
           float iso = fract(hit_dist*5.0);\r
           vec3 dist_color = mix(vec3(.2,.4,.6),vec3(.2,.2,.4),iso);\r
           dist_color *= 1.0/(max(0.0,hit_dist)+.001);\r
           ray_len = d;\r
           return vec4(dist_color,.1);\r
      }\r
   }\r
   return vec4(0);\r
}\r
\r
vec3 shade(vec3 ray_start, vec3 ray_dir, vec3 light_dir, vec4 hit)\r
{\r
   vec3 fog_color = sky_color(ray_dir, light_dir);\r
   \r
   float ray_len;\r
   vec3 color;\r
   if (hit.w == 0.0) {\r
      ray_len = 1e16;\r
      color = fog_color;\r
   } else {\r
      vec3 dir = hit.xyz - ray_start;\r
      vec3 norm = dNormal(hit.xyz);\r
      float diffuse = max(0.0, dot(norm, light_dir));\r
      float spec = max(0.0,dot(reflect(light_dir,norm),normalize(dir)));\r
      spec = pow(spec, 16.0)*.5;\r
       \r
      ray_len = length(dir);\r
   \r
      vec3 base_color = vec3(0.4, 0.4, 0.8);\r
      base_color = checker_texture(hit.xyz,ray_len/2160.).xyz;\r
      color = mix(vec3(0.,.1,.3),vec3(1.,1.,.9),diffuse)*base_color +\r
         spec*vec3(1.,1.,.9);\r
\r
      float fog_dist = ray_len;\r
      float fog = 1.0 - 1.0/exp(fog_dist*fog_density);\r
      color = mix(color, fog_color, fog);\r
   }\r
   \r
   \r
    \r
   float cut_plane0 = sin(time - 4.)*.15 - .8;\r
   for(int k=0; k<4; ++k) {\r
      vec4 dpcol = debug_plane(ray_start, ray_dir, cut_plane0+float(k)*.75, ray_len);\r
      //if (dpcol.w == 0.) continue;\r
      float fog_dist = ray_len;\r
      dpcol.w *= 1.0/exp(fog_dist*.05);\r
      //color = mix(color,dpcol.xyz,dpcol.w);\r
   }\r
\r
   return color;\r
}\r
\r
\r
void main() {\r
   vec2 uv = vUv;\r
   uv.x -= 0.5;\r
	uv.y -= 0.5;\r
   uv.y *= -1.;\r
\r
 \r
   vec3 light_dir = normalize(vec3(.5, 1.0, -.25));\r
   \r
   // Simple model-view matrix:\r
   float ang, si, co;\r
   ang = time*.15;\r
   si = sin(ang); co = cos(ang);\r
   mat4 cam_mat = mat4(\r
      co, 0., si, 0.,\r
      0., 1., 0., 0.,\r
     -si, 0., co, 0.,\r
      0., 0., 0., 1.);\r
   ang = time*.2 + 3.8;\r
   si = sin(ang); co = cos(ang);\r
   cam_mat = cam_mat * mat4(\r
      1., 0., 0., 0.,\r
      0., co, si, 0.,\r
      0.,-si, co, 0.,\r
      0., 0., 0., 1.);\r
\r
   vec3 pos = vec3(cam_mat*vec4(-1.2, 0.2, 0.25, 1.0)) + vec3(flights, -0.2 + flighth, -flight);\r
   vec3 dir = normalize(vec3(cam_mat*vec4(uv, 1., 0.)));\r
   \r
   vec3 color = shade(pos, dir, light_dir, trace(pos, dir));\r
   color = pow(color,vec3(.44));\r
\r
   vec3 fadeColor = vec3(0.9515, 0.3296875, .9) * end2;\r
   color = color * (1. - end2) + fadeColor;\r
   gl_FragColor = vec4(color, 1.);\r
}\r
\r
//------------------------------------------------------------------------\r
// Your custom SDF\r
//------------------------------------------------------------------------\r
\r
float rand(vec2 n) { \r
	return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r
}\r
\r
\r
float noise(vec2 p, float unit){\r
	vec2 ij = floor(p/unit);\r
	vec2 xy = mod(p,unit)/unit;\r
	//xy = 3.*xy*xy-2.*xy*xy*xy;\r
	xy = .5*(1.-cos(PI*xy));\r
	float a = rand((ij+vec2(0.,0.)));\r
	float b = rand((ij+vec2(1.,0.)));\r
	float c = rand((ij+vec2(0.,1.)));\r
	float d = rand((ij+vec2(1.,1.)));\r
	float x1 = mix(a, b, xy.x);\r
	float x2 = mix(c, d, xy.x);\r
	return mix(x1, x2, xy.y);\r
}\r
\r
float bumpy_terrain(vec3 p) {\r
 	float large_scale_noise = noise(vec2(p.x, p.z), 1.) - noise(vec2(0., p.z), 1.) - music * cos(p.x * 2. + p.y) * end;\r
    float small_scale_noise = noise(vec2(p.x, p.z), .2) - noise(vec2(0., p.z), .2);\r
    return p.y + 1.0 * cos(p.x) - 0.3 * small_scale_noise - 1.0 * large_scale_noise;   \r
}\r
\r
float fField(vec3 p)\r
{   \r
    //pMod3(p, vec3(1.));\r
    float tile_size = 0.3;\r
    // Snap point x and y. Snapped to the tile below.\r
    float tpx = mod(p.x, tile_size);\r
    float tpz = mod(p.z, tile_size);\r
    float spx = p.x - tpx;\r
    float spz = p.z - tpz;\r
    \r
    float t00 = bumpy_terrain(vec3(spx, p.y, spz));\r
    float d00t01 = bumpy_terrain(vec3(spx, p.y, spz - tile_size)) - t00;\r
    float d00t10 = bumpy_terrain(vec3(spx - tile_size, p.y, spz)) - t00;\r
    float t11 = bumpy_terrain(vec3(spx - tile_size, p.y, spz - tile_size));\r
    float d11t01 = bumpy_terrain(vec3(spx, p.y, spz - tile_size)) - t11;\r
    float d11t10 = bumpy_terrain(vec3(spx - tile_size, p.y, spz)) - t11;\r
    \r
    if (tpx + tpz > tile_size) {\r
        return t00 + d00t10 * (1. - tpx / tile_size) + d00t01 * (1. - tpz / tile_size);\r
    } else {\r
        return t11 + d11t01 * tpx / tile_size + d11t10 * tpz / tile_size;// + d11t01 * (1. - tpz / tile_size);\r
    }\r
    \r
	\r
                              \r
    \r
    return mod(p.x, tile_size) * bumpy_terrain(vec3(spx, p.y, spz)) + (tile_size - mod(p.x, tile_size)) * bumpy_terrain(vec3(spx - tile_size, p.y, spz));\r
    //return bumpy_terrain(p);\r
}\r
\r
\r
`;class ed extends zt{constructor(){super();x(this,"startFrame",14400);x(this,"endFrame",15992);x(this,"scene",new It);x(this,"camera",new Gt(-1,1,1,-1,0,100));x(this,"quad");x(this,"shader",cA);x(this,"cum",0);x(this,"renderTarget",new je(3840,2160));this.quad=new ge(new Mt(2,2),new Ze({uniforms:{time:{value:0},color:{value:new ie(0)},flight:{value:0},flighth:{value:0},flights:{value:0},music:{value:0},cum:{value:0},end:{value:0},end2:{value:0}},fragmentShader:cA,vertexShader:Et,side:At}).clone()),this.scene.add(this.quad),this.quad.material.uniforms.color.value=new ie("#ddaa88")}update(t){this.cum+=Math.abs(Ft(t,1,3))}resize(t,n){this.renderTarget.setSize(t,n)}render(t,n,i){this.quad.material.uniforms.time.value=Math.min(t,14900)/60+Math.sin(this.cum)/5,this.quad.material.uniforms.flighth.value=(Math.min(t,14527)-14400)/200,this.quad.material.uniforms.flight.value=Math.pow(t-14400,1.4)/200,this.quad.material.uniforms.flights.value=(Math.min(t,14827)-14400)/200,this.quad.material.uniforms.music.value=Ft(t,0,10),this.quad.material.uniforms.cum.value=this.cum,this.quad.material.uniforms.end.value=Math.max(0,(t-14850)/100),this.quad.material.uniforms.end2.value=Math.max(0,(t-15620)/800),n.setRenderTarget(this.renderTarget),n.render(this.scene,this.camera)}}var ms="assets/envMap.3697fad9.jpg";class td extends zt{constructor(){super();x(this,"startFrame",9844);x(this,"endFrame",12821);x(this,"carbon_count",53);x(this,"tagCount",53);x(this,"scene",new It);x(this,"camera",new mt);x(this,"light1",new Sn);x(this,"light2",new Gr(16777215,1));x(this,"envMapTexture",new at);x(this,"mesh_array");x(this,"hydrogen_geometry",new D2(1,30,30));x(this,"carbon_geometry",new D2(2,30,30));x(this,"hydrogen_material",new Oe({color:9864139,clearcoat:1,envMap:this.envMapTexture}));x(this,"carbon_material",new Oe({color:426955,clearcoat:1,envMap:this.envMapTexture}));x(this,"molecule_container");x(this,"carbon_container");x(this,"hydrogen_container");x(this,"music_intensity",0);x(this,"tagContainers",new Array);x(this,"canvas",new Array);x(this,"canvasTexture",new Array);x(this,"tags",new Array);x(this,"renderTarget",new je(640,360));x(this,"greets",["Ninjadev","ft Bitbear","at Black Valley","appreciate","Altair","Cocoon","Mercury","Desire","Farbrausch","Offence","Darklite","rootkids","Mr Doob","Dekadence","Excess","fnuque","Loonies","Logicoma","Ephidrena","Alcatraz","Schnappsgirls","Kvasigen","Proxima","Amigafin","asd","Still","CNCD","Conspiracy","\xDCmla\xFCt Design","Panda Cube","Titan","Enigma","Byterapers","Flopine","Off White","Spacepigs","Nuance","Virgill","H0ffman","Haujobb","Speckdrumm","Red Sector Inc.","lft","LJ","Sinatra","Censor Design","Rothie","Critikill","Desmond Tutu","Skuggemannen","Modulo One","Black Valley crew","and attendees!"]);this.mesh_array=new Array;const t=new Dr;this.envMapTexture=t.load(ms),this.envMapTexture.mapping=Gn,this.envMapTexture.encoding=Ve,this.scene.background=this.envMapTexture,this.scene.background.rotation=Math.PI,this.molecule_container=new ge,this.carbon_container=new ge,this.hydrogen_container=new ge,this.molecule_container.add(this.carbon_container),this.molecule_container.add(this.hydrogen_container),this.scene.add(this.molecule_container);for(var n=0;n<this.carbon_count;n++)this.add_carbon();for(var n=0;n<this.carbon_count;n++)for(var i=0;i<2;i++)this.add_hydrogen();this.light1=new Sn(16777215,60),this.light1.position.set(15,15,0),this.scene.add(this.light1),this.scene.add(this.light2),this.camera.position.z=-10,this.camera.fov=75,this.camera.aspect=16/9,this.camera.updateProjectionMatrix();for(var n=0;n<this.tagCount;n++){this.tagContainers.push(new Ne),this.canvas.push(document.createElement("canvas")),this.canvasTexture.push(new at(this.canvas[n])),n<4?this.tags.push(new ge(new Mt(10,2.5),new Qt({map:this.canvasTexture[n],transparent:!0,side:At}))):this.tags.push(new ge(new Mt(8,2),new Qt({map:this.canvasTexture[n],transparent:!0,side:At}))),this.tagContainers[n].add(this.tags[n]),this.scene.add(this.tagContainers[n]),this.tagContainers[n].lookAt(new w(-10,0,0)),this.canvasTexture[n].encoding=Ve,this.canvas[n].width=2048,this.canvas[n].height=512;const A=this.carbon_position(n);this.tagContainers[n].position.set(A.x,A.y+.5*((n-1)%2),A.z),n<24?(this.tags[n].position.set(6.4,0,0),this.tagContainers[n].lookAt(new w(-1e3+n*24,0,Math.min(n*100,1e3)))):(this.tags[n].position.set(-6.4,0,0),this.tagContainers[n].lookAt(new w(1e3+n*50,0,Math.max(4300-n*100,1e3)))),n==52&&(this.tags[n].position.set(6.4,0,0),this.tagContainers[n].lookAt(new w(1e3+n*50,0,Math.max(4300-n*100,1e3))))}for(var n=0;n<this.tagCount;n++){const A=this.canvas[n].getContext("2d");if(!A)return;var r=n%2*256;n==3&&(r=180),n==24&&(r=210),A.clearRect(0,0,this.canvas[n].width,this.canvas[n].height),A.fillStyle="#a0a0ff",A.font="bold 170px Arial",A.textBaseline="middle",A.beginPath(),n<24||n==52?(A.textAlign="left",A.fillText(this.greets[n],540,128+r),A.moveTo(512,128+r),A.lineTo(35,256)):(A.textAlign="right",A.fillText(this.greets[n],2048-540,128+r),n==41&&A.fillText("Tristar &",2048-840,-128+r),A.moveTo(2048-512,128+r),A.lineTo(2048-35,256)),A.lineWidth=35,A.strokeStyle="#a0a0ff",A.lineCap="round",A.stroke(),this.canvasTexture[n].needsUpdate=!0,this.canvasTexture[n].encoding=Ve}}add_carbon(){var t=new ge(this.carbon_geometry,this.carbon_material);this.carbon_container.add(t)}add_hydrogen(){var t=new ge(this.hydrogen_geometry,this.hydrogen_material);this.hydrogen_container.add(t)}carbon_position(t){var n=new w(t*4.1,-1+(t+1)%2*2,0);return n}hydrogen_position(t,n){var i=this.carbon_position(t),r=new w(0,(-2+4*((t+1)%2))*(1+this.music_intensity/5),-2+4*(n%2));return i.add(r)}update(t){}resize(t,n){this.renderTarget.setSize(t,n)}render(t,n,i){var r=i.sync.step,o=(t-i.sync.frameForStep(r-r%4))/i.sync.frameForStep(1);this.music_intensity=Math.sin(o),this.camera.position.x=10*Math.sin(t*.002+1.4),this.camera.position.z=10*Math.cos(t*.002+1.4),this.camera.lookAt(this.molecule_container.position);for(var A=0;A<this.carbon_count;A++){var a=this.carbon_position(A);this.carbon_container.children[A].position.set(a.x,a.y,a.z),this.carbon_container.children[A].scale.x=1+this.music_intensity/5}for(var A=0;A<this.carbon_count;A++)for(var c=0;c<2;c++){var a=this.hydrogen_position(A,c);this.hydrogen_container.children[2*A+c].position.set(a.x,a.y,a.z)}for(var A=0;A<this.carbon_count;A++){this.carbon_container.children[A].visible=!1;for(var c=0;c<2;c++){var a=this.hydrogen_position(A,c);this.hydrogen_container.children[2*A+c].visible=!1}}for(var A=0;A<this.tagCount;A++)this.tags[A].visible=!1;if(r>1710){var l=Math.min((t-i.sync.frameForStep(1710))/20,1);this.carbon_container.children[0].scale.x=l*(1+this.music_intensity/5),this.carbon_container.children[0].scale.y=l*(1+this.music_intensity/5),this.carbon_container.children[0].scale.z=l*(1+this.music_intensity/5),this.carbon_container.children[0].visible=!0,this.tags[0].visible=!0}if(r>1742){var l=Math.min((t-i.sync.frameForStep(1742))/20,1);this.hydrogen_container.children[0].scale.x=l*(1+this.music_intensity/5),this.hydrogen_container.children[0].scale.y=l*(1+this.music_intensity/5),this.hydrogen_container.children[0].scale.z=l*(1+this.music_intensity/5),this.hydrogen_container.children[0].visible=!0,this.hydrogen_container.children[1].scale.x=l*(1+this.music_intensity/5),this.hydrogen_container.children[1].scale.y=l*(1+this.music_intensity/5),this.hydrogen_container.children[1].scale.z=l*(1+this.music_intensity/5),this.hydrogen_container.children[1].visible=!0}if(r>1776){var l=Math.min((t-i.sync.frameForStep(1776))/20,1);this.carbon_container.children[1].scale.x=l*(1+this.music_intensity/5),this.carbon_container.children[1].scale.y=l*(1+this.music_intensity/5),this.carbon_container.children[1].scale.z=l*(1+this.music_intensity/5),this.carbon_container.children[1].visible=!0,this.tags[1].visible=!0,this.hydrogen_container.children[2].scale.x=l*(1+this.music_intensity/5),this.hydrogen_container.children[2].scale.y=l*(1+this.music_intensity/5),this.hydrogen_container.children[2].scale.z=l*(1+this.music_intensity/5),this.hydrogen_container.children[2].visible=!0,this.hydrogen_container.children[3].scale.x=l*(1+this.music_intensity/5),this.hydrogen_container.children[3].scale.y=l*(1+this.music_intensity/5),this.hydrogen_container.children[3].scale.z=l*(1+this.music_intensity/5),this.hydrogen_container.children[3].visible=!0}if(r>1810){var l=Math.min((t-i.sync.frameForStep(1810))/20,1);this.carbon_container.children[2].scale.x=l*(1+this.music_intensity/5),this.carbon_container.children[2].scale.y=l*(1+this.music_intensity/5),this.carbon_container.children[2].scale.z=l*(1+this.music_intensity/5),this.carbon_container.children[2].visible=!0,this.tags[2].visible=!0,this.carbon_container.children[3].scale.x=l*(1+this.music_intensity/5),this.carbon_container.children[3].scale.y=l*(1+this.music_intensity/5),this.carbon_container.children[3].scale.z=l*(1+this.music_intensity/5),this.carbon_container.children[3].visible=!0,this.tags[3].visible=!0,this.hydrogen_container.children[4].scale.x=l*(1+this.music_intensity/5),this.hydrogen_container.children[4].scale.y=l*(1+this.music_intensity/5),this.hydrogen_container.children[4].scale.z=l*(1+this.music_intensity/5),this.hydrogen_container.children[4].visible=!0,this.hydrogen_container.children[5].scale.x=l*(1+this.music_intensity/5),this.hydrogen_container.children[5].scale.y=l*(1+this.music_intensity/5),this.hydrogen_container.children[5].scale.z=l*(1+this.music_intensity/5),this.hydrogen_container.children[5].visible=!0,this.hydrogen_container.children[6].scale.x=l*(1+this.music_intensity/5),this.hydrogen_container.children[6].scale.y=l*(1+this.music_intensity/5),this.hydrogen_container.children[6].scale.z=l*(1+this.music_intensity/5),this.hydrogen_container.children[6].visible=!0,this.hydrogen_container.children[7].scale.x=l*(1+this.music_intensity/5),this.hydrogen_container.children[7].scale.y=l*(1+this.music_intensity/5),this.hydrogen_container.children[7].scale.z=l*(1+this.music_intensity/5),this.hydrogen_container.children[7].visible=!0}if(r>1840){for(var A=0;A<Math.min(this.carbon_count,4+(r-1840)/4);A++){this.carbon_container.children[A].visible=!0,this.tags[A].visible=!0,A-4>=0&&(this.tags[A-4].visible=!1);for(var c=0;c<2;c++)this.hydrogen_container.children[2*A+c].visible=!0}this.camera.position.x+=(t-i.sync.frameForStep(1840))/5.7}if(r>2036){var l=Math.min((t-i.sync.frameForStep(2036))/181,1);this.camera.position.x=this.camera.position.x*(1-l)+215.65*l,this.camera.position.y=this.camera.position.y*(1-l)+1.3*l,this.camera.position.z=this.camera.position.z*(1-l)-.55*l}n.setRenderTarget(this.renderTarget),n.render(this.scene,this.camera)}}const lA=["donut","standing_donut","wide_cube","simple_cube","tall_cube","square_cube","big_cube","puck","ball","pyramid"];class ur extends zt{constructor(){super();x(this,"startFrame",6560);x(this,"endFrame",9859);x(this,"sceneId",0);x(this,"scene",new It);x(this,"camera",new Gt(-6,6,6*(9/16),-6*(9/16)));x(this,"objects",{});x(this,"objectIndex",0);x(this,"grid",{});x(this,"renderTarget",new je(3840,2160));x(this,"envMapTexture");x(this,"gridSize",12);x(this,"sceneCenter",new w(this.gridSize/2,0,this.gridSize/2));x(this,"buildingIdx",0);x(this,"buildingCooling",0);x(this,"accumulatedAudio",0);x(this,"sunLight",new Ur(1048575,.8));x(this,"slots",[...Array(this.gridSize).keys()].map(()=>[...Array(this.gridSize).fill(!1)]));x(this,"color",14012367);x(this,"colors",{simple_cube:this.color,wide_cube:this.color,tall_cube:this.color,square_cube:this.color,big_cube:this.color,ball:this.color,pyramid:9366773,donut:16513228,standing_donut:16513228,puck:10732787});x(this,"line",{geomerty:new J2(1/50,1/50,4e3),slotSize:new w,offset_position:new w(0,0,0),material:new Oe({clearcoat:1,color:5592405,emissive:5592405,emissiveIntensity:.1})});x(this,"sculptures",{donut:{type:"donut",geomerty:new zn(.25,.15,64,64),slotSize:new w(1,1,1),offset_position:new w(.5,.2,.5),material:new Oe({clearcoat:1,color:this.colors.donut}),rotation:new w(Math.PI/2,0,0)},standing_donut:{type:"standing_donut",geomerty:new zn(.25,.15,64,64),slotSize:new w(1,1,1),offset_position:new w(.5,.5,.5),material:new Oe({clearcoat:1,color:this.colors.standing_donut})},simple_cube:{type:"simple_cube",geomerty:new it(.9,.9,.9),slotSize:new w(1,1,1),offset_position:new w(.5,.5,.5),material:new Oe({clearcoat:1,color:this.colors.simple_cube})},wide_cube:{type:"wide_cube",geomerty:new it(1.9,.9,.9),slotSize:new w(2,1,1),offset_position:new w(1,.5,.5),material:new Oe({clearcoat:1,color:this.colors.wide_cube})},tall_cube:{type:"tall_cube",geomerty:new it(.9,1.9,.9),slotSize:new w(1,2,1),offset_position:new w(.5,1,.5),material:new Oe({clearcoat:1,color:this.colors.tall_cube})},square_cube:{type:"square_cube",geomerty:new it(1.9,.9,1.9),slotSize:new w(2,1,2),offset_position:new w(1,.5,1),material:new Oe({clearcoat:1,color:this.colors.square_cube})},big_cube:{type:"big_cube",geomerty:new it(1.9,1.9,1.9),slotSize:new w(2,2,2),offset_position:new w(1,1,1),material:new Oe({clearcoat:1,color:this.colors.big_cube})},puck:{type:"puck",geomerty:new J2(.45,.45,.25,64),slotSize:new w(1,1,1),offset_position:new w(.5,.5,.5),material:new Oe({clearcoat:1,color:this.colors.puck,metalness:1,roughness:0,specularIntensity:1})},ball:{type:"ball",geomerty:new D2(.45),slotSize:new w(1,1,1),offset_position:new w(.5,.5,.5),material:new Oe({clearcoat:1,color:this.colors.ball})},pyramid:{type:"pyramid",geomerty:new Fr(.45,.7,4),slotSize:new w(1,1,1),offset_position:new w(.5,.4,.5),material:new Oe({clearcoat:1,color:this.colors.pyramid})}});x(this,"addGridLine",(t,n,i)=>{let r="line"+t;const o=new ge(this.line.geomerty,this.line.material);o.position.set(n.x,n.y,n.z),o.rotation.set(i.x,i.y,i.z),this.scene.add(o),this.grid[r]=o});x(this,"setColor",t=>{t&&(this.colors=qn(qn({},this.colors),t)),Object.values(this.sculptures).map(n=>{n.material.color=new ie(this.colors[n.type])})});x(this,"setSceneId",t=>{this.sceneId=t});x(this,"fillSlotsWith",(t,n)=>{if(!(!this.slots||!t||!n))for(var i=n.x;i<n.x+t.slotSize.x;i++)for(var r=n.z;r<n.z+t.slotSize.z;r++)this.slots[i]&&(this.slots[i][r]=!0)});x(this,"getRandomEmptySlot",()=>{let t=Math.floor(Math.random()*this.gridSize),n=Math.floor(Math.random()*this.gridSize);return this.slots[t][n]?this.getRandomEmptySlot():new w(t,0,n)});x(this,"getRandomSculptureType",()=>lA[Math.floor(lA.length*Math.random())|0]);x(this,"addBoxLight",(t,n,i)=>{let r=new ds(16711680,.1,this.gridSize,this.gridSize);r.position.set(t,n,i),r.lookAt(this.sceneCenter),this.scene.add(r)});x(this,"addObject",(t,n,i)=>{let r=t+n;const o=this.sculptures[t],A=new ge(o.geomerty,o.material),a=o.offset_position;A.position.set(i.x+a.x,i.y+a.y,i.z+a.z),o.rotation&&A.rotation.set(o.rotation.x,o.rotation.y,o.rotation.z),this.fillSlotsWith(o,i),this.scene.add(A),this.objects[r]=A});const t=new Dr;this.envMapTexture=t.load(ms),this.envMapTexture.mapping=Gn,this.envMapTexture.encoding=Ve;let n=new Gr(16777215,.8);this.scene.add(n),this.scene.add(this.sunLight);for(var i=-50;i<50;i+=1)this.addGridLine(i*1e3,new w(i,0,0),new w(Math.PI/2,0,0));for(var r=-50;r<50;r+=1)this.addGridLine(r,new w(0,0,r),new w(0,0,Math.PI/2));this.addObject("big_cube",20,new w(6,0,4)),this.addObject("big_cube",21,new w(7,0,6)),this.addObject("big_cube",22,new w(4,0,5)),this.addObject("square_cube",30,new w(8,0,4)),this.addObject("square_cube",31,new w(5,0,7)),this.addObject("square_cube",32,new w(2,0,4)),this.addObject("tall_cube",40,new w(6,0,6)),this.addObject("tall_cube",41,new w(9,0,6)),this.addObject("tall_cube",42,new w(5,0,4)),this.addObject("tall_cube",42,new w(7,0,3)),this.addObject("wide_cube",50,new w(6,0,2)),this.addObject("wide_cube",51,new w(9,0,3)),this.addObject("wide_cube",52,new w(2,0,3)),this.addObject("wide_cube",50,new w(6,0,9)),this.addObject("wide_cube",51,new w(9,0,8)),this.addObject("wide_cube",52,new w(2,0,7)),this.objectIndex=1e3;for(var o=0;o<this.slots.length;o++)for(var A=0;A<this.slots[o].length;A++)if(!this.slots[o][A])switch(Math.floor(Math.random()*3)){case 0:this.addObject("ball",this.objectIndex++,new w(o,0,A));break;case 1:this.addObject("pyramid",this.objectIndex++,new w(o,0,A));break;case 2:this.addObject("simple_cube",this.objectIndex++,new w(o,0,A));break}for(var a in this.objects)this.objects[a].visible=!1;this.camera.updateProjectionMatrix()}isSlotsFilled(t){for(let n of t)for(let i of n)if(!i)return!1;return!0}resize(t,n){this.renderTarget.setSize(t,n)}update(t){this.accumulatedAudio+=Ft(t,0,3)}render(t,n,i){var r=i.sync.step,A=r-1048;let a=0;for(var c in this.objects)r%4==0&&(A>=a&&(this.objects[c].visible=!0),r>1056&&Math.random()*100<2&&(this.objects[c].visible=!0),a=a+1);const l=1440,h=1584;let u=.5;if(h>r&&r>=l){const y=h-l;let M=(r-l)/y;u=.5+1*M}function f(y,Q,M=.3,I=!1){const T=1+Q,U=1+Q*.25;Math.abs(y.scale.y-T)>=M&&(y.scale.x=U,y.scale.y=T,y.scale.z=U,I&&y.material.color.addScalar(u))}const g=1200,p=["big_cube","square_cube","tall_cube","wide_cube","simple_cube","ball"];if(r>g){let y=Math.tanh(Ft(t,0,3));Math.tanh(Ft(t,1,3)),Math.tanh(Ft(t,2,3));let Q=!0;for(var c in this.objects)c.includes(p[this.buildingIdx%p.length])&&(f(this.objects[c],y,.3,Q),Q=!1);const M=.3;Math.abs(y)>=M&&this.buildingCooling==0&&(this.buildingIdx++,this.buildingCooling=20),this.buildingCooling>0&&this.buildingCooling--;for(var c in this.objects){const T=this.objects[c],U=T.scale.y-1,X=T.scale.x-1;U!=0&&(T.scale.x=1+X*.95,T.scale.y=1+U*.95,T.scale.z=1+X*.95)}for(var d in p)for(var c in this.objects)if(c.includes(p[d])){const T=this.objects[c];let U=.987;T.material.color.multiplyScalar(U);break}}const m=1284,v=1344;m>r&&r>1044?(this.camera.position.y=70+2*(this.startFrame/this.endFrame)*Math.sin(this.accumulatedAudio),this.camera.position.x=150*Math.sin(t*.002+1.4),this.camera.position.z=150*Math.cos(t*.002+1.4),this.camera.lookAt(this.sceneCenter)):v>r&&r>=m?(this.camera.position.x=2*Math.sin(t*.002+1.4),this.camera.position.z=4*Math.cos(t*.002+1.4),this.camera.position.y=400,this.camera.lookAt(this.sceneCenter)):r>=v&&(this.camera.position.x=100,this.camera.position.z=100,this.camera.position.y=400,this.camera.lookAt(this.sceneCenter)),this.camera.lookAt(this.sceneCenter),this.sunLight.position.x=150*Math.sin(t*.002+1.4),this.sunLight.position.z=150*Math.cos(t*.002+1.4),this.sunLight.lookAt(this.sceneCenter),this.sculptures.big_cube.material.emissiveIntensity=.5+.5*Math.sin(t*.002+1.4),this.line.material.emissiveIntensity=.5+.5*Math.sin(t*.002+1.4),n.setRenderTarget(this.renderTarget),n.render(this.scene,this.camera)}}var nd=`varying vec2 vUv;\r
uniform sampler2D slashinghard1;\r
uniform sampler2D slashinghard2;\r
uniform sampler2D slashinghard3;\r
uniform float frame;\r
uniform float cutAcrossProgression;\r
uniform float cutAcrossAngle;\r
uniform float cutAcrossWidth;\r
uniform float gcutAcrossProgression;\r
uniform float gcutAcrossAngle;\r
uniform float gcutAcrossWidth;\r
uniform float diamondsWidth;\r
uniform bool end;\r
\r
#define CELLSIZE 0.15\r
\r
void main() {\r
    vec3 color = texture2D(slashinghard1, vUv).rgb;\r
    if (end) {\r
        color = texture2D(slashinghard1, vUv).rgb * vec3(0.2, .6, 0.2);\r
    }\r
    if (cutAcrossWidth > 0.) {\r
        float x_start = 0.5 + sin(cutAcrossAngle) * (0.5 - cutAcrossProgression);\r
        float x_stop = 0.5 + sin(cutAcrossAngle) * (0.5 - (cutAcrossProgression + cutAcrossWidth));\r
        float y_start = 0.5 + cos(cutAcrossAngle) * (0.5 - cutAcrossProgression);\r
        float y_stop = 0.5 + cos(cutAcrossAngle) * (0.5 - (cutAcrossProgression + cutAcrossWidth));\r
        if ( vUv.x > x_start && vUv.x < x_stop && vUv.y > y_start && vUv.y < y_stop) {\r
            color = texture2D(slashinghard2, vUv).rgb;\r
        }\r
\r
        float cx = vUv.x - 0.5;\r
        float cy = (vUv.y - 0.5) * 9. / 16.;\r
        float pixel_progression = cx * cos(cutAcrossAngle) - cy * sin(cutAcrossAngle);\r
\r
        if ( pixel_progression < cutAcrossProgression + cutAcrossWidth && \r
            pixel_progression > cutAcrossProgression - cutAcrossWidth) {\r
            color = texture2D(slashinghard2, vUv).rgb;\r
        }\r
    }\r
    if (gcutAcrossWidth > 0.) {\r
        float x_start = 0.5 + sin(gcutAcrossAngle) * (0.5 - gcutAcrossProgression);\r
        float x_stop = 0.5 + sin(gcutAcrossAngle) * (0.5 - (gcutAcrossProgression + gcutAcrossWidth));\r
        float y_start = 0.5 + cos(gcutAcrossAngle) * (0.5 - gcutAcrossProgression);\r
        float y_stop = 0.5 + cos(gcutAcrossAngle) * (0.5 - (gcutAcrossProgression + gcutAcrossWidth));\r
        if ( vUv.x > x_start && vUv.x < x_stop && vUv.y > y_start && vUv.y < y_stop) {\r
            color = texture2D(slashinghard3, vUv).rgb;\r
        }\r
\r
        float cx = vUv.x - 0.5;\r
        float cy = (vUv.y - 0.5) * 9. / 16.;\r
        float pixel_progression = cx * cos(gcutAcrossAngle) - cy * sin(gcutAcrossAngle);\r
\r
        if ( pixel_progression < gcutAcrossProgression + gcutAcrossWidth && \r
            pixel_progression > gcutAcrossProgression - gcutAcrossWidth) {\r
            color = texture2D(slashinghard3, vUv).rgb;\r
        }\r
    }\r
\r
    if (diamondsWidth > 0.) {\r
        float cx = vUv.x - 0.5;\r
        float cy = (vUv.y - 0.5) * 9. / 16.;\r
        \r
        cx = mod(cx, CELLSIZE) - CELLSIZE / 2.0;\r
        cy = mod(cy, CELLSIZE) - CELLSIZE / 2.0;\r
        if (abs(cx) + abs(cy) < CELLSIZE * diamondsWidth) {\r
            color = texture2D(slashinghard2, vUv).rgb;\r
            //color = vec3(0.1, 0.1, 0.1);\r
        }\r
    }\r
    gl_FragColor = vec4(color, 1.);\r
}\r
`;class id extends zt{constructor(){super();x(this,"startFrame",6560);x(this,"endFrame",9846);x(this,"scene",new It);x(this,"camera",new Gt(-1,1,1,-1,0,100));x(this,"quad");x(this,"shader",O1);x(this,"cum",0);x(this,"renderTarget",new je(3840,2160));x(this,"children",da({slashinghard1:ur,slashinghard2:ur,slashinghard3:ur}));this.children.slashinghard1.setSceneId(1),this.children.slashinghard2.setSceneId(2),this.children.slashinghard3.setSceneId(3),this.children.slashinghard1.setColor({}),this.children.slashinghard2.setColor({simple_cube:4473924,wide_cube:4473924,tall_cube:14540253,square_cube:4473924,big_cube:16777215,ball:4473924,pyramid:4473924}),this.children.slashinghard3.setColor({simple_cube:2276130,wide_cube:2276130,tall_cube:2276130,square_cube:2276130,big_cube:16777215,ball:2276130,pyramid:2276130}),this.quad=new ge(new it(2,2,2),new Ze({uniforms:{frame:{value:0},slashinghard1:{value:null},slashinghard2:{value:null},slashinghard3:{value:null},cutAcrossProgression:{value:0},cutAcrossAngle:{value:0},cutAcrossWidth:{value:0},gcutAcrossProgression:{value:0},gcutAcrossAngle:{value:0},gcutAcrossWidth:{value:0},ggcutAcrossProgression:{value:0},ggcutAcrossAngle:{value:0},ggcutAcrossWidth:{value:0},end:{value:!1},diamondsWidth:{value:0}},fragmentShader:nd,vertexShader:Et,side:At}).clone()),this.scene.add(this.quad),this.scene.add(this.camera)}resize(t,n){this.renderTarget.setSize(t,n)}update(t){this.cum+=Ft(t,1,3),t==6770&&(this.cum=0),t==7200&&(this.cum=0)}render(t,n,i){if(this.quad.material.uniforms.frame.value=t/60,this.quad.material.uniforms.cutAcrossWidth.value=0,this.quad.material.uniforms.gcutAcrossWidth.value=0,this.quad.material.uniforms.diamondsWidth.value=0,this.quad.material.uniforms.end.value=0,t<6770){var r=(t-6653)/37;this.quad.material.uniforms.cutAcrossAngle.value=Math.PI*2*.6-r/2,this.quad.material.uniforms.cutAcrossProgression.value=r-1.5,this.quad.material.uniforms.cutAcrossWidth.value=1}else if(t<7120){var r=(t-6800)/90,o=Math.max(0,(t-7002)/(7100-7002));this.quad.material.uniforms.cutAcrossAngle.value=Math.PI*2*.6,this.quad.material.uniforms.cutAcrossProgression.value=w2(-1,0,r)+this.cum/80-.1+o,this.quad.material.uniforms.cutAcrossWidth.value=.06}else if(t<7440){var A=Pn(0,(t-7120)/60,1);this.quad.material.uniforms.diamondsWidth.value=A*(.5-Math.abs(Ft(t,1,15)*4))}else if(!(t<8241))if(t<8341){var r=(t-8241)/100;this.quad.material.uniforms.cutAcrossAngle.value=Math.PI*2*.6,this.quad.material.uniforms.cutAcrossProgression.value=-1+r*2,this.quad.material.uniforms.cutAcrossWidth.value=.06}else if(t<8550){var r=(t-8550)/-100;this.quad.material.uniforms.cutAcrossAngle.value=Math.PI*2*.3,this.quad.material.uniforms.cutAcrossProgression.value=-1+r*1.6,this.quad.material.uniforms.cutAcrossWidth.value=.25}else if(t<8762){var r=(t-8644)/100;this.quad.material.uniforms.cutAcrossAngle.value=Math.PI*2*.1,this.quad.material.uniforms.cutAcrossProgression.value=-1+r*2,this.quad.material.uniforms.cutAcrossWidth.value=.06}else if(t<8962){var r=(t-8822)/100;this.quad.material.uniforms.gcutAcrossAngle.value=Math.PI*2*.3,this.quad.material.uniforms.gcutAcrossProgression.value=-1+r*1.5,this.quad.material.uniforms.gcutAcrossWidth.value=.06}else if(t<9320){var r=(t-9220)/100;this.quad.material.uniforms.gcutAcrossAngle.value=Math.PI*2*.3,this.quad.material.uniforms.gcutAcrossProgression.value=-1+r*1.5,this.quad.material.uniforms.gcutAcrossWidth.value=.06}else{var r=(t-9660)/100;this.quad.material.uniforms.gcutAcrossAngle.value=Math.PI*2*.3,this.quad.material.uniforms.gcutAcrossProgression.value=-1+r*1.5,this.quad.material.uniforms.gcutAcrossWidth.value=.6,t>9712&&(this.quad.material.uniforms.end.value=!0)}this.quad.material.uniforms.slashinghard1.value=this.children.slashinghard1.renderTarget.texture,this.quad.material.uniforms.slashinghard2.value=this.children.slashinghard2.renderTarget.texture,this.quad.material.uniforms.slashinghard3.value=this.children.slashinghard3.renderTarget.texture,n.setRenderTarget(this.renderTarget),n.render(this.scene,this.camera)}}const hA=["donut","standing_donut","wide_cube","simple_cube","tall_cube","square_cube","big_cube","puck","ball","pyramid"];class rd extends zt{constructor(){super();x(this,"startFrame",5760);x(this,"endFrame",6560);x(this,"progression",0);x(this,"duration",this.endFrame-this.startFrame);x(this,"sceneId",0);x(this,"lastKickCount",0);x(this,"scene",new It);x(this,"camera",new Gt(-2,2,2*(9/16),-2*(9/16)));x(this,"objects",{});x(this,"objectIndex",0);x(this,"grid",{});x(this,"renderTarget",new je(3840,2160));x(this,"envMapTexture");x(this,"gridSize",12);x(this,"sceneCenter",new w(this.gridSize/2,0,this.gridSize/2));x(this,"buildingIdx",0);x(this,"buildingCooling",0);x(this,"accumulatedAudio",0);x(this,"sunLight",new Ur(1048575,.8));x(this,"slots",[...Array(this.gridSize).keys()].map(()=>[...Array(this.gridSize).fill(!1)]));x(this,"color",14012367);x(this,"audio1",0);x(this,"colors",{simple_cube:this.color,wide_cube:this.color,tall_cube:this.color,square_cube:this.color,big_cube:this.color,ball:426955,pyramid:9366773,donut:16513228,standing_donut:16513228,puck:10732787});x(this,"line",{geomerty:new J2(1/50,1/50,4e3),slotSize:new w,offset_position:new w(0,0,0),material:new Oe({clearcoat:1,color:5592405,emissive:5592405,emissiveIntensity:.1})});x(this,"sculptures",{donut:{type:"donut",geomerty:new zn(.25,.15,64,64),slotSize:new w(1,1,1),offset_position:new w(.5,.2,.5),material:new Oe({clearcoat:1,color:this.colors.donut}),rotation:new w(Math.PI/2,0,0)},standing_donut:{type:"standing_donut",geomerty:new zn(.25,.15,64,64),slotSize:new w(1,1,1),offset_position:new w(.5,.5,.5),material:new Oe({clearcoat:1,color:this.colors.standing_donut})},simple_cube:{type:"simple_cube",geomerty:new it(.9,.9,.9),slotSize:new w(1,1,1),offset_position:new w(.5,.5,.5),material:new Oe({clearcoat:1,color:this.colors.simple_cube})},wide_cube:{type:"wide_cube",geomerty:new it(1.9,.9,.9),slotSize:new w(2,1,1),offset_position:new w(1,.5,.5),material:new Oe({clearcoat:1,color:this.colors.wide_cube})},tall_cube:{type:"tall_cube",geomerty:new it(.9,1.9,.9),slotSize:new w(1,2,1),offset_position:new w(.5,1,.5),material:new Oe({clearcoat:1,color:this.colors.tall_cube})},square_cube:{type:"square_cube",geomerty:new it(1.9,.9,1.9),slotSize:new w(2,1,2),offset_position:new w(1,.5,1),material:new Oe({clearcoat:1,color:this.colors.square_cube})},big_cube:{type:"big_cube",geomerty:new it(1.9,1.9,1.9),slotSize:new w(2,2,2),offset_position:new w(1,1,1),material:new Oe({clearcoat:1,color:this.colors.big_cube})},puck:{type:"puck",geomerty:new J2(.45,.45,.25,64),slotSize:new w(1,1,1),offset_position:new w(.5,.5,.5),material:new Oe({clearcoat:1,color:this.colors.puck,metalness:1,roughness:0,specularIntensity:1})},ball:{type:"ball",geomerty:new D2(.45),slotSize:new w(1,1,1),offset_position:new w(.5,.5,.5),material:new Oe({clearcoat:1,color:this.colors.ball})},pyramid:{type:"pyramid",geomerty:new Fr(.45,.7,4),slotSize:new w(1,1,1),offset_position:new w(.5,.4,.5),material:new Oe({clearcoat:1,color:this.colors.pyramid})}});x(this,"addGridLine",(t,n,i)=>{let r="line"+t;const o=new ge(this.line.geomerty,this.line.material);o.position.set(n.x,n.y,n.z),o.rotation.set(i.x,i.y,i.z),this.scene.add(o),this.grid[r]=o});x(this,"setColor",t=>{t&&(this.colors=qn(qn({},this.colors),t)),Object.values(this.sculptures).map(n=>{n.material.color=new ie(this.colors[n.type])})});x(this,"setSceneId",t=>{this.sceneId=t});x(this,"fillSlotsWith",(t,n)=>{if(!(!this.slots||!t||!n))for(var i=n.x;i<n.x+t.slotSize.x;i++)for(var r=n.z;r<n.z+t.slotSize.z;r++)this.slots[i]&&(this.slots[i][r]=!0)});x(this,"getRandomEmptySlot",()=>{let t=Math.floor(Math.random()*this.gridSize),n=Math.floor(Math.random()*this.gridSize);return this.slots[t][n]?this.getRandomEmptySlot():new w(t,0,n)});x(this,"getRandomSculptureType",()=>hA[Math.floor(hA.length*Math.random())|0]);x(this,"addBoxLight",(t,n,i)=>{let r=new ds(16711680,.1,this.gridSize,this.gridSize);r.position.set(t,n,i),r.lookAt(this.sceneCenter),this.scene.add(r)});x(this,"addMolecule",t=>{this.addObject("ball",20,t);let n=new ge(new D2(.45),new Oe({clearcoat:1,color:9864139}));n.position.set(t.x,t.y+.8,t.z),n.scale.set(.5,.5,.5),this.scene.add(n);let i=new ge(new D2(.45),new Oe({clearcoat:1,color:9864139}));i.position.set(t.x+1,t.y+.8,t.z+1),i.scale.set(.5,.5,.5),this.scene.add(i)});x(this,"addObject",(t,n,i)=>{let r=t+n;const o=this.sculptures[t],A=new ge(o.geomerty,o.material),a=o.offset_position;A.position.set(i.x+a.x,i.y+a.y,i.z+a.z),o.rotation&&A.rotation.set(o.rotation.x,o.rotation.y,o.rotation.z),this.fillSlotsWith(o,i),this.scene.add(A),this.objects[r]=A});x(this,"calculateKickCount",t=>{let n=1;var i=896;return t>=i+34&&n++,t>=i+36&&n++,t>=i+38&&n++,t>=i+40&&n++,t>=i+42&&n++,t>=i+44&&n++,t>=i+46&&n++,t>=i+50&&n++,t>=i+52&&n++,t>=i+54&&n++,t>=i+56&&n++,t>=i+58&&n++,t>=i+60&&n++,t>=i+62&&n++,t>=i+66&&n++,t>=i+68&&n++,t>=i+70&&n++,t>=i+72&&n++,t>=i+74&&n++,t>=i+76&&n++,t>=i+78&&n++,t>=i+82&&n++,t>=i+84&&n++,t>=i+86&&n++,t>=i+88&&n++,t>=i+90&&n++,t>=i+92&&n++,t>=i+94&&n++,t>=i+98&&n++,t>=i+100&&n++,t>=i+102&&n++,t>=i+104&&n++,t>=i+106&&n++,t>=i+108&&n++,t>=i+110&&n++,t>=i+114&&n++,t>=i+116&&n++,t>=i+118&&n++,t>=i+120&&n++,t>=i+122&&n++,t>=i+124&&n++,t>=i+126&&n++,t>=i+130&&n++,t>=i+132&&n++,t>=i+134&&n++,t>=i+136&&n++,t>=i+138&&n++,t>=i+140&&n++,t>=i+142&&n++,t>=i+146&&n++,t>=i+148&&n++,t>=i+150&&n++,t>=i+152&&n++,t>=i+154&&n++,t>=i+156&&n++,t>=i+158&&n++,t>=i+162&&n++,t>=i+164&&n++,t>=i+168&&n++,t>=i+170&&n++,t>=i+172&&n++,t>=i+174&&n++,t>=i+176&&n++,n});const t=new Dr;this.envMapTexture=t.load(ms),this.envMapTexture.mapping=Gn,this.envMapTexture.encoding=Ve;let n=new Gr(16777215,.8);this.scene.add(n),this.scene.add(this.sunLight);for(var i=-50;i<50;i+=1)this.addGridLine(i*1e3,new w(i,0,0),new w(Math.PI/2,0,0));for(var r=-50;r<50;r+=1)this.addGridLine(r,new w(0,0,r),new w(0,0,Math.PI/2));this.addMolecule(this.sceneCenter),this.objectIndex=1e3,this.camera.updateProjectionMatrix()}isSlotsFilled(t){for(let n of t)for(let i of n)if(!i)return!1;return!0}resize(t,n){this.renderTarget.setSize(t,n)}update(t){this.progression=1-(this.endFrame-t)/this.duration,this.audio1=Math.tanh(Ft(t,0,3)),this.accumulatedAudio+=Ft(t,0,3)}render(t,n,i){var r=i.sync.step;const o=this.calculateKickCount(r),A=1010,a=1-(A-r)/(A-i.sync.stepForFrame(this.startFrame));r<930?(this.camera.position.x=.5,this.camera.position.z=.5,this.camera.position.y=w2(100,10,a),this.camera.lookAt(new w(.5,.5,.5))):(this.camera.position.x=Math.sin(o*(1/12)*Math.PI)*200.5,this.camera.position.z=Math.cos(o*(1/12)*Math.PI)*200.5,this.camera.position.y=w2(w2(100,10,a*2),w2(10,100,a*2),a),this.camera.lookAt(new w(6.5,.5,6.5))),this.camera.zoom=w2(1,1/3,a),this.camera.updateProjectionMatrix(),this.lastKickCount<o&&(this.lastKickCount=o,this.addMolecule(new w(0)),this.addMolecule(this.getRandomEmptySlot())),this.sunLight.position.x=150*Math.sin(t*.002+1.4),this.sunLight.position.z=150*Math.cos(t*.002+1.4),this.sunLight.lookAt(this.sceneCenter),this.line.material.emissiveIntensity=.5+.5*Math.sin(t*.002+1.4),n.setRenderTarget(this.renderTarget),n.render(this.scene,this.camera)}}var uA=`varying vec2 vUv;\r
uniform float time;\r
uniform float progression;\r
uniform vec3 color;\r
uniform float audio1;\r
uniform float audio2;\r
uniform float audio3;\r
uniform float cum;\r
uniform float lifeX;\r
uniform vec2 sunPos;\r
uniform int moleculesLength;\r
uniform vec3 molecules[100];\r
\r
#define PI 3.14159265\r
#define uVu vUv\r
\r
//-----------------------------------------------------------------------------\r
// Simple test/port of Mercury's SDF GLSL library: http://mercury.sexy/hg_sdf/\r
// by Tom '2015\r
// Disclaimer:\r
//   The library is done by Mercury team for OpenGL 4+ (look below),\r
//   not me, and this is just an unofficial port.\r
//-----------------------------------------------------------------------------\r
\r
////////////////////////////////////////////////////////////////\r
//\r
//                           HG_SDF\r
//\r
//     GLSL LIBRARY FOR BUILDING SIGNED DISTANCE BOUNDS\r
//\r
//     version 2015-12-15 (initial release)\r
//\r
//     Check http://mercury.sexy/hg_sdf for updates\r
//     and usage examples. Send feedback to spheretracing@mercury.sexy.\r
//\r
//     Brought to you by MERCURY http://mercury.sexy\r
//\r
//\r
//\r
// Released as Creative Commons Attribution-NonCommercial (CC BY-NC)\r
//\r
////////////////////////////////////////////////////////////////\r
\r
\r
////////////////////////////////////////////////////////////////\r
//\r
//             HELPER FUNCTIONS/MACROS\r
//\r
////////////////////////////////////////////////////////////////\r
\r
#define PI 3.14159265\r
#define TAU (2*PI)\r
#define PHI (1.618033988749895)\r
     // PHI (sqrt(5)*0.5 + 0.5)\r
\r
// Clamp to [0,1] - this operation is free under certain circumstances.\r
// For further information see\r
// http://www.humus.name/Articles/Persson_LowLevelThinking.pdf and\r
// http://www.humus.name/Articles/Persson_LowlevelShaderOptimization.pdf\r
\r
// Sign function that doesn't return 0\r
float sgn(float x) {\r
	return (x<0.)?-1.:1.;\r
}\r
\r
float square (float x) {\r
	return x*x;\r
}\r
\r
vec2 square (vec2 x) {\r
	return x*x;\r
}\r
\r
vec3 square (vec3 x) {\r
	return x*x;\r
}\r
\r
float lengthSqr(vec3 x) {\r
	return dot(x, x);\r
}\r
\r
\r
// Maximum/minumum elements of a vector\r
float vmax(vec2 v) {\r
	return max(v.x, v.y);\r
}\r
\r
float vmax(vec3 v) {\r
	return max(max(v.x, v.y), v.z);\r
}\r
\r
float vmax(vec4 v) {\r
	return max(max(v.x, v.y), max(v.z, v.w));\r
}\r
\r
float vmin(vec2 v) {\r
	return min(v.x, v.y);\r
}\r
\r
float vmin(vec3 v) {\r
	return min(min(v.x, v.y), v.z);\r
}\r
\r
float vmin(vec4 v) {\r
	return min(min(v.x, v.y), min(v.z, v.w));\r
}\r
\r
\r
\r
\r
////////////////////////////////////////////////////////////////\r
//\r
//             PRIMITIVE DISTANCE FUNCTIONS\r
//\r
////////////////////////////////////////////////////////////////\r
//\r
// Conventions:\r
//\r
// Everything that is a distance function is called fSomething.\r
// The first argument is always a point in 2 or 3-space called <p>.\r
// Unless otherwise noted, (if the object has an intrinsic "up"\r
// side or direction) the y axis is "up" and the object is\r
// centered at the origin.\r
//\r
////////////////////////////////////////////////////////////////\r
\r
float fSphere(vec3 p, float r) {\r
	return length(p) - r;\r
}\r
\r
// Plane with normal n (n is normalized) at some distance from the origin\r
float fPlane(vec3 p, vec3 n, float distanceFromOrigin) {\r
	return dot(p, n) + distanceFromOrigin;\r
}\r
\r
// Cheap Box: distance to corners is overestimated\r
float fBoxCheap(vec3 p, vec3 b) { //cheap box\r
	return vmax(abs(p) - b);\r
}\r
\r
// Box: correct distance to corners\r
float fBox(vec3 p, vec3 b) {\r
	vec3 d = abs(p) - b;\r
	return length(max(d, vec3(0))) + vmax(min(d, vec3(0)));\r
}\r
\r
// Same as above, but in two dimensions (an endless box)\r
float fBox2Cheap(vec2 p, vec2 b) {\r
	return vmax(abs(p)-b);\r
}\r
\r
float fBox2(vec2 p, vec2 b) {\r
	vec2 d = abs(p) - b;\r
	return length(max(d, vec2(0))) + vmax(min(d, vec2(0)));\r
}\r
\r
\r
// Endless "corner"\r
float fCorner (vec2 p) {\r
	return length(max(p, vec2(0))) + vmax(min(p, vec2(0)));\r
}\r
\r
// Blobby ball object. You've probably seen it somewhere. This is not a correct distance bound, beware.\r
float fBlob(vec3 p) {\r
	p = abs(p);\r
	if (p.x < max(p.y, p.z)) p = p.yzx;\r
	if (p.x < max(p.y, p.z)) p = p.yzx;\r
	float b = max(max(max(\r
		dot(p, normalize(vec3(1, 1, 1))),\r
		dot(p.xz, normalize(vec2(PHI+1., 1)))),\r
		dot(p.yx, normalize(vec2(1, PHI)))),\r
		dot(p.xz, normalize(vec2(1, PHI))));\r
	float l = length(p);\r
	return l - 1.5 - 0.2 * (1.5 / 2.)* cos(min(sqrt(1.01 - b / l)*(PI / 0.25), PI));\r
}\r
\r
// Cylinder standing upright on the xz plane\r
float fCylinder(vec3 p, float r, float height) {\r
	float d = length(p.xz) - r;\r
	d = max(d, abs(p.y) - height);\r
	return d;\r
}\r
\r
// Capsule: A Cylinder with round caps on both sides\r
float fCapsule(vec3 p, float r, float c) {\r
	return mix(length(p.xz) - r, length(vec3(p.x, abs(p.y) - c, p.z)) - r, step(c, abs(p.y)));\r
}\r
\r
// Distance to line segment between <a> and <b>, used for fCapsule() version 2below\r
float fLineSegment(vec3 p, vec3 a, vec3 b) {\r
	vec3 ab = b - a;\r
	float t = saturate(dot(p - a, ab) / dot(ab, ab));\r
	return length((ab*t + a) - p);\r
}\r
\r
// Capsule version 2: between two end points <a> and <b> with radius r \r
float fCapsule(vec3 p, vec3 a, vec3 b, float r) {\r
	return fLineSegment(p, a, b) - r;\r
}\r
\r
// Torus in the XZ-plane\r
float fTorus(vec3 p, float smallRadius, float largeRadius) {\r
	return length(vec2(length(p.xz) - largeRadius, p.y)) - smallRadius;\r
}\r
\r
// A circle line. Can also be used to make a torus by subtracting the smaller radius of the torus.\r
float fCircle(vec3 p, float r) {\r
	float l = length(p.xz) - r;\r
	return length(vec2(p.y, l));\r
}\r
\r
// A circular disc with no thickness (i.e. a cylinder with no height).\r
// Subtract some value to make a flat disc with rounded edge.\r
float fDisc(vec3 p, float r) {\r
 float l = length(p.xz) - r;\r
	return l < 0. ? abs(p.y) : length(vec2(p.y, l));\r
}\r
\r
// Hexagonal prism, circumcircle variant\r
float fHexagonCircumcircle(vec3 p, vec2 h) {\r
	vec3 q = abs(p);\r
	return max(q.y - h.y, max(q.x*sqrt(3.)*0.5 + q.z*0.5, q.z) - h.x);\r
	//this is mathematically equivalent to this line, but less efficient:\r
	//return max(q.y - h.y, max(dot(vec2(cos(PI/3), sin(PI/3)), q.zx), q.z) - h.x);\r
}\r
\r
// Hexagonal prism, incircle variant\r
float fHexagonIncircle(vec3 p, vec2 h) {\r
	return fHexagonCircumcircle(p, vec2(h.x*sqrt(3.)*0.5, h.y));\r
}\r
\r
// Cone with correct distances to tip and base circle. Y is up, 0 is in the middle of the base.\r
float fCone(vec3 p, float radius, float height) {\r
	vec2 q = vec2(length(p.xz), p.y);\r
	vec2 tip = q - vec2(0, height);\r
	vec2 mantleDir = normalize(vec2(height, radius));\r
	float mantle = dot(tip, mantleDir);\r
	float d = max(mantle, -q.y);\r
	float projected = dot(tip, vec2(mantleDir.y, -mantleDir.x));\r
	\r
	// distance to tip\r
	if ((q.y > height) && (projected < 0.)) {\r
		d = max(d, length(tip));\r
	}\r
	\r
	// distance to base ring\r
	if ((q.x > radius) && (projected > length(vec2(height, radius)))) {\r
		d = max(d, length(q - vec2(radius, 0)));\r
	}\r
	return d;\r
}\r
\r
//\r
// "Generalized Distance Functions" by Akleman and Chen.\r
// see the Paper at https://www.viz.tamu.edu/faculty/ergun/research/implicitmodeling/papers/sm99.pdf\r
//\r
// This set of constants is used to construct a large variety of geometric primitives.\r
// Indices are shifted by 1 compared to the paper because we start counting at Zero.\r
// Some of those are slow whenever a driver decides to not unroll the loop,\r
// which seems to happen for fIcosahedron und fTruncatedIcosahedron on nvidia 350.12 at least.\r
// Specialized implementations can well be faster in all cases.\r
//\r
\r
// Macro based version for GLSL 1.2 / ES 2.0 by Tom\r
\r
#define GDFVector0 vec3(1, 0, 0)\r
#define GDFVector1 vec3(0, 1, 0)\r
#define GDFVector2 vec3(0, 0, 1)\r
\r
#define GDFVector3 normalize(vec3(1, 1, 1 ))\r
#define GDFVector4 normalize(vec3(-1, 1, 1))\r
#define GDFVector5 normalize(vec3(1, -1, 1))\r
#define GDFVector6 normalize(vec3(1, 1, -1))\r
\r
#define GDFVector7 normalize(vec3(0, 1, PHI+1.))\r
#define GDFVector8 normalize(vec3(0, -1, PHI+1.))\r
#define GDFVector9 normalize(vec3(PHI+1., 0, 1))\r
#define GDFVector10 normalize(vec3(-PHI-1., 0, 1))\r
#define GDFVector11 normalize(vec3(1, PHI+1., 0))\r
#define GDFVector12 normalize(vec3(-1, PHI+1., 0))\r
\r
#define GDFVector13 normalize(vec3(0, PHI, 1))\r
#define GDFVector14 normalize(vec3(0, -PHI, 1))\r
#define GDFVector15 normalize(vec3(1, 0, PHI))\r
#define GDFVector16 normalize(vec3(-1, 0, PHI))\r
#define GDFVector17 normalize(vec3(PHI, 1, 0))\r
#define GDFVector18 normalize(vec3(-PHI, 1, 0))\r
\r
#define fGDFBegin float d = 0.;\r
\r
// Version with variable exponent.\r
// This is slow and does not produce correct distances, but allows for bulging of objects.\r
#define fGDFExp(v) d += pow(abs(dot(p, v)), e);\r
\r
// Version with without exponent, creates objects with sharp edges and flat faces\r
#define fGDF(v) d = max(d, abs(dot(p, v)));\r
\r
#define fGDFExpEnd return pow(d, 1./e) - r;\r
#define fGDFEnd return d - r;\r
\r
// Primitives follow:\r
\r
float fOctahedron(vec3 p, float r, float e) {\r
	fGDFBegin\r
    fGDFExp(GDFVector3) fGDFExp(GDFVector4) fGDFExp(GDFVector5) fGDFExp(GDFVector6)\r
    fGDFExpEnd\r
}\r
\r
float fDodecahedron(vec3 p, float r, float e) {\r
	fGDFBegin\r
    fGDFExp(GDFVector13) fGDFExp(GDFVector14) fGDFExp(GDFVector15) fGDFExp(GDFVector16)\r
    fGDFExp(GDFVector17) fGDFExp(GDFVector18)\r
    fGDFExpEnd\r
}\r
\r
float fIcosahedron(vec3 p, float r, float e) {\r
	fGDFBegin\r
    fGDFExp(GDFVector3) fGDFExp(GDFVector4) fGDFExp(GDFVector5) fGDFExp(GDFVector6)\r
    fGDFExp(GDFVector7) fGDFExp(GDFVector8) fGDFExp(GDFVector9) fGDFExp(GDFVector10)\r
    fGDFExp(GDFVector11) fGDFExp(GDFVector12)\r
    fGDFExpEnd\r
}\r
\r
float fTruncatedOctahedron(vec3 p, float r, float e) {\r
	fGDFBegin\r
    fGDFExp(GDFVector0) fGDFExp(GDFVector1) fGDFExp(GDFVector2) fGDFExp(GDFVector3)\r
    fGDFExp(GDFVector4) fGDFExp(GDFVector5) fGDFExp(GDFVector6)\r
    fGDFExpEnd\r
}\r
\r
float fTruncatedIcosahedron(vec3 p, float r, float e) {\r
	fGDFBegin\r
    fGDFExp(GDFVector3) fGDFExp(GDFVector4) fGDFExp(GDFVector5) fGDFExp(GDFVector6)\r
    fGDFExp(GDFVector7) fGDFExp(GDFVector8) fGDFExp(GDFVector9) fGDFExp(GDFVector10)\r
    fGDFExp(GDFVector11) fGDFExp(GDFVector12) fGDFExp(GDFVector13) fGDFExp(GDFVector14)\r
    fGDFExp(GDFVector15) fGDFExp(GDFVector16) fGDFExp(GDFVector17) fGDFExp(GDFVector18)\r
    fGDFExpEnd\r
}\r
\r
float fOctahedron(vec3 p, float r) {\r
	fGDFBegin\r
    fGDF(GDFVector3) fGDF(GDFVector4) fGDF(GDFVector5) fGDF(GDFVector6)\r
    fGDFEnd\r
}\r
\r
float fDodecahedron(vec3 p, float r) {\r
    fGDFBegin\r
    fGDF(GDFVector13) fGDF(GDFVector14) fGDF(GDFVector15) fGDF(GDFVector16)\r
    fGDF(GDFVector17) fGDF(GDFVector18)\r
    fGDFEnd\r
}\r
\r
float fIcosahedron(vec3 p, float r) {\r
	fGDFBegin\r
    fGDF(GDFVector3) fGDF(GDFVector4) fGDF(GDFVector5) fGDF(GDFVector6)\r
    fGDF(GDFVector7) fGDF(GDFVector8) fGDF(GDFVector9) fGDF(GDFVector10)\r
    fGDF(GDFVector11) fGDF(GDFVector12)\r
    fGDFEnd\r
}\r
\r
float fTruncatedOctahedron(vec3 p, float r) {\r
	fGDFBegin\r
    fGDF(GDFVector0) fGDF(GDFVector1) fGDF(GDFVector2) fGDF(GDFVector3)\r
    fGDF(GDFVector4) fGDF(GDFVector5) fGDF(GDFVector6)\r
    fGDFEnd\r
}\r
\r
float fTruncatedIcosahedron(vec3 p, float r) {\r
	fGDFBegin\r
    fGDF(GDFVector3) fGDF(GDFVector4) fGDF(GDFVector5) fGDF(GDFVector6)\r
    fGDF(GDFVector7) fGDF(GDFVector8) fGDF(GDFVector9) fGDF(GDFVector10)\r
    fGDF(GDFVector11) fGDF(GDFVector12) fGDF(GDFVector13) fGDF(GDFVector14)\r
    fGDF(GDFVector15) fGDF(GDFVector16) fGDF(GDFVector17) fGDF(GDFVector18)\r
    fGDFEnd\r
}\r
\r
\r
////////////////////////////////////////////////////////////////\r
//\r
//                DOMAIN MANIPULATION OPERATORS\r
//\r
////////////////////////////////////////////////////////////////\r
//\r
// Conventions:\r
//\r
// Everything that modifies the domain is named pSomething.\r
//\r
// Many operate only on a subset of the three dimensions. For those,\r
// you must choose the dimensions that you want manipulated\r
// by supplying e.g. <p.x> or <p.zx>\r
//\r
// <inout p> is always the first argument and modified in place.\r
//\r
// Many of the operators partition space into cells. An identifier\r
// or cell index is returned, if possible. This return value is\r
// intended to be optionally used e.g. as a random seed to change\r
// parameters of the distance functions inside the cells.\r
//\r
// Unless stated otherwise, for cell index 0, <p> is unchanged and cells\r
// are centered on the origin so objects don't have to be moved to fit.\r
//\r
//\r
////////////////////////////////////////////////////////////////\r
\r
\r
\r
// Rotate around a coordinate axis (i.e. in a plane perpendicular to that axis) by angle <a>.\r
// Read like this: R(p.xz, a) rotates "x towards z".\r
// This is fast if <a> is a compile-time constant and slower (but still practical) if not.\r
void pR(inout vec2 p, float a) {\r
	p = cos(a)*p + sin(a)*vec2(p.y, -p.x);\r
}\r
\r
// Shortcut for 45-degrees rotation\r
void pR45(inout vec2 p) {\r
	p = (p + vec2(p.y, -p.x))*sqrt(0.5);\r
}\r
\r
// Repeat space along one axis. Use like this to repeat along the x axis:\r
// <float cell = pMod1(p.x,5);> - using the return value is optional.\r
float pMod1(inout float p, float size) {\r
	float halfsize = size*0.5;\r
	float c = floor((p + halfsize)/size);\r
	p = mod(p + halfsize, size) - halfsize;\r
	return c;\r
}\r
\r
// Same, but mirror every second cell so they match at the boundaries\r
float pModMirror1(inout float p, float size) {\r
	float halfsize = size*0.5;\r
	float c = floor((p + halfsize)/size);\r
	p = mod(p + halfsize,size) - halfsize;\r
	p *= mod(c, 2.0)*2. - 1.;\r
	return c;\r
}\r
\r
// Repeat the domain only in positive direction. Everything in the negative half-space is unchanged.\r
float pModSingle1(inout float p, float size) {\r
	float halfsize = size*0.5;\r
	float c = floor((p + halfsize)/size);\r
	if (p >= 0.)\r
		p = mod(p + halfsize, size) - halfsize;\r
	return c;\r
}\r
\r
// Repeat only a few times: from indices <start> to <stop> (similar to above, but more flexible)\r
float pModInterval1(inout float p, float size, float start, float stop) {\r
	float halfsize = size*0.5;\r
	float c = floor((p + halfsize)/size);\r
	p = mod(p+halfsize, size) - halfsize;\r
	if (c > stop) { //yes, this might not be the best thing numerically.\r
		p += size*(c - stop);\r
		c = stop;\r
	}\r
	if (c <start) {\r
		p += size*(c - start);\r
		c = start;\r
	}\r
	return c;\r
}\r
\r
\r
// Repeat around the origin by a fixed angle.\r
// For easier use, num of repetitions is use to specify the angle.\r
float pModPolar(inout vec2 p, float repetitions) {\r
	float angle = 2.*PI/repetitions;\r
	float a = atan(p.y, p.x) + angle/2.;\r
	float r = length(p);\r
	float c = floor(a/angle);\r
	a = mod(a,angle) - angle/2.;\r
	p = vec2(cos(a), sin(a))*r;\r
	// For an odd number of repetitions, fix cell index of the cell in -x direction\r
	// (cell index would be e.g. -5 and 5 in the two halves of the cell):\r
	if (abs(c) >= (repetitions/2.)) c = abs(c);\r
	return c;\r
}\r
\r
// Repeat in two dimensions\r
vec2 pMod2(inout vec2 p, vec2 size) {\r
	vec2 c = floor((p + size*0.5)/size);\r
	p = mod(p + size*0.5,size) - size*0.5;\r
	return c;\r
}\r
\r
// Same, but mirror every second cell so all boundaries match\r
vec2 pModMirror2(inout vec2 p, vec2 size) {\r
	vec2 halfsize = size*0.5;\r
	vec2 c = floor((p + halfsize)/size);\r
	p = mod(p + halfsize, size) - halfsize;\r
	p *= mod(c,vec2(2))*2. - vec2(1);\r
	return c;\r
}\r
\r
// Same, but mirror every second cell at the diagonal as well\r
vec2 pModGrid2(inout vec2 p, vec2 size) {\r
	vec2 c = floor((p + size*0.5)/size);\r
	p = mod(p + size*0.5, size) - size*0.5;\r
	p *= mod(c,vec2(2))*2. - vec2(1);\r
	p -= size/2.;\r
	if (p.x > p.y) p.xy = p.yx;\r
	return floor(c/2.);\r
}\r
\r
// Repeat in three dimensions\r
vec3 pMod3(inout vec3 p, vec3 size) {\r
	vec3 c = floor((p + size*0.5)/size);\r
	p = mod(p + size*0.5, size) - size*0.5;\r
	return c;\r
}\r
\r
// Mirror at an axis-aligned plane which is at a specified distance <dist> from the origin.\r
float pMirror (inout float p, float dist) {\r
	float s = sign(p);\r
	p = abs(p)-dist;\r
	return s;\r
}\r
\r
// Mirror in both dimensions and at the diagonal, yielding one eighth of the space.\r
// translate by dist before mirroring.\r
vec2 pMirrorOctant (inout vec2 p, vec2 dist) {\r
	vec2 s = sign(p);\r
	pMirror(p.x, dist.x);\r
	pMirror(p.y, dist.y);\r
	if (p.y > p.x)\r
		p.xy = p.yx;\r
	return s;\r
}\r
\r
// Reflect space at a plane\r
float pReflect(inout vec3 p, vec3 planeNormal, float offset) {\r
	float t = dot(p, planeNormal)+offset;\r
	if (t < 0.) {\r
		p = p - (2.*t)*planeNormal;\r
	}\r
	return sign(t);\r
}\r
\r
\r
////////////////////////////////////////////////////////////////\r
//\r
//             OBJECT COMBINATION OPERATORS\r
//\r
////////////////////////////////////////////////////////////////\r
//\r
// We usually need the following boolean operators to combine two objects:\r
// Union: OR(a,b)\r
// Intersection: AND(a,b)\r
// Difference: AND(a,!b)\r
// (a and b being the distances to the objects).\r
//\r
// The trivial implementations are min(a,b) for union, max(a,b) for intersection\r
// and max(a,-b) for difference. To combine objects in more interesting ways to\r
// produce rounded edges, chamfers, stairs, etc. instead of plain sharp edges we\r
// can use combination operators. It is common to use some kind of "smooth minimum"\r
// instead of min(), but we don't like that because it does not preserve Lipschitz\r
// continuity in many cases.\r
//\r
// Naming convention: since they return a distance, they are called fOpSomething.\r
// The different flavours usually implement all the boolean operators above\r
// and are called fOpUnionRound, fOpIntersectionRound, etc.\r
//\r
// The basic idea: Assume the object surfaces intersect at a right angle. The two\r
// distances <a> and <b> constitute a new local two-dimensional coordinate system\r
// with the actual intersection as the origin. In this coordinate system, we can\r
// evaluate any 2D distance function we want in order to shape the edge.\r
//\r
// The operators below are just those that we found useful or interesting and should\r
// be seen as examples. There are infinitely more possible operators.\r
//\r
// They are designed to actually produce correct distances or distance bounds, unlike\r
// popular "smooth minimum" operators, on the condition that the gradients of the two\r
// SDFs are at right angles. When they are off by more than 30 degrees or so, the\r
// Lipschitz condition will no longer hold (i.e. you might get artifacts). The worst\r
// case is parallel surfaces that are close to each other.\r
//\r
// Most have a float argument <r> to specify the radius of the feature they represent.\r
// This should be much smaller than the object size.\r
//\r
// Some of them have checks like "if ((-a < r) && (-b < r))" that restrict\r
// their influence (and computation cost) to a certain area. You might\r
// want to lift that restriction or enforce it. We have left it as comments\r
// in some cases.\r
//\r
// usage example:\r
//\r
// float fTwoBoxes(vec3 p) {\r
//   float box0 = fBox(p, vec3(1));\r
//   float box1 = fBox(p-vec3(1), vec3(1));\r
//   return fOpUnionChamfer(box0, box1, 0.2);\r
// }\r
//\r
////////////////////////////////////////////////////////////////\r
\r
\r
// The "Chamfer" flavour makes a 45-degree chamfered edge (the diagonal of a square of size <r>):\r
float fOpUnionChamfer(float a, float b, float r) {\r
	float m = min(a, b);\r
	//if ((a < r) && (b < r)) {\r
		return min(m, (a - r + b)*sqrt(0.5));\r
	//} else {\r
		return m;\r
	//}\r
}\r
\r
// Intersection has to deal with what is normally the inside of the resulting object\r
// when using union, which we normally don't care about too much. Thus, intersection\r
// implementations sometimes differ from union implementations.\r
float fOpIntersectionChamfer(float a, float b, float r) {\r
	float m = max(a, b);\r
	if (r <= 0.) return m;\r
	if (((-a < r) && (-b < r)) || (m < 0.)) {\r
		return max(m, (a + r + b)*sqrt(0.5));\r
	} else {\r
		return m;\r
	}\r
}\r
\r
// Difference can be built from Intersection or Union:\r
float fOpDifferenceChamfer (float a, float b, float r) {\r
	return fOpIntersectionChamfer(a, -b, r);\r
}\r
\r
// The "Round" variant uses a quarter-circle to join the two objects smoothly:\r
float fOpUnionRound(float a, float b, float r) {\r
	float m = min(a, b);\r
	if ((a < r) && (b < r) ) {\r
		return min(m, r - sqrt((r-a)*(r-a) + (r-b)*(r-b)));\r
	} else {\r
	 return m;\r
	}\r
}\r
\r
float fOpIntersectionRound(float a, float b, float r) {\r
	float m = max(a, b);\r
	if ((-a < r) && (-b < r)) {\r
		return max(m, -(r - sqrt((r+a)*(r+a) + (r+b)*(r+b))));\r
	} else {\r
		return m;\r
	}\r
}\r
\r
float fOpDifferenceRound (float a, float b, float r) {\r
	return fOpIntersectionRound(a, -b, r);\r
}\r
\r
\r
// The "Columns" flavour makes n-1 circular columns at a 45 degree angle:\r
float fOpUnionColumns(float a, float b, float r, float n) {\r
	if ((a < r) && (b < r)) {\r
		vec2 p = vec2(a, b);\r
		float columnradius = r*sqrt(2.)/((n-1.)*2.+sqrt(2.));\r
		pR45(p);\r
		p.x -= sqrt(2.)/2.*r;\r
		p.x += columnradius*sqrt(2.);\r
		if (mod(n,2.) == 1.) {\r
			p.y += columnradius;\r
		}\r
		// At this point, we have turned 45 degrees and moved at a point on the\r
		// diagonal that we want to place the columns on.\r
		// Now, repeat the domain along this direction and place a circle.\r
		pMod1(p.y, columnradius*2.);\r
		float result = length(p) - columnradius;\r
		result = min(result, p.x);\r
		result = min(result, a);\r
		return min(result, b);\r
	} else {\r
		return min(a, b);\r
	}\r
}\r
\r
float fOpDifferenceColumns(float a, float b, float r, float n) {\r
	a = -a;\r
	float m = min(a, b);\r
	//avoid the expensive computation where not needed (produces discontinuity though)\r
	if ((a < r) && (b < r)) {\r
		vec2 p = vec2(a, b);\r
		float columnradius = r*sqrt(2.)/n/2.0;\r
		columnradius = r*sqrt(2.)/((n-1.)*2.+sqrt(2.));\r
\r
		pR45(p);\r
		p.y += columnradius;\r
		p.x -= sqrt(2.)/2.*r;\r
		p.x += -columnradius*sqrt(2.)/2.;\r
\r
		if (mod(n,2.) == 1.) {\r
			p.y += columnradius;\r
		}\r
		pMod1(p.y,columnradius*2.);\r
\r
		float result = -length(p) + columnradius;\r
		result = max(result, p.x);\r
		result = min(result, a);\r
		return -min(result, b);\r
	} else {\r
		return -m;\r
	}\r
}\r
\r
float fOpIntersectionColumns(float a, float b, float r, float n) {\r
	return fOpDifferenceColumns(a,-b,r, n);\r
}\r
\r
// The "Stairs" flavour produces n-1 steps of a staircase:\r
float fOpUnionStairs(float a, float b, float r, float n) {\r
	float d = min(a, b);\r
	vec2 p = vec2(a, b);\r
	pR45(p);\r
	p = p.yx - vec2((r-r/n)*0.5*sqrt(2.));\r
	p.x += 0.5*sqrt(2.)*r/n;\r
	float x = r*sqrt(2.)/n;\r
	pMod1(p.x, x);\r
	d = min(d, p.y);\r
	pR45(p);\r
	return min(d, vmax(p -vec2(0.5*r/n)));\r
}\r
\r
// We can just call Union since stairs are symmetric.\r
float fOpIntersectionStairs(float a, float b, float r, float n) {\r
	return -fOpUnionStairs(-a, -b, r, n);\r
}\r
\r
float fOpDifferenceStairs(float a, float b, float r, float n) {\r
	return -fOpUnionStairs(-a, b, r, n);\r
}\r
\r
// This produces a cylindical pipe that runs along the intersection.\r
// No objects remain, only the pipe. This is not a boolean operator.\r
float fOpPipe(float a, float b, float r) {\r
	return length(vec2(a, b)) - r;\r
}\r
\r
////////////////////////////////////////////////////////////////\r
// The end of HG_SDF library\r
////////////////////////////////////////////////////////////////\r
\r
\r
//------------------------------------------------------------------------\r
// Here rather hacky and very basic sphere tracer, feel free to replace.\r
//------------------------------------------------------------------------\r
\r
const int iterations = 2000;\r
const float dist_eps = .0001;\r
const float ray_max = 2000.0;\r
const float fog_density = .001;\r
\r
const float cam_dist = 19.;\r
\r
float fField(vec3 p);\r
\r
\r
vec3 dNormal(vec3 p)\r
{\r
   const vec2 e = vec2(.005,0);\r
   return normalize(vec3(\r
      fField(p + e.xyy) - fField(p - e.xyy),\r
      fField(p + e.yxy) - fField(p - e.yxy),\r
      fField(p + e.yyx) - fField(p - e.yyx) ));\r
}\r
\r
vec4 trace(vec3 ray_start, vec3 ray_dir)\r
{\r
   float ray_len = 0.0;\r
   vec3 p = ray_start;\r
   for(int i=0; i<iterations; ++i) {\r
   	  float dist = fField(p);\r
      if (ray_len > ray_max) return vec4(0.0);\r
      ray_len += dist;\r
   }\r
   return vec4(p, 1.0);\r
}\r
\r
float xnor(float x, in float y) { return abs(x+y-1.0); }\r
\r
vec3 drawHydrogen(vec3 offset, vec3 base_col, vec3 color, float prog) {\r
	 // Ball from SlashingHard\r
	 float sBigx = (vUv.x - 0.5) + offset.x; //(vUv.x + 0.15) - 3.*sin(prog) + offset.x;\r
	 float sBigy = ((vUv.y - 0.5) * (9. / 16.)) + offset.y;\r
	 float dist_to_center = pow(pow(sBigx, 2.) + pow(sBigy, 2.), 0.5);\r
	 if (dist_to_center < 0.01*offset.z) {\r
		return color * offset.z;\r
	 }\r
	 return base_col;\r
}\r
\r
vec3 drawCarbon(vec3 offset, vec3 base_col, vec3 color, float prog) {\r
	 // Ball from SlashingHard\r
	 float sBigx = (vUv.x - 0.5) + offset.x; //(vUv.x + 0.15) - 3.*sin(prog) + offset.x;\r
	 float sBigy = ((vUv.y - 0.5) * (9. / 16.)) + offset.y;\r
	 float dist_to_center = pow(pow(sBigx, 2.) + pow(sBigy, 2.), 0.5);\r
	 if (dist_to_center < 0.02*offset.z) {\r
		return color * offset.z;;\r
	 }\r
	 float orig_sSmallx = sBigx;// - 0.1359;\r
	 float orig_sSmally = sBigy;// - 0.3009;\r
	 float sSmallx = orig_sSmallx + 0.03*sin(cum*0.2 + (0./4.)*PI);\r
	 float sSmally = orig_sSmally + 0.03*cos(cum*0.2 + (0./4.)*PI); \r
	 float dist_to_center_small = pow(pow(sSmallx, 2.) + pow(sSmally, 2.), 0.5);\r
	 if (dist_to_center_small < 0.005*offset.z) {\r
		return vec3(1.) * offset.z;;\r
	 }\r
	 \r
	 float sSmallx2 = orig_sSmallx + 0.03*sin(cum*0.2 + (1./4.)*PI); \r
	 float sSmally2 = orig_sSmally + 0.03*cos(cum*0.2 + (1./4.)*PI);  \r
	 float dist_to_center_small2 = pow(pow(sSmallx2, 2.) + pow(sSmally2, 2.), 0.5);\r
	 if (dist_to_center_small2 < 0.005*offset.z) {\r
		return vec3(1.) * offset.z;;\r
	 }\r
	 \r
	 float sSmallx3 = orig_sSmallx + 0.03*sin(cum*0.2 + (2./4.)*PI); \r
	 float sSmally3 = orig_sSmally + 0.03*cos(cum*0.2 + (2./4.)*PI);  \r
	 float dist_to_center_small3 = pow(pow(sSmallx3, 2.) + pow(sSmally3, 2.), 0.5);\r
	 if (dist_to_center_small3 < 0.005*offset.z) {\r
		return vec3(1.) * offset.z;;\r
	 }\r
	 \r
	 float sSmallx4 = orig_sSmallx + 0.03*sin(cum*0.2 + (3./4.)*PI); \r
	 float sSmally4 = orig_sSmally + 0.03*cos(cum*0.2 + (3./4.)*PI);  \r
	 float dist_to_center_small4 = pow(pow(sSmallx4, 2.) + pow(sSmally4, 2.), 0.5);\r
	 if (dist_to_center_small4 < 0.005*offset.z) {\r
		return vec3(1.) * offset.z;;\r
	 }\r
	 \r
	 float sSmallx5 = orig_sSmallx + 0.03*sin(cum*0.2 + (4./4.)*PI); \r
	 float sSmally5 = orig_sSmally + 0.03*cos(cum*0.2 + (4./4.)*PI);  \r
	 float dist_to_center_small5 = pow(pow(sSmallx5, 2.) + pow(sSmally5, 2.), 0.5);\r
	 if (dist_to_center_small5 < 0.005*offset.z) {\r
		return vec3(1.) * offset.z;;\r
	 }\r
	 \r
	 float sSmallx6 = orig_sSmallx + 0.03*sin(cum*0.2 + (5./4.)*PI); \r
	 float sSmally6 = orig_sSmally + 0.03*cos(cum*0.2 + (5./4.)*PI);  \r
	 float dist_to_center_small6 = pow(pow(sSmallx6, 2.) + pow(sSmally6, 2.), 0.5);\r
	 if (dist_to_center_small6 < 0.005*offset.z) {\r
		return vec3(1.) * offset.z;;\r
	 }\r
	 float sSmallx7 = orig_sSmallx + 0.03*sin(cum*0.2 + (6./4.)*PI); \r
	 float sSmally7 = orig_sSmally + 0.03*cos(cum*0.2 + (6./4.)*PI);  \r
	 float dist_to_center_small7 = pow(pow(sSmallx7, 2.) + pow(sSmally7, 2.), 0.5);\r
	 if (dist_to_center_small7 < 0.005*offset.z) {\r
		return vec3(1.) * offset.z;;\r
	 }\r
	 float sSmallx8 = orig_sSmallx + 0.03*sin(cum*0.2 + (7./4.)*PI); \r
	 float sSmally8 = orig_sSmally + 0.03*cos(cum*0.2 + (7./4.)*PI);  \r
	 float dist_to_center_small8 = pow(pow(sSmallx8, 2.) + pow(sSmally8, 2.), 0.5);\r
	 if (dist_to_center_small8 < 0.005*offset.z) {\r
		return vec3(1.) * offset.z;;\r
	 }\r
	 \r
	 return base_col;\r
}\r
\r
vec3 drawLife(vec3 base, vec2 offset, float prog) {\r
	float x = (vUv.x + offset.x) - 0.5; // - lifeX + prog;\r
	float y = ((vUv.y - 0.5) * (9. / 16.)) + offset.y;\r
\r
	float dist_to_center = pow(pow(x, 2.) + pow(y, 2.), 0.5);\r
	if (dist_to_center < 0.005) {\r
	  return vec3(1., 1., 1.);\r
	}\r
	return base;\r
}\r
\r
vec3 sky_color(vec3 ray_dir, vec3 light_dir)\r
{\r
	float pr = clamp(progression, 0., 1.0);\r
	vec3 carbonColor = vec3(0.024, 0.514, 0.796);\r
	vec3 hydrogenColor = vec3(0.588,0.514,0.796);\r
	vec3 sunColor = vec3(smoothstep(0.992, carbonColor.x, pr), smoothstep(0.722, carbonColor.y, pr), smoothstep(0.0745, carbonColor.z, pr));\r
	bool isTime = time > 96.;\r
	\r
	 float offset_next_sun = 0.795;\r
\r
	 float clampValue = 0.491;\r
	 float prog = clamp(progression, 0., clampValue);\r
	if (isTime) {\r
		sunColor = vec3(0.565,0.859,0.957);\r
	}\r
	float d = light_dir.y*.7+.3;\r
	vec3 base_col; // = vec3(0.765, 0.204, 0.204);\r
	base_col = mix(vec3(.3),vec3((ray_dir.y<0.)?0.:1.),abs(ray_dir.y));\r
	 base_col.yz *= 1.2-(1.*1.15);\r
	 if (isTime) {\r
		base_col = vec3(0.,0.,0.);\r
	 }\r
	 float orig_sBigx = (vUv.x - 0.5);\r
	 float orig_sBigy = ((vUv.y - 0.5) * (9. / 16.));\r
\r
	 float sBigx = orig_sBigx + sunPos.x;\r
	 float sBigy = orig_sBigy + sunPos.y;//0.15*tan(progression*80.);\r
	 float sunX = sBigx;\r
	 float sunY = sBigy - 0.07;\r
	 float dist_to_center = pow(pow(sunX, 2.) + pow(sunY, 2.), 0.5);\r
	 if (dist_to_center < 0.1) {\r
		return sunColor;\r
	 }\r
	 float orig_sSmallx = sBigx;// - 0.1359;\r
	 float orig_sSmally = sBigy - 0.07;// - 0.3009;\r
	 float sSmallx = orig_sSmallx + 0.2*sin(cum*0.2);\r
	 float sSmally = orig_sSmally + 0.2*cos(cum*0.2); \r
	 float dist_to_center_small = pow(pow(sSmallx, 2.) + pow(sSmally, 2.), 0.5);\r
	 if (dist_to_center_small < 0.03) {\r
		return base_col+0.5*d;\r
	 }\r
	 \r
	 float sSmallx2 = orig_sSmallx + 0.2*sin(cum*0.2 + PI);\r
	 float sSmally2 = orig_sSmally + 0.2*cos(cum*0.2 + PI); \r
	 float dist_to_center_small2 = pow(pow(sSmallx2, 2.) + pow(sSmally2, 2.), 0.5);\r
	 if (dist_to_center_small2 < 0.03) {\r
		return base_col+0.5*d;\r
	 }\r
	 base_col -= progression*1.2;\r
\r
	 //vec3 sun1 = drawHydrocarbon(vec3(offset_next_sun, 0., 0.), base_col, d, sunColor, 0.1, prog );\r
	 vec3 life = base_col; //drawLife(base_col, vec2(0.), prog); TODO HER\r
\r
	 for(int molIdex = 0; molIdex < int(moleculesLength); molIdex++)\r
	 {	\r
		vec3 mol = molecules[molIdex];\r
		float rot = (float(molIdex)*8./20.)*PI;\r
		life = drawCarbon(mol, life, carbonColor, prog);\r
		life = drawHydrogen(vec3(mol.x + 0.05*sin(-cum*0.2 + rot), mol.y + 0.05*cos(-cum*0.2 + rot), mol.z), life, hydrogenColor, prog);\r
		life = drawHydrogen(vec3(mol.x + 0.05*sin(-cum*0.2 + rot + PI), mol.y + 0.05*cos(-cum*0.2 + PI + rot), mol.z), life, hydrogenColor, prog);\r
	 }\r
\r
   return life;\r
}\r
// neste scene g\xE5r til svart og s\xE5 kommer stripene\r
\r
vec3 shade(vec3 ray_start, vec3 ray_dir, vec3 light_dir, vec4 hit)\r
{\r
   vec3 fog_color = sky_color(ray_dir, light_dir);\r
\r
   float ray_len;\r
   vec3 color;\r
   if (hit.w == 0.0) {\r
      ray_len = 1e16;\r
      color = fog_color;\r
   } else {\r
      vec3 dir = hit.xyz - ray_start;\r
      vec3 norm = dNormal(hit.xyz);\r
      float diffuse = max(0.0, dot(norm, light_dir));\r
      float spec = max(0.0,dot(reflect(light_dir,norm),normalize(dir)));\r
      spec = pow(spec, 16.0)*.5;\r
       \r
      ray_len = length(dir);\r
   \r
      vec3 base_color = vec3(0.4, 0.4, 0.4);\r
      color = mix(vec3(0.,.1,.3),vec3(1.,1.,.9),diffuse)*base_color +\r
         spec*vec3(1.,1.,.9);\r
\r
      float fog_dist = ray_len;\r
      float fog = 1.0 - 1.0/exp(fog_dist*fog_density);\r
\r
      color = mix(color, fog_color, fog);\r
   }\r
   return color;\r
}\r
\r
\r
void main() {\r
   vec3 color;\r
   float alpha;\r
\r
	alpha = 1.0;\r
	vec2 uv = vUv;\r
	uv.x -= 0.5;\r
	uv.y -= 0.5;\r
	uv.y *= -1.;\r
		vec3 light_dir = normalize(vec3(.5, 1.0, -.25));\r
	\r
	// Simple model-view matrix:\r
	\r
	float ang, si, co;\r
	ang = 0.;\r
	si = sin(ang); co = cos(ang);\r
	mat4 cam_mat = mat4(\r
			co, 0., si, 0.,\r
			0., 1., 0., 0.,\r
		-si, 0., co, 0.,\r
			0., 0., 0., 1.);\r
	ang = 0.;\r
	si = sin(ang);\r
	co = cos(ang);\r
	cam_mat = cam_mat * mat4(\r
			1., 0., 0., 0.,\r
			0., co, si, 0.,\r
			0.,-si, co, 0.,\r
			0., 0., 0., 1.);\r
\r
	vec3 pos = vec3(0., 0., 0.);\r
		/*\r
	*/ \r
	vec3 dir = normalize(vec3(cam_mat*vec4(uv, 1., 0.)));\r
	color = shade(pos, dir, light_dir, trace(pos, dir));\r
	color = pow(color,vec3(.44));\r
    gl_FragColor = vec4(color, alpha);\r
    //gl_FragColor = vec4(1.0, 0.1, 0.1, 1.);\r
}\r
\r
float fField(vec3 p) {\r
    p.z -= time * 4.;\r
    p.x += time * 4.;\r
    \r
    vec2 c = pMod2(p.xz, vec2(.1));\r
    \r
    float dist_to_center = pow(c.x*c.x+c.y*c.y,.5);\r
    \r
    p.y += sin(c.x / 10.) + sin(c.y / 10.) + 5. * cos((c.x + c.y) / 100.) - 10.;\r
    \r
    float ball = fSphere(p, .075);\r
    \r
    return ball;\r
}`;const En=new V(.1951174091,.15);var sd=1;function G1(){var s=Math.sin(sd++)*1e4;return s-Math.floor(s)}function od(){return new w(G1()-.5,G1()*.56-.28,G1()*.75+.25)}const Ad=Array.from({length:100},od);class ad extends zt{constructor(){super();x(this,"startFrame",4970);x(this,"endFrame",5760);x(this,"duration",this.endFrame-this.startFrame);x(this,"scene",new It);x(this,"camera",new Gt(-1,1,1,-1,0,100));x(this,"quad");x(this,"shader",uA);x(this,"cum",0);x(this,"lifeX",0);x(this,"sunPos",new V(En.x,En.y));x(this,"molecules",[new w(1,1,1)]);x(this,"sunPositionIndex",0);x(this,"progression",0);x(this,"sunPositions",[{bean:200,position:new V(En.x,En.y)},{bean:800,position:new V(En.x,En.y)},{bean:812,position:new V(-.4,.2)},{bean:818,position:new V(.1,.15)},{bean:828,position:new V(.08,.17)},{bean:834,position:new V(-.1,0)},{bean:840,position:new V(.05,.1)},{bean:848,position:new V(.03,.05)},{bean:857,position:new V(-.1,-.1)},{bean:861,position:new V(.1,-.1)},{bean:865,position:new V(.1,.1)},{bean:868,position:new V(-.1,.1)},{bean:872,position:new V(0,0)},{bean:883,position:new V(.1,0)},{bean:886,position:new V(.1,.1)},{bean:889,position:new V(0,0)},{bean:891,position:new V(-.1,.1)},{bean:893,position:new V(-.1,0)},{bean:895,position:new V(-.1,-.1)},{bean:902,position:new V(0,0)},{bean:904,position:new V(0,0)},{bean:932,position:new V(0,.07)},{bean:5e3,position:new V(1,1)}]);x(this,"renderTarget",new je(3840,2160));x(this,"calculateKickCount",t=>{let n=1;var i=770;return t>=i+34&&n++,t>=i+36&&n++,t>=i+38&&n++,t>=i+40&&n++,t>=i+42&&n++,t>=i+44&&n++,t>=i+50&&n++,t>=i+52&&n++,t>=i+54&&n++,t>=i+56&&n++,t>=i+58&&n++,t>=i+60&&n++,t>=i+66&&n++,t>=i+68&&n++,t>=i+70&&n++,t>=i+72&&n++,t>=i+74&&n++,t>=i+76&&n++,t>=i+82&&n++,t>=i+84&&n++,t>=i+86&&n++,t>=i+88&&n++,t>=i+90&&n++,t>=i+92&&n++,t>=i+98&&n++,t>=i+100&&n++,t>=i+102&&n++,t>=i+104&&n++,t>=i+106&&n++,t>=i+108&&n++,t>=i+114&&n++,t>=i+116&&n++,t>=i+118&&n++,t>=i+120&&n++,t>=i+122&&n++,t>=i+124&&n++,t>=i+130&&n++,t>=i+132&&n++,t>=i+134&&n++,t>=i+136&&n++,t>=i+138&&n++,t>=i+140&&n++,n});this.quad=new ge(new Mt(2,2),new Ze({uniforms:{time:{value:0},color:{value:new ie(0)},progression:{value:0},cum:{value:0},audio1:{value:0},audio2:{value:0},audio3:{value:0},lifeX:{value:0},sunPos:{value:this.sunPos},molecules:{value:this.molecules},moleculesLength:{value:0}},fragmentShader:uA,vertexShader:Et,side:At}).clone()),this.scene.add(this.quad),this.quad.material.uniforms.color.value=new ie("#992F2E"),this.cum=0,this.sunPositionIndex=0}resize(t,n){this.renderTarget.setSize(t,n)}update(t){this.progression=1-(this.endFrame-t)/this.duration,this.quad.material.uniforms.progression.value=this.progression,this.cum+=Math.abs(Ft(t,0,3)),this.quad.material.uniforms.audio1.value=Math.tanh(Ft(t,0,3)),this.quad.material.uniforms.audio2.value=Math.tanh(Ft(t,1,3)),this.quad.material.uniforms.audio3.value=Math.tanh(Ft(t,2,3));const n=2*this.progression-.03;this.lifeX=1*n*n*n}render(t,n,i){var r=i.sync.step;r>=928?this.molecules=this.molecules.map(c=>{let l=.05;c.y<0&&(l=-.05);let h=.05;return c.x<0&&(h=-.05),new w(c.x+h,c.y+l,c.z)}):r>930?this.molecules=[]:this.molecules=Ad.slice(0,this.calculateKickCount(r)),this.sunPositionIndex=this.sunPositions.map(c=>c.bean).filter(c=>c<=r).length-1;const o=this.sunPositions[this.sunPositionIndex],A=this.sunPositions[this.sunPositionIndex+1],a=1-(i.sync.frameForStep(A.bean)-t)/(i.sync.frameForStep(A.bean)-i.sync.frameForStep(o.bean));this.sunPos=new V(w2(o.position.x,A.position.x,a),w2(o.position.y,A.position.y,a)),this.quad.material.uniforms.time.value=t/60,this.quad.material.uniforms.cum.value=this.cum,this.quad.material.uniforms.lifeX.value=this.lifeX,this.quad.material.uniforms.sunPos.value=this.sunPos,this.quad.material.uniforms.molecules.value=this.molecules.flatMap(c=>c.toArray()),this.quad.material.uniforms.moleculesLength.value=this.molecules.length,n.setRenderTarget(this.renderTarget),n.render(this.scene,this.camera)}}class cd extends zt{constructor(){super();x(this,"scene",new It);x(this,"camera",new Gt(-1,1,1,-1));x(this,"renderTarget",new je(640,360));x(this,"screen",new ge(new it(2,2,2),new Qt));x(this,"children",da({slashinghardslasher:id,slashinghard:ur,slashingHardStart:rd,starsandstripes:J4,heartbuilder:O4,balllandscape:Z4,triangulatedlandscape:ed,ship:X4,hexeswithcream:q4,quarks:$4,molecule:td,fallingSuns:ad}));this.scene.add(this.screen),this.scene.add(this.camera),this.camera.position.z=10}resize(t,n){this.renderTarget.setSize(t,n)}render(t,n,i){var r;this.screen.material.map=null,this.children.starsandstripes.isActive&&(this.screen.material.map=this.children.starsandstripes.renderTarget.texture),this.children.heartbuilder.isActive&&(this.screen.material.map=this.children.heartbuilder.renderTarget.texture),this.children.balllandscape.isActive&&(this.screen.material.map=this.children.balllandscape.renderTarget.texture),this.children.triangulatedlandscape.isActive&&(this.screen.material.map=this.children.triangulatedlandscape.renderTarget.texture),this.children.ship.isActive&&(this.screen.material.map=this.children.ship.renderTarget.texture),this.children.hexeswithcream.isActive&&(this.screen.material.map=this.children.hexeswithcream.renderTarget.texture),this.children.quarks.isActive&&(this.screen.material.map=this.children.quarks.renderTarget.texture),this.children.molecule.isActive&&(this.screen.material.map=this.children.molecule.renderTarget.texture),this.children.slashinghardslasher.isActive&&(this.screen.material.map=this.children.slashinghardslasher.renderTarget.texture),this.children.slashingHardStart.isActive&&(this.screen.material.map=this.children.slashingHardStart.renderTarget.texture),(r=this.children)!=null&&r.fallingSuns.isActive&&(this.screen.material.map=this.children.fallingSuns.renderTarget.texture),this.screen.material.needsUpdate=!0,n.render(this.scene,this.camera)}}const Bt=new lr({music:{src:va,bpm:145,subdivision:4,beatOffset:0},root:new cd,productionMode:!0,rendererOptions:{powerPreference:"high-performance"},toneMapping:mA});{const s=document.createElement("div");s.style.position="absolute",s.style.left="0px",s.style.right="0px",s.style.top="0px",s.style.bottom="0px",s.style.background="rgb(255, 65, 131)",s.style.display="flex",s.style.alignItems="center",s.style.justifyContent="center",document.body.appendChild(s);{const e=1.7777777777777777;var ld="CHEMISTRY",hd="Ninjadev",ud="Black Valley",dd="2024";const t=n=>new Promise(i=>setTimeout(i,n));(async()=>{s.innerHTML=`
  <div style="line-height:1.3;text-align:center;color:#1f1502;width:100%;max-width:500px;
  font-size:20px;
  font-weight: 100;
  font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, segoe ui, helvetica neue, helvetica, Cantarell, Ubuntu, roboto, noto, arial, sans-serif;"
  >
  <div style="font-size:64px;margin-bottom:32px;
  font-family: Iowan Old Style, Apple Garamond, Baskerville, Times New Roman, Droid Serif, Times, Source Serif Pro, serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol;
  "><div style="font-size:24px">${ld}</div></div>
  <div style=margin-bottom:32px>by</div>
  <div style=margin-bottom:64px>${hd}</div>

  <button style="visibility:hidden; padding: 4px 16px; font-size:48px;
  font-family: Iowan Old Style, Apple Garamond, Baskerville, Times New Roman, Droid Serif, Times, Source Serif Pro, serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol;
  ">Start</button>
  <div id=loading>Loading, please wait... (could take a while, hang in there!)</div>


  <div style="bottom:16px;position:absolute;bottom:16px;left:0;right:0">Released at ${ud} ${dd}.</div>
  </div>
      `,await t(50),Bt.isFullscreen=!0;let n=window.innerWidth*2,i=window.innerHeight*2;n/i>=e?n=i*e:i=n/e,Bt.resize(n,i),Bt.jumpToFrame(0),await t(100),Bt.resize(n,i);const r=document.querySelector("#loading");r.style.visibility="hidden";const o=document.querySelector("button");o==null||o.addEventListener("click",async()=>{var l;document.body.requestFullscreen(),t(1e3);let A=window.innerWidth,a=window.innerHeight;A/a>=e?A=a*e:a=A/e,Bt.renderer.domElement.width=A,Bt.renderer.domElement.height=a,Bt.renderer.domElement.style.width=A+"px",Bt.renderer.domElement.style.height=a+"px",Bt.renderer.domElement.style.position="absolute",Bt.renderer.domElement.style.left="50%",Bt.renderer.domElement.style.top="50%",Bt.renderer.domElement.style.transform="translate(-50%, -50%)",Bt.resize(A,a),Bt.renderer.setPixelRatio(1);const c=(l=document.querySelector("select"))==null?void 0:l.value;Bt.subtitlePlacement=c,await t(200);for(let h=0;h<100;h++)await t(1),s.style.opacity=1-h/100;s.remove(),await t(1500),s.remove(),Bt.music.play()}),o.style.visibility="visible"})()}}Bt.loop();
